(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{450:function(t,a,s){"use strict";s.r(a);var i=s(0),l=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"散列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#散列表"}},[t._v("#")]),t._v(" 散列表")]),t._v(" "),s("p",[t._v("散列表的英文叫 “Hash Table”，也被称为它 “哈希表”。")]),t._v(" "),s("p",[t._v("再说明什么是散列表之前，先假设一个场景。")]),t._v(" "),s("details",{staticClass:"custom-block details",attrs:{open:"open"}},[s("summary",[t._v("例子：")]),t._v(" "),s("p",[t._v("假如我们有 89 名选手参加学校运动会。为了方便记录成绩，每个选手胸前都会贴上自己的参赛号码。号码的编号用 6 位数字来表示，\b 规则是前两位表示年级，中间两位表示班级，最后两位是选手编号(1 - 89)。")]),t._v(" "),s("p",[t._v("现在我们希望编程实现这样一个功能，通过编号快速找到对应的选手信息。\b 我们知道数组支持按照下标随机访问数据，并且时间复杂度是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(1)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("。尽管我们不能直接把编号作为数组下标，但我们可以截取参赛编号的后两位作为数组下标，来存取选手信息数据。")],1),t._v(" "),s("p",[t._v("当通过参赛编号查询选手信息的时候，我们用同样的方法，取参赛编号的后两位，作为数组下标，来读取数组中的数据。")])]),t._v(" "),s("p",[t._v("上例就是典型的散列思想。其中：")]),t._v(" "),s("ul",[s("li",[t._v("参赛选手的编号我们叫作"),s("strong",[t._v("键")]),t._v("（key）或者"),s("strong",[t._v("关键字")]),t._v("。我们用它来标识一个选手；")]),t._v(" "),s("li",[t._v("我们把参赛编号转化为数组下标的映射方法就叫作"),s("strong",[t._v("散列函数")]),t._v("（哈希函数）；")]),t._v(" "),s("li",[t._v("散列函数计算得到的值就叫作"),s("strong",[t._v("散列值")]),t._v("（哈希值）；")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-14-16-15-27.png",alt:"2020-1-14-16-15-27.png"}})]),t._v(" "),s("p",[t._v("总结一下：")]),t._v(" "),s("ul",[s("li",[t._v("散列表利用了数组支持按照下标随机访问的时候，时间复杂度是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(1)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" 的特性；")],1),t._v(" "),s("li",[t._v("我们通过散列函数把元素的键值映射为下标，然后将数据存储在数组中对应下标的位置；")]),t._v(" "),s("li",[t._v("当我们按照键值查询元素时，我们用同样的散列函数，将键值转化数组下标，从对应的数组下标的位置取数据；")])]),t._v(" "),s("h2",{attrs:{id:"散列函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#散列函数"}},[t._v("#")]),t._v(" 散列函数")]),t._v(" "),s("p",[t._v("散列函数，我们可以把它定义成 "),s("code",[t._v("hash(key)")]),t._v("，其中 "),s("code",[t._v("key")]),t._v(" 表示元素的键值，"),s("code",[t._v("hash(key)")]),t._v(" 的值表示经过散列函数计算得到的散列值。")]),t._v(" "),s("p",[s("strong",[t._v("散列函数设计的基本要求")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("散列函数计算得到的散列值是一个非负整数；")]),t._v(" "),s("li",[t._v("如果 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("1")]),s("mo",[t._v("=")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("2")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("key1 = key2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("2")])])])])]),t._v("，那 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("=")]),s("mo",[t._v("=")]),s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("2")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key1) == hash(key2)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")])]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.36687em","vertical-align":"0em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("；")],1),t._v(" "),s("li",[t._v("如果 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("1")]),s("mo",{attrs:{mathvariant:"normal"}},[t._v("≠")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("2")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("key1 ≠ key2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[s("span",{staticClass:"mrel"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.69444em"}},[s("span",{staticStyle:{top:"-3em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"rlap"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"inner"},[s("span",{staticClass:"mrel"},[t._v("")])]),s("span",{staticClass:"fix"})])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.19444em"}},[s("span")])])])])]),s("span",{staticClass:"mrel"},[t._v("=")])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("2")])])])])]),t._v("，那 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",{attrs:{mathvariant:"normal"}},[t._v("≠")]),s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mn",[t._v("2")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key1) ≠ hash(key2)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[s("span",{staticClass:"mrel"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.69444em"}},[s("span",{staticStyle:{top:"-3em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"rlap"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"inner"},[s("span",{staticClass:"mrel"},[t._v("")])]),s("span",{staticClass:"fix"})])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.19444em"}},[s("span")])])])])]),s("span",{staticClass:"mrel"},[t._v("=")])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("；")],1)]),t._v(" "),s("p",[s("strong",[t._v("在真实的情况下，要想找到一个不同的 key 对应的散列值都不一样的散列函数，几乎是不可能的")]),t._v("。即便像业界著名的 MD5、SHA、CRC 等哈希算法，也无法完全避免这种散列冲突。而且，因为数组的存储空间有限，也会加大散列冲突的概率")]),t._v(" "),s("h2",{attrs:{id:"散列冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#散列冲突"}},[t._v("#")]),t._v(" 散列冲突")]),t._v(" "),s("p",[t._v("想通过写一个完美的散列函数来结局冲突问题，成本太大。我们需要通过其他途径来解决。常用的散列冲突解决方法有两类，"),s("strong",[t._v("开放寻址法")]),t._v("（open addressing）和"),s("strong",[t._v("链表法")]),t._v("（chaining）。")]),t._v(" "),s("h3",{attrs:{id:"开放寻址法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开放寻址法"}},[t._v("#")]),t._v(" 开放寻址法")]),t._v(" "),s("p",[t._v("核心思想是，"),s("strong",[t._v("如果出现了散列冲突，我们就重新探测一个空闲位置，将其插入")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"线性探测法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性探测法"}},[t._v("#")]),t._v(" 线性探测法")]),t._v(" "),s("p",[t._v("一个比较简单的探测方法，"),s("strong",[t._v("线性探测")]),t._v("（Linear Probing）：")]),t._v(" "),s("p",[t._v("当我们往散列表中插入数据时，如果某个数据经过散列函数散列之后，存储位置已经被占用了，我们就从当前位置开始，依次往后查找，看是否有空闲位置，直到找到为止。")]),t._v(" "),s("p",[t._v("在散列表中查找元素的过程有点儿类似插入过程。我们通过散列函数求出要查找元素的键值对应的散列值，然后比较数组中下标为散列值的元素和要查找的元素。如果相等，则说明就是我们要找的元素；否则就顺序往后依次查找。如果遍历到数组中的空闲位置，还没有找到，就说明要查找的元素并没有在散列表中。")]),t._v(" "),s("p",[t._v("但是，如果这个空闲位置是我们后来删除的，就会导致原来的查找算法失效。本来存在的数据，会被认定为不存在。\b")]),t._v(" "),s("p",[t._v("解决办法是我们可以将删除的元素，特殊标记为 "),s("code",[t._v("deleted")]),t._v("。当线性探测查找的时候，遇到标记为 "),s("code",[t._v("deleted")]),t._v(" 的空间，并不是停下来，而是继续往下探测。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-14-16-39-27.png",alt:"2020-1-14-16-39-27.png"}})]),t._v(" "),s("p",[s("strong",[t._v("线性探测法其实存在很大问题。当散列表中插入的数据越来越多时，散列冲突发生的可能性就会越来越大，空闲位置会越来越少，线性探测的时间就会越来越久")]),t._v("。极端情况下，我们可能需要探测整个散列表。")]),t._v(" "),s("h4",{attrs:{id:"二次探测法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二次探测法"}},[t._v("#")]),t._v(" 二次探测法")]),t._v(" "),s("p",[t._v("二次探测，跟线性探测很像，线性探测每次探测的步长是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("1")])])])])]),t._v("，它探测的下标序列就是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("mn",[t._v("0")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+0")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("0")])])])])]),t._v("，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("1")])])])])]),t._v("，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("mn",[t._v("2")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("2")])])])])]),t._v(" "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("......")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.10556em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")])])])])])],1),t._v(" "),s("p",[s("strong",[t._v("二次探测法将每次探测的步长变成了原来的 “二次方”")]),t._v("，也就是说，它探测的下标序列就是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("mn",[t._v("0")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+0")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("0")])])])])]),t._v("，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("msup",[s("mn",[t._v("1")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+1^2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.8141079999999999em"}},[s("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])])])])])])])])])]),t._v("，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("h")]),s("mi",[t._v("a")]),s("mi",[t._v("s")]),s("mi",[t._v("h")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mi",[t._v("e")]),s("mi",[t._v("y")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",[t._v("+")]),s("msup",[s("mn",[t._v("2")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("hash(key)+2^2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"mord mathdefault"},[t._v("s")]),s("span",{staticClass:"mord mathdefault"},[t._v("h")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mord mathdefault"},[t._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[t._v("y")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.8141079999999999em"}},[s("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])])])])])])])])])]),t._v(" "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v(".")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("......")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.10556em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")]),s("span",{staticClass:"mord"},[t._v(".")])])])])])],1),t._v(" "),s("h4",{attrs:{id:"双重散列法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双重散列法"}},[t._v("#")]),t._v(" 双重散列法")]),t._v(" "),s("p",[s("strong",[t._v("所谓双重散列，意思就是使用不仅一个散列函数")]),t._v("。我们先用第一个散列函数，如果计算得到的存储位置已经被占用，再用第二个散列函数，依次类推，直到找到空闲的存储位置。")]),t._v(" "),s("h3",{attrs:{id:"链表法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表法"}},[t._v("#")]),t._v(" 链表法")]),t._v(" "),s("p",[t._v("链表法是一种更加常用的散列冲突解决办法。我们将散列表中的每个位置看作是一个“桶”（bucket）或者 “槽”（slot）。"),s("strong",[t._v("每个槽会对应一条链表，所有散列值相同的元素我们都放到相同槽位对应的链表中")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-14-16-55-42.png",alt:"2020-1-14-16-55-42.png"}})]),t._v(" "),s("p",[s("strong",[t._v("当插入的时候，我们只需要通过散列函数计算出对应的散列槽位，将其插入到对应链表中即可")]),t._v("，所以插入的时间复杂度是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(1)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("。"),s("strong",[t._v("当查找、删除一个元素时，我们同样通过散列函数计算出对应的槽，然后遍历链表查找或者删除")]),t._v("。")],1),t._v(" "),s("p",[t._v("查找或删除操作的时间复杂度跟链表的长度 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("k")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("k")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")])])])])]),t._v(" 成正比，也就是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("k")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(k)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("。对于散列比较均匀的散列函数来说，理论上讲，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("k")]),s("mo",[t._v("=")]),s("mi",[t._v("n")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("k=n/m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("n")]),s("span",{staticClass:"mord"},[t._v("/")]),s("span",{staticClass:"mord mathdefault"},[t._v("m")])])])])]),t._v("，其中 n 表示散列中数据的个数，"),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("m")])])])])]),t._v(" 表示散列表中 “槽” 的个数。")],1),t._v(" "),s("h2",{attrs:{id:"装载因子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#装载因子"}},[t._v("#")]),t._v(" 装载因子")]),t._v(" "),s("p",[t._v("不管采用哪种方法解决散列冲突，当散列表中空闲位置不多的时候，散列冲突的概率就会大大提高。为了尽可能保证散列表的操作效率，一般情况下，"),s("strong",[t._v("会尽可能保证散列表中有一定比例的空闲槽位")]),t._v("。我们用"),s("strong",[t._v("装载因子")]),t._v("（load factor）来表示空位的多少。"),s("strong",[t._v("装载因子越大，说明空闲位置越少，冲突越多，散列表的性能会下降")]),t._v("。")]),t._v(" "),s("p",[t._v("装载因子的计算公式是：")]),t._v(" "),s("section",[s("eqn",[s("span",{staticClass:"katex-display"},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mtext",[t._v("装载因子")]),s("mo",[t._v("=")]),s("mtext",[t._v("填入表中的元素个数")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mtext",[t._v("散列表的长度")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("装载因子 = 填入表中的元素个数 / 散列表的长度")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord cjk_fallback"},[t._v("装")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("载")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("因")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("子")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord cjk_fallback"},[t._v("填")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("入")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("表")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("中")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("的")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("元")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("素")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("个")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("数")]),s("span",{staticClass:"mord"},[t._v("/")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("散")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("列")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("表")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("的")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("长")]),s("span",{staticClass:"mord cjk_fallback"},[t._v("度")])])])])])])],1),s("h3",{attrs:{id:"动态扩容-动态缩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态扩容-动态缩容"}},[t._v("#")]),t._v(" 动态扩容 & 动态缩容")]),t._v(" "),s("p",[t._v("对于有频繁插入和删除操作的动态散列表来说，数据集合是频繁变动的，我们事先无法预估将要加入的数据个数，所以我们也无法事先申请一个足够大的散列表。随着数据慢慢加入，装载因子就会慢慢变大。当装载因子大到一定程度之后，散列冲突就会变得不可接受。这个时候，我们该如何处理呢？")]),t._v(" "),s("p",[t._v("我们可以采用数组 “"),s("strong",[t._v("动态扩容")]),t._v("” 的做法。但因为散列表的大小变了，数据的存储位置也变了，所以我们需要通过散列函数重新计算每个数据的存储位置。")]),t._v(" "),s("p",[t._v("对于动态散列表，随着数据的删除，散列表中的数据会越来越少，空闲空间会越来越多。如果我们对空间消耗非常敏感，我们可以在装载因子小于某个值之后，启动 “"),s("strong",[t._v("动态缩容")]),t._v("”。")]),t._v(" "),s("h3",{attrs:{id:"如何提高扩容效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何提高扩容效率"}},[t._v("#")]),t._v(" 如何提高扩容效率")]),t._v(" "),s("p",[t._v("当装载因子已经到达阈值，需要先进行扩容，再插入数据。这个操作的时间复杂度比单独进行插入数据要大。如果散列表数据很多，时间上就可能会让人无法接受。")]),t._v(" "),s("p",[t._v("为了解决一次性扩容耗时过多的情况，我们可以"),s("strong",[t._v("将扩容操作穿插在插入操作的过程中，分批完成")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("当装载因子触达阈值之后，我们只申请新空间，但并不将老的数据搬移到新散列表中；")]),t._v(" "),s("li",[t._v("当有新数据要插入时，我们将新数据插入新散列表中，并且从老的散列表中拿出一个数据放入到新散列表。每次插入一个数据到散列表，我们都重复上面的过程；")]),t._v(" "),s("li",[t._v("经过多次插入操作之后，老的散列表中的数据就一点一点全部搬移到新散列表中了；")])]),t._v(" "),s("p",[t._v("这种实现方式，任何情况下，插入一个数据的时间复杂度都是 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mn",[t._v("1")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(1)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-14-17-43-30.png",alt:"2020-1-14-17-43-30.png"}})]),t._v(" "),s("p",[t._v("对于查询操作，为了兼容了新、老散列表中的数据，我们先从新散列表中查找，如果没有找到，再去老的散列表中查找。")]),t._v(" "),s("h2",{attrs:{id:"哈希算法（散列算法）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希算法（散列算法）"}},[t._v("#")]),t._v(" 哈希算法（散列算法）")]),t._v(" "),s("p",[t._v("哈希算法历史悠久，业界著名的哈希算法也有很多，比如 MD5、SHA 等。在我们平时的开发中，基本上都是拿现成的直接用。这一节主要讲解，在实际的开发中，我们该如何用哈希算法解决问题。")]),t._v(" "),s("p",[t._v("哈希算法的定义和原理非常简单："),s("strong",[t._v("将任意长度的二进制值串映射为固定长度 128 位的二进制值串")]),t._v("。这个映射的规则就是哈希算法，而通过原始数据映射之后得到的二进制值串就是"),s("strong",[t._v("哈希值")]),t._v("。")]),t._v(" "),s("p",[t._v("一个优秀的哈希算法，需要满足几点要求：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("从哈希值不能反向推导出原始数据")])]),t._v(" "),s("li",[s("strong",[t._v("对输入数据非常敏感")]),t._v("，哪怕原始数据只修改了一个 Bit，最后得到的哈希值也大不相同；")]),t._v(" "),s("li",[s("strong",[t._v("散列冲突的概率要很小")]),t._v("，对于不同的原始数据，哈希值相同的概率非常小；")]),t._v(" "),s("li",[s("strong",[t._v("执行效率要尽量高效")]),t._v("，针对较长的文本，也能快速地计算出哈希值；")])])])}),[],!1,null,null,null);a.default=l.exports}}]);