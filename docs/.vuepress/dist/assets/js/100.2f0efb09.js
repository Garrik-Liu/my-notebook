(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{216:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.")]),t._m(1),n("p",[t._v("『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.")]),t._m(2),n("p",[t._v("下面就是一个 MongoDB 文档 (document) 示例:")]),t._m(3),t._m(4),n("p",[t._v("前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?")]),t._m(5),t._m(6),t._m(7),n("p",[t._v("在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.")]),t._m(8),t._m(9),t._m(10),t._m(11),n("p",[t._v("文档中的值可以是多种不同的数据类型. 在一个集合中各个文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型.")]),n("p",[t._v("MongoDB 区分类型和大小写. 例如，下面的两个文档是不同的：")]),t._m(12),n("p",[t._v('在给文档的\b "键" 命名时还需要注意:')]),t._m(13),t._m(14),t._m(15),n("p",[t._v("\b下面是一个集合示例:")]),t._m(16),n("p",[t._v("虽然 MongoDB 对集合中的文档类型没有要求, 但通常情况下我们插入集合的数据都会有一定的关联性.  这样会降低查询\b特定文档的复杂度, 并且提升查询速度.")]),n("p",[t._v("集合命名时需要注意:")]),t._m(17),t._m(18),t._m(19),t._m(20),n("p",[t._v("数据库名可以是满足以下条件的任意 UTF-8 字符串:")]),t._m(21),n("p",[t._v("数据库最终会变成文件系统里的文件，而数据库名就是相应的文件名")]),n("p",[t._v("\b文档, 表单, 数据库之间的关系如下图:")]),t._m(22),t._m(23),n("p",[t._v("这篇文章我不想过多讲安装步骤, 大家可以自行去查阅方法.")]),n("p",[n("a",{attrs:{href:"http://www.runoob.com/mongodb/mongodb-window-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows 平台安装 MongoDB - 菜鸟教程"),n("OutboundLink")],1),n("a",{attrs:{href:"http://www.runoob.com/mongodb/mongodb-osx-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mac 平台安装 MongoDB - 菜鸟教程"),n("OutboundLink")],1)]),n("p",[t._v("为了更方便的管理 MongoDB 数据库, 我推荐使用 Studio 3T 可视化工具.")]),n("p",[n("a",{attrs:{href:"https://studio3t.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Studio 3T - 官网"),n("OutboundLink")],1)]),n("p",[t._v("使用方法可参照下面链接内容:")]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/weixin_39999535/article/details/81383196",target:"_blank",rel:"noopener noreferrer"}},[t._v("Studio 3T 使用方法"),n("OutboundLink")],1)]),t._m(24),n("p",[t._v("想要在 Node.js 中使用\b MongoDB, 要先安装 "),n("a",{attrs:{href:"https://www.npmjs.com/package/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongodb 模块"),n("OutboundLink")],1),t._v(", 具体步骤不赘述.")]),t._m(25),n("p",[t._v("要在 MongoDB 中创建一个数据库，首先我们需要创建一个 MongoClient 对象，然后配置好指定的 URL 和 端口号。 如果数据库不存在，MongoDB 将创建数据库并建立连接。")]),t._m(26)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"使用-mongodb-数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-mongodb-数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用\b MongoDB 数据库")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"什么是-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-mongodb","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是 MongoDB")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("MongoDB 将数据存储为一个文档，数据结构由键值对 "),s("code",[this._v("key:value")]),this._v(" 组成.  MongoDB 文档类似于 JSON 对象.  字段值可以包含其他文档，数组及文档数组.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Garrik"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"age"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("21")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Male"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"job"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Frontend Developer"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"关系型数据库-非关系型数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库-非关系型数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 关系型数据库 & 非关系型数据库")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("关系型数据库")]),this._v(' 』以 "行" 和 "列" 组成的 "二维表格" 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 "元组"（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.')])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("非关系数据库")]),this._v(' 』以 "键值对" 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等')])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"mongodb-基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-基础概念","aria-hidden":"true"}},[this._v("#")]),this._v(" MongoDB 基础概念")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"文档-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档-document","aria-hidden":"true"}},[this._v("#")]),this._v(" 文档 (document)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("文档")]),this._v(' 』是\b一组 "键值对" 的有序集合.  是 MongoDB 的核心概念.  文档的数据结构和 JSON 基本一样, \b格式名称为 BSON, 是一种类似于 JSON 的二进制形式的存储格式.  下面是一个文档示例\b:')])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Garrik"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"age"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("21")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v('"name"')]),t._v(" 和 "),n("code",[t._v('"age"')]),t._v(' 是这个文档的 "键" (key), '),n("code",[t._v('"Garrik"')]),t._v(" 和 "),n("code",[t._v("21")]),t._v(' 是 "值" (value)')])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token property"}},[t._v('"foo"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token property"}},[t._v('"Foo"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"3"')]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("文档的键是字符串")]),n("li",[t._v("键不能含有 "),n("code",[t._v("\\0")]),t._v(" (空字符)。这个字符用来表示键的结尾")]),n("li",[n("code",[t._v(".")]),t._v(" 和 "),n("code",[t._v("$")]),t._v(" 有特别的意义，只有在特定环境下才能使用")]),n("li",[t._v("以下划线 "),n("code",[t._v("_")]),t._v("开头的键是保留的 (不是严格要求的)")]),n("li",[t._v("一个文档内不能有重复的键")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"集合-collection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合-collection","aria-hidden":"true"}},[this._v("#")]),this._v(" 集合 (collection)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("集合")]),this._v(" 』就是一组文档，如果将 MongoDB 中的一个文档比喻为关系型数据库中的一行，那么一个集合就相当于一张表.  集合存在于数据库中，当第一个文档插入时，集合就会被创建.  集合没有固定的结构，一个集合里面的文档可以是各式各样的，这被称为 『 动态模式 』")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.baidu.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"百度"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.google.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Google"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"query"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token property"}},[t._v('"search"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"前端开发"')]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.zhihu.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"知乎"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"username"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"罐装汽水_Garrik"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("集合名不能是空字符串。")]),n("li",[t._v("集合名不能含有 "),n("code",[t._v("\\0")]),t._v("（空字符)，这个字符表示集合名的结尾。")]),n("li",[t._v("集合名不能以 "),n("code",[t._v("system.")]),t._v(" 开头，这是为系统集合保留的前缀。")]),n("li",[t._v("用户创建的集合名字不能含有保留字符 "),n("code",[t._v("$")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"数据库-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库-database","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据库 (database)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("数据库")]),this._v(" 』由多个集合组成.  在 MongoDB 中可以建立多个数据库。每个数据库都有独立的权限，即便是在磁盘上，不同的数据库也放置在不同的文件中。按照经验，我们将有关一个应用程序的所有数据都存储在同一个数据库中。要想在同一个 MongoDB 服务器上存放多个应用程序或者用户的数据，就需要使用不同的数据库。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("MongoDB 的默认数据库为 "),s("code",[this._v('"db"')]),this._v("，该数据库存储在 "),s("code",[this._v("data")]),this._v(" 目录中。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("不是空字符串")]),n("li",[t._v("不得含有 "),n("code",[t._v("空格")]),t._v("、"),n("code",[t._v(".")]),t._v("、"),n("code",[t._v("$")]),t._v("、"),n("code",[t._v("/")]),t._v("、"),n("code",[t._v("\\")]),t._v(" 和 "),n("code",[t._v("\\0")]),t._v(" (空字符)")]),n("li",[t._v("数据库名区分大小写, 推荐全部小写")]),n("li",[t._v("最多 64 字节")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.imgur.com/LhMQBtL.png",alt:"Screen Shot 2018-10-14 at 5.48.11 PM"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"安装-mongodb-可视化工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-mongodb-可视化工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装 MongoDB & 可视化工具")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"在-node-js-中使用-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-node-js-中使用-mongodb","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 Node.js 中使用 MongoDB")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建数据库")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 引入模块")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" MongoClient "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'mongodb'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MongoClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"mongodb://localhost:27017/runoob"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nMongoClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" db"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"数据库已创建!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])}],!1,null,null,null);s.default=e.exports}}]);