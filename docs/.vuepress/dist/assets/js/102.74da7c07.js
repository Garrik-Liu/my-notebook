(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{309:function(a,t,s){"use strict";s.r(t);var v=s(0),i=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"jdbc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc"}},[a._v("#")]),a._v(" JDBC")]),a._v(" "),s("h2",{attrs:{id:"jdbc-入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-入门"}},[a._v("#")]),a._v(" JDBC 入门")]),a._v(" "),s("h3",{attrs:{id:"什么是-jdbc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-jdbc"}},[a._v("#")]),a._v(" 什么是 JDBC")]),a._v(" "),s("p",[s("strong",[a._v("JDBC 介绍")]),a._v("：")]),a._v(" "),s("ul",[s("li",[a._v("全称 Java 数据库连接 (Java Database Connectivity);")]),a._v(" "),s("li",[a._v("用于在 Java 语言编程中与数据库连接的 API；")]),a._v(" "),s("li",[a._v("由一组用 Java 语言编写的“类”和“接口”组成；")]),a._v(" "),s("li",[a._v("JDBC 包含了数据库操作的规范。定义了相关的类，接口，方法， 但是并没有提供具体实现；")]),a._v(" "),s("li",[a._v("各大数据库厂商会提供对 JDBC 的实现；")]),a._v(" "),s("li",[a._v("简单说, JDBC 提供了操纵数据库的接口，但是没有具体实现。 通过引入不同的驱动包（"),s("code",[a._v(".jar")]),a._v(" 文件），就可以连接到不同的数据库；")])]),a._v(" "),s("p",[s("strong",[a._v("JDBC 的 API 通常用于")]),a._v("：")]),a._v(" "),s("ul",[s("li",[a._v("连接到数据库")]),a._v(" "),s("li",[a._v("创建 SQL 或 MySQL 语句")]),a._v(" "),s("li",[a._v("在数据库中执行 SQL 或 MySQL 查询")]),a._v(" "),s("li",[a._v("查看和修改数据库中的数据记录")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-48-39.png",alt:"2020-1-26-22-48-39.png"}})]),a._v(" "),s("h3",{attrs:{id:"使用-jdbc-建立数据库连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-jdbc-建立数据库连接"}},[a._v("#")]),a._v(" 使用 JDBC 建立数据库连接")]),a._v(" "),s("p",[s("strong",[a._v("建立 JDBC 连接所涉及以下四个步骤")]),a._v("：")]),a._v(" "),s("ul",[s("li",[a._v("导入 JDBC 包：使用 "),s("code",[a._v("import")]),a._v(" 语句在 Java 代码开头位置导入所需的类；")]),a._v(" "),s("li",[a._v("注册 JDBC 驱动程序：使 JVM 将所需的驱动程序实现加载到内存中，从而可以满足 JDBC 请求。使用 "),s("code",[a._v("Class.forName()")]),a._v(" 方法，将驱动程序的类文件动态加载到内存中，并将其自动注册；")]),a._v(" "),s("li",[a._v("数据库 URL 配置：创建一个正确格式化的地址，指向要连接到的数据库；MySQL URL 格式为："),s("code",[a._v("jdbc:mysql://hostname/")]),a._v("databaseName；")]),a._v(" "),s("li",[a._v("创建连接对象：调用 DriverManager 对象的 "),s("code",[a._v("getConnection()")]),a._v(" 方法来建立实际的数据库连接。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-49-47.png",alt:"2020-1-26-22-49-47.png"}})]),a._v(" "),s("h3",{attrs:{id:"使用-jdbc-操作数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-jdbc-操作数据库"}},[a._v("#")]),a._v(" 使用 JDBC 操作数据库")]),a._v(" "),s("h4",{attrs:{id:"创建数据表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据表"}},[a._v("#")]),a._v(" 创建数据表")]),a._v(" "),s("ul",[s("li",[a._v("连接上数据库；")]),a._v(" "),s("li",[a._v("创建你要执行的 SQL 语句；")]),a._v(" "),s("li",[a._v("执行 SQL；\n"),s("ul",[s("li",[a._v("通过 "),s("code",[a._v("createStatement()")]),a._v(" 创建要执行的静态 SQL 语句的 Statement 对象；")]),a._v(" "),s("li",[a._v("通过 Statement 对象的 "),s("code",[a._v("executeUpdate(sql)")]),a._v(" 方法来执行语句；")]),a._v(" "),s("li",[a._v("返回结果：\n"),s("ul",[s("li",[a._v("DQL 操作返回查询结果集；")]),a._v(" "),s("li",[a._v("DML 返回受影响的行数；")]),a._v(" "),s("li",[a._v("DDL 返回 0；")])])]),a._v(" "),s("li",[a._v("释放数据资源；\n"),s("ul",[s("li",[a._v("通过 Statement 对象 "),s("code",[a._v("close()")]),a._v(" 释放资源；")]),a._v(" "),s("li",[a._v("通过 Connction 对象 "),s("code",[a._v("close()")]),a._v(" 释放资源；")])])])])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-52-29.png",alt:"2020-1-26-22-52-29.png"}})]),a._v(" "),s("h4",{attrs:{id:"执行-dml-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行-dml-操作"}},[a._v("#")]),a._v(" 执行 DML 操作")]),a._v(" "),s("ul",[s("li",[a._v("执行 DML 操作的步骤和上面创建数据表相同；")]),a._v(" "),s("li",[a._v("我们拿“插入一条新数据”举例：")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-52-58.png",alt:"2020-1-26-22-52-58.png"}}),a._v(" "),s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-53-10.png",alt:"2020-1-26-22-53-10.png"}})]),a._v(" "),s("h4",{attrs:{id:"执行-dql-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行-dql-操作"}},[a._v("#")]),a._v(" 执行 DQL 操作")]),a._v(" "),s("ul",[s("li",[a._v("通过 Statement 对象的 "),s("code",[a._v("executeQuery(sql)")]),a._v(" 方法来执行语句；")]),a._v(" "),s("li",[s("code",[a._v("executeQuery")]),a._v(" 方法返回一个查询结果集 ResultSet；")]),a._v(" "),s("li",[a._v("结果集常用方法：\n"),s("ul",[s("li",[s("code",[a._v("next()")]),a._v("：如果当前指向的行有下一行数据，则指针指向下一行；")]),a._v(" "),s("li",[s("code",[a._v("getXxx(String columnName)")]),a._v(" ：获取当前行中的，指定列的值。\n"),s("ul",[s("li",[a._v('"Xxx" 指的是目标列的数据类型；')]),a._v(" "),s("li",[a._v("如果类型是 Varchar / Char / Text，则方法名为"),s("code",[a._v("getString")]),a._v(";")]),a._v(" "),s("li",[a._v("如果类型是 Int / Integer，则方法名为 "),s("code",[a._v("getInt")]),a._v(";")])])])])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-55-0.png",alt:"2020-1-26-22-55-0.png"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-55-19.png",alt:"2020-1-26-22-55-19.png"}})]),a._v(" "),s("h3",{attrs:{id:"dao-思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-思想"}},[a._v("#")]),a._v(" DAO 思想")]),a._v(" "),s("h4",{attrs:{id:"dao-什么是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-什么是"}},[a._v("#")]),a._v(" DAO 什么是")]),a._v(" "),s("ul",[s("li",[a._v("当用上面的方法去重复地进行“增删改查”操作，重复代码会很多；所以我们需要将这些操作封装起来；")]),a._v(" "),s("li",[a._v("DAO（Data Access Object）数据存取对象；")]),a._v(" "),s("li",[a._v("DAO 位于“业务逻辑层”和“持久层”(数据库) 之间，从而实现对持久层数据访问；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-56-36.png",alt:"2020-1-26-22-56-36.png"}})]),a._v(" "),s("h4",{attrs:{id:"orm-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#orm-介绍"}},[a._v("#")]),a._v(" ORM 介绍")]),a._v(" "),s("ul",[s("li",[a._v("ORM（Object Relational Mapping）对象关系映射；")]),a._v(" "),s("li",[a._v("将关系型数据库的数据映射为对象，以对象的形式展现；")]),a._v(" "),s("li",[a._v("ORM 的目的是为了方便开发人员以面向对象的思想来实现对数据库的操作；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-57-31.png",alt:"2020-1-26-22-57-31.png"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-57-40.png",alt:"2020-1-26-22-57-40.png"}})]),a._v(" "),s("h4",{attrs:{id:"domain-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domain-介绍"}},[a._v("#")]),a._v(" Domain 介绍")]),a._v(" "),s("ul",[s("li",[a._v("Domain 就是一个类；")]),a._v(" "),s("li",[a._v("符合 JavaBean 规范（一个类中有字段和该字段的 Getter 和 Setter 方法）；")]),a._v(" "),s("li",[a._v("用于作为用户和数据库交互的中转站；")]),a._v(" "),s("li",[a._v("示例：下面就是一个 Domain 类：\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-22-58-17.png",alt:"2020-1-26-22-58-17.png"}})]),a._v(" "),s("li",[s("strong",[a._v("保存数据")]),a._v("：\n"),s("ul",[s("li",[a._v("通过创建 "),s("code",[a._v("Stu")]),a._v(" Domain 对象来进行数据中转；")]),a._v(" "),s("li",[a._v("将 "),s("code",[a._v("Stu")]),a._v(" 传入 DAO 对象的 "),s("code",[a._v("save")]),a._v(" 方法来保存到数据库；")]),a._v(" "),s("li",[a._v("如果不用 Domain 的话，我们要向 "),s("code",[a._v("save")]),a._v(" 方法传入三个参数，现在一个参数就够了；")]),a._v(" "),s("li",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-0-40.png",alt:"2020-1-26-23-0-40.png"}})])])]),a._v(" "),s("li",[s("strong",[a._v("读取数据")]),a._v("：\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-1-20.png",alt:"2020-1-26-23-1-20.png"}})])])])])])]),a._v(" "),s("h2",{attrs:{id:"dao-编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-编写"}},[a._v("#")]),a._v(" DAO 编写")]),a._v(" "),s("h3",{attrs:{id:"dao-设计规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-设计规范"}},[a._v("#")]),a._v(" DAO 设计规范")]),a._v(" "),s("h4",{attrs:{id:"编写-dao-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写-dao-组件"}},[a._v("#")]),a._v(" 编写 DAO 组件")]),a._v(" "),s("ul",[s("li",[a._v("定义 DAO 接口；\n"),s("ul",[s("li",[a._v("开发中使用“面向接口”编程；")]),a._v(" "),s("li",[a._v("接口只给出函数声明，但是没有给出函数的具体实现；")])])]),a._v(" "),s("li",[a._v("编写 DAO 实现类；\n"),s("ul",[s("li",[a._v("根据需求来编写具体的实现类；")])])])]),a._v(" "),s("h4",{attrs:{id:"面向接口的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向接口的好处"}},[a._v("#")]),a._v(" 面向接口的好处")]),a._v(" "),s("ul",[s("li",[a._v("业务逻辑清晰；")]),a._v(" "),s("li",[a._v("增强代码的扩展性，可维护性；")]),a._v(" "),s("li",[a._v("接口和实现相分离，适合团队开发；")]),a._v(" "),s("li",[a._v("降低耦合度，便于日后迭代；")])]),a._v(" "),s("h4",{attrs:{id:"package-包名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package-包名规范"}},[a._v("#")]),a._v(" Package 包名规范")]),a._v(" "),s("ul",[s("li",[a._v("整体规范：\n"),s("ul",[s("li",[a._v("域名.模块名称.组件名称")])])]),a._v(" "),s("li",[a._v("DAO 包规范：\n"),s("ul",[s("li",[s("code",[a._v("com.xxx.jdbc.domain")]),a._v(" 存储所有的 Domain")]),a._v(" "),s("li",[s("code",[a._v("com.xxx.jdbc.dao")]),a._v(" 存储所有的 DAO 接口")]),a._v(" "),s("li",[s("code",[a._v("com.xxx.jdbc.dao.impl")]),a._v(" 存储所有的 DAO 接口实现类")]),a._v(" "),s("li",[s("code",[a._v("com.xxx.jdbc.dao.test")]),a._v(" 存储 DAO 组件的测试类")])])])]),a._v(" "),s("h4",{attrs:{id:"class-类名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-类名规范"}},[a._v("#")]),a._v(" Class 类名规范")]),a._v(" "),s("ul",[s("li",[a._v("domain 类：\n"),s("ul",[s("li",[a._v("存储在 domain 包中。用于描述一个对象，是一个 JavaBean，用于表示某一个对象的 CRUB 声明；")]),a._v(" "),s("li",[a._v("命名规范：接口 + DomainDao")])])]),a._v(" "),s("li",[a._v("dao 实现类：\n"),s("ul",[s("li",[a._v("储存在 dao.impl 包中，用于表示 DAO 接口的实现类。")]),a._v(" "),s("li",[a._v("命名规范：DomainDao + 实现类")])])])]),a._v(" "),s("h3",{attrs:{id:"dao-开发步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-开发步骤"}},[a._v("#")]),a._v(" DAO 开发步骤")]),a._v(" "),s("ul",[s("li",[a._v("创建表")]),a._v(" "),s("li",[a._v("建立 domain 包 & domain 类")]),a._v(" "),s("li",[a._v("建立 dao 包 & dao 接口")]),a._v(" "),s("li",[a._v("建立 dao.impl 包 & dao 实现类")]),a._v(" "),s("li",[a._v("根据 dao 接口创建 dao 测试类")]),a._v(" "),s("li",[a._v("编写实现类当中 dao 的声明的方法体")]),a._v(" "),s("li",[a._v("每编写一个 dao 方法，进行功能测试")])]),a._v(" "),s("h3",{attrs:{id:"dao-编写-1：-结构搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-编写-1：-结构搭建"}},[a._v("#")]),a._v(" DAO 编写 - 1： 结构搭建")]),a._v(" "),s("p",[a._v("先创建好 domain 包，domain 类；dao 包，dao 接口；dao.impl 包，dao 实现类；测试包，测试类；")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-6-16.png",alt:"2020-1-26-23-6-16.png"}})]),a._v(" "),s("h4",{attrs:{id:"domain-类："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domain-类："}},[a._v("#")]),a._v(" domain 类：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-7-8.png",alt:"2020-1-26-23-7-8.png"}})]),a._v(" "),s("h4",{attrs:{id:"dao-接口："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-接口："}},[a._v("#")]),a._v(" dao 接口：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-7-19.png",alt:"2020-1-26-23-7-19.png"}})]),a._v(" "),s("h4",{attrs:{id:"dao-实现类："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-实现类："}},[a._v("#")]),a._v(" dao 实现类：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-9-45.png",alt:"2020-1-26-23-9-45.png"}})]),a._v(" "),s("h4",{attrs:{id:"测试类："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试类："}},[a._v("#")]),a._v(" 测试类：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-7-37.png",alt:"2020-1-26-23-7-37.png"}})]),a._v(" "),s("h3",{attrs:{id:"dao-编写-2：编写-dao-实现类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-编写-2：编写-dao-实现类"}},[a._v("#")]),a._v(" DAO 编写 - 2：编写 DAO 实现类")]),a._v(" "),s("h4",{attrs:{id:"save-方法编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#save-方法编写"}},[a._v("#")]),a._v(" save 方法编写")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-10-35.png",alt:"2020-1-26-23-10-35.png"}})]),a._v(" "),s("p",[a._v("编写 save 方法单元测试：")]),a._v(" "),s("ul",[s("li",[a._v("在 StudentDaoTest 类中编写它的单元测试方法；")]),a._v(" "),s("li",[a._v("使用 "),s("strong",[a._v("@Test")]),a._v(" 修饰符创建单元测试；")]),a._v(" "),s("li",[a._v("之后选中方法，右键 -> Run As -> JUnit Test；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-11-26.png",alt:"2020-1-26-23-11-26.png"}})]),a._v(" "),s("p",[a._v("测试成功后显式如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-11-41.png",alt:"2020-1-26-23-11-41.png"}})]),a._v(" "),s("h4",{attrs:{id:"delete-方法编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-方法编写"}},[a._v("#")]),a._v(" delete 方法编写")]),a._v(" "),s("p",[a._v("只要把 SQL 语句改变就好了")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-13-27.png",alt:"2020-1-26-23-13-27.png"}})]),a._v(" "),s("h4",{attrs:{id:"update-方法编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-方法编写"}},[a._v("#")]),a._v(" update 方法编写")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-13-35.png",alt:"2020-1-26-23-13-35.png"}})]),a._v(" "),s("h4",{attrs:{id:"get-方法编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-方法编写"}},[a._v("#")]),a._v(" get 方法编写")]),a._v(" "),s("ul",[s("li",[a._v("把 "),s("code",[a._v("executeUpdate")]),a._v(" 改成 "),s("code",[a._v("executeQuery")]),a._v("；")]),a._v(" "),s("li",[a._v("并将返回结果赋给一个 ResultSet 对象；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-13-52.png",alt:"2020-1-26-23-13-52.png"}})]),a._v(" "),s("h4",{attrs:{id:"getall-方法编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getall-方法编写"}},[a._v("#")]),a._v(" getAll 方法编写")]),a._v(" "),s("p",[a._v("创建一个数组来存放查询到的多个结果；")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-14-43.png",alt:"2020-1-26-23-14-43.png"}})]),a._v(" "),s("h3",{attrs:{id:"dao-编写-3：代码重构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-编写-3：代码重构"}},[a._v("#")]),a._v(" DAO 编写 - 3：代码重构")]),a._v(" "),s("h4",{attrs:{id:"抽出配置变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽出配置变量"}},[a._v("#")]),a._v(" 抽出配置变量")]),a._v(" "),s("ul",[s("li",[a._v("将数据库 URL，用户名，密码，驱动地址抽出；")]),a._v(" "),s("li",[a._v("声明为“私有成员变量”；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-15-22.png",alt:"2020-1-26-23-15-22.png"}})]),a._v(" "),s("ul",[s("li",[a._v("在方法中通过 "),s("code",[a._v("this")]),a._v(" 去获取成员变量：")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-15-49.png",alt:"2020-1-26-23-15-49.png"}})]),a._v(" "),s("h4",{attrs:{id:"将配置变量抽出到工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将配置变量抽出到工具类"}},[a._v("#")]),a._v(" 将配置变量抽出到工具类")]),a._v(" "),s("ul",[s("li",[a._v("由于上面的这些配置变量可能在别的 DAO 实现类中也会被使用；")]),a._v(" "),s("li",[a._v("所以可以再抽出来放到一个“工具类”中：\n"),s("ul",[s("li",[a._v("再创建一个 util 包，并创建 JDBCUtil 类：\n"),s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-16-35.png",alt:"2020-1-26-23-16-35.png"}})]),a._v(" "),s("li",[a._v("把配置变量设置为 "),s("code",[a._v("public static")]),a._v("；")]),a._v(" "),s("li",[a._v("这样可以直接通过“工具类名”来访问变量；\n"),s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-17-20.png",alt:"2020-1-26-23-17-20.png"}})])])]),a._v(" "),s("li",[a._v("在 DAO 实现类中，可以直接通过 JDBCUtil 类来获取配置变量了：\n"),s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-18-3.png",alt:"2020-1-26-23-18-3.png"}})])]),a._v(" "),s("h4",{attrs:{id:"把-connection-对象创建抽出到“jdbcutil-工具类”"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把-connection-对象创建抽出到“jdbcutil-工具类”"}},[a._v("#")]),a._v(" 把 Connection 对象创建抽出到“JDBCUtil 工具类”")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("把创建 Connection 对象的过程，封装到 JDBCUtil 里：\n"),s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-19-20.png",alt:"2020-1-26-23-19-20.png"}})])]),a._v(" "),s("li",[s("p",[a._v("在实现类中的方法里，可以直接通过 JDBCUtil 来获取连接：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-19-58.png",alt:"2020-1-26-23-19-58.png"}})])]),a._v(" "),s("li",[s("p",[a._v("由于驱动加载只需要加载一次；")])]),a._v(" "),s("li",[s("p",[a._v("可以把驱动加载放到静态代码块中；")])])]),a._v(" "),s("h4",{attrs:{id:"把释放资源操作抽出到-jdbcutil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把释放资源操作抽出到-jdbcutil"}},[a._v("#")]),a._v(" 把释放资源操作抽出到 JDBCUtil")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-26-23-19-3.png",alt:"2020-1-26-23-19-3.png"}})]),a._v(" "),s("h2",{attrs:{id:"预编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预编译"}},[a._v("#")]),a._v(" 预编译")]),a._v(" "),s("h2",{attrs:{id:"连接池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接池"}},[a._v("#")]),a._v(" 连接池")]),a._v(" "),s("h2",{attrs:{id:"代码重构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码重构"}},[a._v("#")]),a._v(" 代码重构")])])}),[],!1,null,null,null);t.default=i.exports}}]);