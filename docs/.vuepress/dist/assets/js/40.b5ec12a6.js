(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{250:function(t,s,a){"use strict";a.r(s);var r=a(0),i=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("h2",{attrs:{id:"算法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法-2"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("p",[t._v("离散数学中有多种一般性问题。例如，已知一串整数，求最大的一个；已知一个集合，列出其所有子集；给定一个整数集合，把这些整数从小到大排序；已知一个网络，找出两个顶点之间的最短路径等。遇到这样的问题时，首先要做的就是构造一个模型把问题转换为数学问题。")]),t._v(" "),a("p",[t._v("建立合适的数学模型只是解题的第一步。完整的解题还需要利用这一模型解决一般性问题的方法。理想的情况是需要一个过程，它能够遵循一系列步骤导致找到所求的答案。这一系列步骤就称为一个算法（algorithm）")]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[t._v("『 "),a("strong",[t._v("算法")]),t._v(" 』是进行一项计算或解决一个问题的准确指令的有限序列。")])]),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/uuedVDE.png",alt:"Screen Shot 2020-01-09 at 10.24.57 PM"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/jknnk9j.png",alt:"Screen Shot 2020-01-09 at 10.26.12 PM"}})])]),t._v(" "),a("p",[t._v("\b"),a("img",{attrs:{src:"https://i.imgur.com/4oN9hZn.png",alt:"Screen Shot 2020-01-09 at 10.26.39 PM"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/tzRPGcd.png",alt:"Screen Shot 2020-01-09 at 10.27.02 PM"}})])]),t._v(" "),a("h3",{attrs:{id:"搜索算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搜索算法"}},[t._v("#")]),t._v(" 搜索算法")]),t._v(" "),a("p",[t._v("在有序表中定位一个元素的问题经常会出现在各种应用场景。例如检查单词拼写的程序要在字典中搜索，而字典其实就是单词的有序表。这一类问题称为"),a("strong",[t._v("搜索问题")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"线性搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性搜索"}},[t._v("#")]),t._v(" 线性搜索")]),t._v(" "),a("p",[t._v("\b"),a("img",{attrs:{src:"https://i.imgur.com/KmevXri.png",alt:"Screen Shot 2020-01-09 at 10.31.18 PM"}})]),t._v(" "),a("h4",{attrs:{id:"二分搜索算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二分搜索算法"}},[t._v("#")]),t._v(" 二分搜索算法")]),t._v(" "),a("p",[t._v("当表中的各项是顺序排列的 \b，可以使用"),a("strong",[t._v("二分搜索算法")]),t._v("。它是通过比较要搜索的元素与表的中间项进行的。然后此表就分成两个较小的长度相等的子表，或其中较短的列表比另一个少一项。根据与中间项的比较结果，可以将搜索局限于一个合适的子表继续进行。")]),t._v(" "),a("p",[t._v("\b"),a("img",{attrs:{src:"https://i.imgur.com/3M02p53.png",alt:"Screen Shot 2020-01-09 at 10.32.55 PM"}})]),t._v(" "),a("h3",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/ChP94sL.png",alt:"Screen Shot 2020-01-09 at 10.35.51 PM"}})]),t._v(" "),a("h4",{attrs:{id:"冒泡排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[t._v("#")]),t._v(" 冒泡排序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/YUwuP5L.png",alt:"Screen Shot 2020-01-09 at 10.36.35 PM"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/J9UH9hC.png",alt:"Screen Shot 2020-01-09 at 10.36.43 PM"}})]),t._v(" "),a("h4",{attrs:{id:"插入排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入排序"}},[t._v("#")]),t._v(" 插入排序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/zilSNZC.png",alt:"Screen Shot 2020-01-09 at 10.36.57 PM"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/YsbRgrN.png",alt:"Screen Shot 2020-01-09 at 10.37.20 PM"}})]),t._v(" "),a("h3",{attrs:{id:"贪婪算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪算法"}},[t._v("#")]),t._v(" 贪婪算法")]),t._v(" "),a("p",[a("strong",[t._v("最优化问题")]),t._v("（optimization problem）这种问题的目标是寻找给定问题满足某个参数值最小化或最大化的解。")]),t._v(" "),a("p",[t._v("🌰 例如，寻找两个城市之间总里程最短的路线；确定一种用尽可能少的位数进行消息编码的方式；以及寻找一组在网络节点之间使用最少量光纤的光纤连接。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/HmMQynv.png",alt:"Screen Shot 2020-01-09 at 10.39.19 PM"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/xHKqsX7.png",alt:"Screen Shot 2020-01-09 at 10.39.33 PM"}})])]),t._v(" "),a("p",[t._v("贪婪算法根据某一条件在每一步都做出最佳选择。下面的例子表明在多个条件中选择哪一个也可能是难以确定的。")]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-14-25-44.png",alt:"2020-1-10-14-25-44.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-14-25-57.png",alt:"2020-1-10-14-25-57.png"}})])]),t._v(" "),a("h3",{attrs:{id:"停机问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停机问题"}},[t._v("#")]),t._v(" 停机问题")]),t._v(" "),a("p",[t._v("现在我们来描述计算机科学中非常有名的一个定理的证明。我们将要证明存在这样一个问题，它不能用任何过程求解。即我们要证明存在不可解问题。")]),t._v(" "),a("p",[t._v("我们要研究的问题是"),a("strong",[t._v("停机问题")]),t._v("（halting problem）它询问是否存在一个过程（procedure）能做这件事: 该过程以一个计算机程序以及该程序的一个输入作为输入，并判断该程序在给定输入运行时是否最终能停止。")]),t._v(" "),a("p",[t._v("显然，如果真的存在，有这样一个过程是非常方便的。在编写或者调试程序的时候，能够判断一个程序是否进入无限循环是非常有帮助的。然而，1936 年图灵证明这样的过程是不存在的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-27-41.png",alt:"2020-1-10-15-27-41.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-27-54.png",alt:"2020-1-10-15-27-54.png"}})]),t._v(" "),a("h2",{attrs:{id:"函数的增长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的增长"}},[t._v("#")]),t._v(" 函数的增长")]),t._v(" "),a("p",[t._v("解决一个问题所需的时间不仅仅取决于所用的操作步数。这个时间还取决于用于运行实现一个算法的程序的硬件和软件。但是，当我们更改用于实现算法的硬件和软件时，可以通过给先前估计所需时间乘以一个常数来精确地估算求解规模为 n 的问题所需的时间。例如，在一台超级计算机上求解规模为 n 的问题可能比在一台个人计算机上快 100 万倍。而这 100 万的因子并不取决于 n。")]),t._v(" "),a("p",[t._v("使用 "),a("strong",[t._v("大 O 记号")]),t._v("（big O natation）有一个好处，就是可以估计一个函数的增长而不用担心常数因子或低阶项。这意味着使用大 O 记号不用担心实现算法所用的硬件和软件。另外，使用大 O 记号时我们可以假设算法中使用的不同操作都花费相等的时间，这大大简化了分析。")]),t._v(" "),a("p",[t._v("大 O 记号广泛用于估计当输入增长时一个算法所用的操作的数量。借助于这个记号，就能够判定当输入规模增大时用一个特定算法来求解该问题是否实际可行。另外，使用大 O 记号，可以比较两个算法以判断当输入规模增大时哪个算法更有效。")]),t._v(" "),a("h3",{attrs:{id:"大-o-记号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大-o-记号"}},[t._v("#")]),t._v(" 大 O 记号")]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-36-52.png",alt:"2020-1-10-15-36-52.png"}})])]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-37-21.png",alt:"2020-1-10-15-37-21.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-38-1.png",alt:"2020-1-10-15-38-1.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-38-40.png",alt:"2020-1-10-15-38-40.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-38-49.png",alt:"2020-1-10-15-38-49.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-39-42.png",alt:"2020-1-10-15-39-42.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-39-58.png",alt:"2020-1-10-15-39-58.png"}})])]),t._v(" "),a("h3",{attrs:{id:"一些重要函数的大-o-估算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些重要函数的大-o-估算"}},[t._v("#")]),t._v(" 一些重要函数的大 O 估算")]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-41-14.png",alt:"2020-1-10-15-41-14.png"}})])]),a("p",[t._v("现在举几个与定义域为正整数集的函数有关的例子：")]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-42-49.png",alt:"2020-1-10-15-42-49.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-45-12.png",alt:"2020-1-10-15-45-12.png"}})]),t._v(" "),a("h3",{attrs:{id:"函数组合的增长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数组合的增长"}},[t._v("#")]),t._v(" 函数组合的增长")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-48-0.png",alt:"2020-1-10-15-48-0.png"}})]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-47-11.png",alt:"2020-1-10-15-47-11.png"}})])]),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-47-28.png",alt:"2020-1-10-15-47-28.png"}})])]),t._v(" "),a("h3",{attrs:{id:"大-ω-记号-大-θ-记号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大-ω-记号-大-θ-记号"}},[t._v("#")]),t._v(" 大 Ω 记号 & 大 Θ 记号")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-50-11.png",alt:"2020-1-10-15-50-11.png"}})]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-49-58.png",alt:"2020-1-10-15-49-58.png"}})])]),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-50-25.png",alt:"2020-1-10-15-50-25.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-50-37.png",alt:"2020-1-10-15-50-37.png"}})]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[t._v("定义：")]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-51-22.png",alt:"2020-1-10-15-51-22.png"}})])]),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-51-31.png",alt:"2020-1-10-15-51-31.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-52-0.png",alt:"2020-1-10-15-52-0.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-52-28.png",alt:"2020-1-10-15-52-28.png"}})]),t._v(" "),a("h2",{attrs:{id:"算法的复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法的复杂度"}},[t._v("#")]),t._v(" 算法的复杂度")]),t._v(" "),a("h3",{attrs:{id:"时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-56-31.png",alt:"2020-1-10-15-56-31.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-57-15.png",alt:"2020-1-10-15-57-15.png"}})])]),t._v(" "),a("h4",{attrs:{id:"最坏情形复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最坏情形复杂度"}},[t._v("#")]),t._v(" 最坏情形复杂度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-57-31.png",alt:"2020-1-10-15-57-31.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-59-8.png",alt:"2020-1-10-15-59-8.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-59-19.png",alt:"2020-1-10-15-59-19.png"}})])]),t._v(" "),a("h4",{attrs:{id:"平均情形复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平均情形复杂度"}},[t._v("#")]),t._v(" 平均情形复杂度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-57-45.png",alt:"2020-1-10-15-57-45.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-58-40.png",alt:"2020-1-10-15-58-40.png"}})])]),t._v(" "),a("h3",{attrs:{id:"矩阵乘法的复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵乘法的复杂度"}},[t._v("#")]),t._v(" 矩阵乘法的复杂度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-15-59-52.png",alt:"2020-1-10-15-59-52.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-0-23.png",alt:"2020-1-10-16-0-23.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-0-45.png",alt:"2020-1-10-16-0-45.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-1-0.png",alt:"2020-1-10-16-1-0.png"}})])]),t._v(" "),a("h3",{attrs:{id:"算法范型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法范型"}},[t._v("#")]),t._v(" 算法范型")]),t._v(" "),a("p",[t._v("所谓算法范型就是基于一种特定概念的通用方法，可以用来构造求解一类广泛问题的算法。")]),t._v(" "),a("p",[t._v("本节我们就介绍一个被称为 “蛮力” 的算法范型。")]),t._v(" "),a("p",[t._v("在"),a("strong",[t._v("蛮力算法")]),t._v("（brute-force algorithm）中，问题是通过基于对问题的描述和术语的定义以最直接的方式解决的。设计蛮力算法来解决那些不太在意所需计算资源的问题。例如在某些蛮力算法中，一个问题的求解是通过检查每一种可能的解，然后找出最可能的解。一般情况下，蛮力算法是朴素的问题求解方法，而不需要利用问题的任何特殊结构或聪明的点子。")]),t._v(" "),a("p",[t._v("之前讲过的线性查找，冒泡 \b 排序，插入排序都属于蛮力算法。")]),t._v(" "),a("p",[t._v("虽然蛮力算法通常比较低效，但通常却非常有用。蛮力算法是能够解决实际问题的，特别是当输入规模不是很大时，即使对于大规模的输人会变得不切实际。再者，当设计新算法来解决一个问题时，目标通常是寻找一个比蛮力算法更有效的算法。")]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-6-22.png",alt:"2020-1-10-16-6-22.png"}})])]),t._v(" "),a("h3",{attrs:{id:"理解算法的复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解算法的复杂度"}},[t._v("#")]),t._v(" 理解算法的复杂度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-6-56.png",alt:"2020-1-10-16-6-56.png"}})]),t._v(" "),a("details",{staticClass:"custom-block details",attrs:{open:"open"}},[a("summary",[t._v("例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-9-14.png",alt:"2020-1-10-16-9-14.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-9-25.png",alt:"2020-1-10-16-9-25.png"}})])]),t._v(" "),a("h4",{attrs:{id:"易解性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#易解性"}},[t._v("#")]),t._v(" 易解性")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-8-8.png",alt:"2020-1-10-16-8-8.png"}})]),t._v(" "),a("h4",{attrs:{id:"p-与-np"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p-与-np"}},[t._v("#")]),t._v(" P 与 NP")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-9-55.png",alt:"2020-1-10-16-9-55.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-10-31.png",alt:"2020-1-10-16-10-31.png"}})]),t._v(" "),a("h4",{attrs:{id:"实际的考虑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际的考虑"}},[t._v("#")]),t._v(" 实际的考虑")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-11-10.png",alt:"2020-1-10-16-11-10.png"}}),t._v(" "),a("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-10-16-11-18.png",alt:"2020-1-10-16-11-18.png"}})])])}),[],!1,null,null,null);s.default=i.exports}}]);