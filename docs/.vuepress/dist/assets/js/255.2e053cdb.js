(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{467:function(t,s,v){"use strict";v.r(s);var r=v(0),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("h2",{attrs:{id:"什么是操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是操作系统"}},[t._v("#")]),t._v(" 什么是操作系统")]),t._v(" "),v("p",[t._v("计算机系统可以被分为 4 个部件:")]),t._v(" "),v("ul",[v("li",[t._v("计算机硬件")]),t._v(" "),v("li",[t._v("操作系统")]),t._v(" "),v("li",[t._v("应用程序")]),t._v(" "),v("li",[t._v("用户")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-06-10-10-46-39.png",alt:"2020-06-10-10-46-39"}})]),t._v(" "),v("p",[t._v("操作系统没有一个十分精确的定义.")]),t._v(" "),v("p",[v("strong",[t._v('操作系统是一个一直运行在计算机上的程序, 也被称为『 内核 Kernal 』, 作用像是位于 "用户" 和 "硬件" 之间的中介')]),t._v(". 可以提供如下功能:")]),t._v(" "),v("ul",[v("li",[t._v("为应用程序提供支持;")]),t._v(" "),v("li",[t._v("管理硬件资源;")]),t._v(" "),v("li",[t._v("管理应用程序;")]),t._v(" "),v("li",[t._v("优化硬件资源;")]),t._v(" "),v("li",[t._v("管理 I/O 设备;")]),t._v(" "),v("li",[t._v("为用户提供更简便地方法去使用计算机;")]),t._v(" "),v("li",[t._v("etc.")])]),t._v(" "),v("h2",{attrs:{id:"计算机体系结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机体系结构"}},[t._v("#")]),t._v(" 计算机体系结构")]),t._v(" "),v("p",[v("strong",[t._v("单处理器系统")]),t._v(":")]),t._v(" "),v("ul",[v("li",[t._v("只具备一个 CPU 的系统;")])]),t._v(" "),v("p",[v("strong",[t._v("多处理器系统")]),t._v(":")]),t._v(" "),v("ul",[v("li",[t._v("具备多个 CPU 的系统, 也称为『 并行系统 parallel system 』和『 紧耦合系统 tightly coupled system 』")]),t._v(" "),v("li",[t._v("主要分为两种类型:\n"),v("ul",[v("li",[t._v("『 "),v("strong",[t._v("非对称多处理")]),t._v(' asymmetric multiprocessing 』: 一个 "主处理器" 控制整个系统, 调度多个 "从处理器" 去执行各自的任务;')]),t._v(" "),v("li",[t._v("『 "),v("strong",[t._v("对称多处理")]),t._v(" symmetric multiprocessing, SMP 』: 每个处理器都是平等的, 都可以执行操作系统中的任务;")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-06-10-11-04-11.png",alt:"2020-06-10-11-04-11"}})]),t._v(" "),v("p",[v("strong",[t._v("集群系统")]),t._v(":")]),t._v(" "),v("ul",[v("li",[t._v("是由多个独立的系统, 依靠某种方式连接在一起, 来实现多个 CPU 集中处理任务;")]),t._v(" "),v("li",[t._v('集群提供了 "高可用性" 服务, 即使一个系统出错了, 服务也不会挂掉;')])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-06-10-11-10-59.png",alt:"2020-06-10-11-10-59"}})]),t._v(" "),v("h2",{attrs:{id:"操作系统结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统结构"}},[t._v("#")]),t._v(" 操作系统结构")]),t._v(" "),v("p",[v("strong",[t._v("Multiprogramming")]),t._v(":")]),t._v(" "),v("ul",[v("li",[t._v('对于操作系统来说, 最终要的能力是 "multiprogram".')]),t._v(" "),v("li",[t._v("Single program cannot keep CPU and I/O devices busy at all times;")]),t._v(" "),v("li",[t._v("Multiprogramming organizes jobs (code and data) so CPU always has one to execute")]),t._v(" "),v("li",[t._v("A subset of total jobs (the "),v("strong",[t._v("job pool")]),t._v(" on disk) in system is kept in memory")]),t._v(" "),v("li",[t._v("Each job is selected and run via a job "),v("strong",[t._v("scheduling algorithm")])]),t._v(" "),v("li",[t._v("When it has to wait (for I/O for example), OS switches to another job;")])]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("分时系统 Time sharing / Multitasking :")]),t._v(" "),v("ul",[v("li",[t._v("Time sharing (or multitasking) is a logical extension in which CPU switches jobs so frequently that users can interact with each job while it is running;")]),t._v(" "),v("li",[t._v("creating "),v("strong",[t._v("interactive")]),t._v(" computing;")])]),t._v(" "),v("h2",{attrs:{id:"操作系统操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统操作"}},[t._v("#")]),t._v(" 操作系统操作")]),t._v(" "),v("p",[t._v("现代操作系统是 "),v("strong",[t._v("interrupt driven")]),t._v(" 中断驱动的:")]),t._v(" "),v("ul",[v("li",[t._v("如果没有任务去执行, 操作系统就会等待某件事件发生;")]),t._v(" "),v("li",[t._v("事件总是由 interrupt 或 trap 引起的;")]),t._v(" "),v("li",[t._v("Trap 或者 Exception 是一种由程序运行时的错误引起的 software-generated interrupt;")]),t._v(" "),v("li",[t._v("对于不同类型的 interrupt, 操作系统有相对应的方式去处理;")]),t._v(" "),v("li",[t._v("因为操作系统中, 程序间共享硬件和软件资源. 如果一个程序出了错误, 其他程序也会受影响. 所以操作系统必须对错误进行处理.")])]),t._v(" "),v("h3",{attrs:{id:"双重-多重模式执行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#双重-多重模式执行"}},[t._v("#")]),t._v(" 双重 & 多重模式执行")]),t._v(" "),v("p",[t._v('为了保证操作系统的正确运行, 必须区分 "操作系统代码" 和 "用户代码" 的执行;')]),t._v(" "),v("p",[t._v('很多操作系统的实现方法是, 提供硬件支持, 以允许区分多种 "'),v("strong",[t._v("执行模式 modes of execution")]),t._v('"')]),t._v(" "),v("ul",[v("li",[t._v("至少需要两种执行模式, "),v("strong",[t._v("user mode")]),t._v(" 和 "),v("strong",[t._v("kernal mode")]),t._v(":\n"),v("ul",[v("li",[t._v("kernal mode 也被称为 supervisor mode, system mode, privileged mode;")])])]),t._v(" "),v("li",[t._v("还需要在硬件中增加一个『 "),v("strong",[t._v("模式位 mode bit")]),t._v(" 』, 用以表示当前的模式 ( kernal - 0 / user - 1 );")]),t._v(" "),v("li",[t._v("当操作系统正在执行用户应用程序时, 系统处于 user mode. 反之亦然;")]),t._v(" "),v("li",[t._v("如果用户应用程序需要调用操作系统服务时, 系统从 user mode 转换成 kernal mode, 系统服务返回结果给应用程序时, 再转换回 user mode;")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-06-10-14-54-59.png",alt:"2020-06-10-14-54-59"}})]),t._v(" "),v("ul",[v("li",[t._v("对于那些会可能会引起损害的机器指令, 它们被称为『 "),v("strong",[t._v("特权指令")]),t._v(" privileged instruction 』 如果在 user mode, 有应用程序想要执行特权指令, 该执行会被认为是非法的, 会以 trap 的形式通知操作系统;")])]),t._v(" "),v("p",[t._v("为了实现更细致的控制, 操作系统可以提供更多的『 执行模式 』")]),t._v(" "),v("h3",{attrs:{id:"定时器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[t._v("#")]),t._v(" 定时器")]),t._v(" "),v("p",[t._v("必须保证操作系统可以维持对于 CPU 的控制, 不能让用户应用程序陷入死循环, 或错误调用系统服务, 或者不将控制器返回给操作系统.")]),t._v(" "),v("p",[t._v("通过使用『 "),v("strong",[t._v("定时器 Timer")]),t._v(" 』可以实现这一目标.")]),t._v(" "),v("ul",[v("li",[t._v("在操作系统将控制权交给用户应用程序之前, 会将 Timer 设定好一个时间周期, 当到期后程序仍在运行, 则会产生一个 interrupt, 来停止程序运行, 并将控制权交还给操作系统;")]),t._v(" "),v("li",[t._v("Timer 可以由一个固定速率的时钟, 或者计数器 Counter 来实现;")])]),t._v(" "),v("h2",{attrs:{id:"进程管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程管理"}},[t._v("#")]),t._v(" 进程管理")]),t._v(" "),v("h2",{attrs:{id:"内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),v("h2",{attrs:{id:"存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储管理"}},[t._v("#")]),t._v(" 存储管理")]),t._v(" "),v("h2",{attrs:{id:"保护-安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#保护-安全"}},[t._v("#")]),t._v(" 保护 & 安全")]),t._v(" "),v("h2",{attrs:{id:"分布式系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统"}},[t._v("#")]),t._v(" 分布式系统")]),t._v(" "),v("h2",{attrs:{id:"专用系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#专用系统"}},[t._v("#")]),t._v(" 专用系统")])])}),[],!1,null,null,null);s.default=a.exports}}]);