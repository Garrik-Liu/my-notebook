(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{422:function(t,a,Q){"use strict";Q.r(a);var T=Q(0),r=Object(T.a)({},(function(){var t=this,a=t.$createElement,Q=t._self._c||a;return Q("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[Q("h1",{attrs:{id:"数组"}},[Q("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),Q("p",[Q("strong",[t._v("『 数组 』（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据")]),t._v("。")]),t._v(" "),Q("p",[t._v("这个定义里有几个关键词，下面分别解释一下：")]),t._v(" "),Q("h2",{attrs:{id:"线性表"}},[Q("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[t._v("#")]),t._v(" 线性表")]),t._v(" "),Q("p",[t._v("『 "),Q("strong",[t._v("线性表")]),t._v(" 』就是数据排成像一条线一样的结构。"),Q("strong",[t._v("每个线性表上的数据最多只有前和后两个方向")]),t._v("。其实除了数组，链表、队列、栈等也是线性表结构。")]),t._v(" "),Q("p",[Q("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-13-12-20-38.png",alt:"2020-1-13-12-20-38.png"}})]),t._v(" "),Q("p",[t._v("它相对立的概念是『 "),Q("strong",[t._v("非线性表")]),t._v(" 』，比如二叉树、堆、图等。之所以叫非线性，是因为，在非线性表中，数据之间并不是简单的前后关系。")]),t._v(" "),Q("h2",{attrs:{id:"连续的内存空间和相同类型的数据"}},[Q("a",{staticClass:"header-anchor",attrs:{href:"#连续的内存空间和相同类型的数据"}},[t._v("#")]),t._v(" 连续的内存空间和相同类型的数据")]),t._v(" "),Q("p",[t._v("『 "),Q("strong",[t._v("连续的内存空间和相同类型的数据")]),t._v(" 』")]),t._v(" "),Q("p",[t._v("举例来说，声明一个长度为 10 的 int 类型数组。计算机给数组分配了一块连续内存空间 1000 ～ 1039，其中，内存块的首地址为 base_address = 1000。")]),t._v(" "),Q("p",[Q("img",{attrs:{src:"https://garrik-default-imgs.oss-accelerate.aliyuncs.com/imgs/2020-1-13-12-34-14.png",alt:"2020-1-13-12-34-14.png"}})]),t._v(" "),Q("p",[t._v("计算机会给每个内存单元分配一个地址，计算机通过地址来访问内存中的数据。因为数组中每个元素在内存中都是连续的，所以这支持计算机对数组元素进行 『 "),Q("strong",[t._v("随机访问")]),t._v(" 』，也就是直接访问任何位置的任何元素。")]),t._v(" "),Q("p",[t._v("当计算机需要随机访问数组中的某个元素时，它会首先通过下面的寻址公式，计算出该元素存储的内存地址。然后通过地址去访问数据。"),Q("strong",[t._v("在数组中，根据下标随机访问的时间复杂度为 O(1)")]),t._v("。")]),t._v(" "),Q("div",{staticClass:"language- extra-class"},[Q("pre",{pre:!0,attrs:{class:"language-text"}},[Q("code",[t._v("Address = base_address + i * data_type_size\n")])])]),Q("p",[t._v("其中 "),Q("code",[t._v("data_type_size")]),t._v(" 表示数组中每个元素的大小。在这个例子里，数组中存储的是 int 类型数据，每个元素占 4 个字节。")]),t._v(" "),Q("h2",{attrs:{id:"低效的-“插入”-和-“删除”"}},[Q("a",{staticClass:"header-anchor",attrs:{href:"#低效的-“插入”-和-“删除”"}},[t._v("#")]),t._v(" 低效的 “插入” 和 “删除”")]),t._v(" "),Q("p",[t._v("但在数组中删除，或插入数据的操作是低效的。因为数组内的元素在内存中是连续的。插入，和删除一个元素会打破这种连续。所以就需要做很多数据搬移的工作。")]),t._v(" "),Q("p",[t._v("\b::: details-open 例子：\n假设数组的长度为 n，现在，如果我们需要将一个数据插入到数组中的第 k 个位置。为了把第 k 个位置腾出来，给新来的数据，我们需要将第 k ～ n 这部分的元素都顺序地往后挪一位。那插入操作的时间复杂度是多少呢？")]),t._v(" "),Q("p",[t._v("如果在数组的末尾插入元素，那就不需要移动数据了，这时的时间复杂度为 "),Q("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[Q("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",viewBox:"0 -750 2041 1000"}},[Q("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[Q("g",{attrs:{"data-mml-node":"math"}},[Q("g",{attrs:{"data-mml-node":"mi"}},[Q("path",{attrs:{"data-c":"4F",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(763, 0)"}},[Q("path",{attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(1152, 0)"}},[Q("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(1652, 0)"}},[Q("path",{attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})])])])])]),t._v("。但如果在数组的开头插入元素，那所有的数据都需要依次往后移动一位，所以最坏时间复杂度是 "),Q("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[Q("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",viewBox:"0 -750 2141 1000"}},[Q("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[Q("g",{attrs:{"data-mml-node":"math"}},[Q("g",{attrs:{"data-mml-node":"mi"}},[Q("path",{attrs:{"data-c":"4F",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(763, 0)"}},[Q("path",{attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(1152, 0)"}},[Q("path",{attrs:{"data-c":"6E",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(1752, 0)"}},[Q("path",{attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})])])])])]),t._v("。 因为我们在每个位置插入元素的概率是一样的，所以平均情况时间复杂度为 "),Q("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[Q("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24.29ex",height:"2.262ex",viewBox:"0 -750 10736.1 1000"}},[Q("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[Q("g",{attrs:{"data-mml-node":"math"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(389, 0)"}},[Q("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(1111.2, 0)"}},[Q("path",{attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(2111.4, 0)"}},[Q("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(2833.7, 0)"}},[Q("path",{attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(3833.9, 0)"}},[Q("path",{attrs:{"data-c":"2026",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"}})]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(5172.6, 0)"}},[Q("path",{attrs:{"data-c":"6E",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(5772.6, 0)"}},[Q("path",{attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),Q("g",{attrs:{"data-mml-node":"TeXAtom",transform:"translate(6161.6, 0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(6661.6, 0)"}},[Q("path",{attrs:{"data-c":"6E",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(7539.3, 0)"}},[Q("path",{attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(8595.1, 0)"}},[Q("path",{attrs:{"data-c":"4F",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(9358.1, 0)"}},[Q("path",{attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(9747.1, 0)"}},[Q("path",{attrs:{"data-c":"6E",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(10347.1, 0)"}},[Q("path",{attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})])])])])]),t._v("。\n:::")],1),t._v(" "),Q("h2",{attrs:{id:"为什么数组的下标以-0-开始"}},[Q("a",{staticClass:"header-anchor",attrs:{href:"#为什么数组的下标以-0-开始"}},[t._v("#")]),t._v(" 为什么数组的下标以 0 开始")]),t._v(" "),Q("p",[t._v("从数组存储的内存模型上来看，"),Q("strong",[t._v("“下标” 最确切的定义应该是 “偏移（offset）”")]),t._v("。前面也讲到，如果用 a 来表示数组的首地址，"),Q("code",[t._v("a[0]")]),t._v(" 就是偏移为 0 的位置，也就是首地址，"),Q("code",[t._v("a[k]")]),t._v(" 就表示偏移 k 个 "),Q("code",[t._v("type_size")]),t._v(" 的位置")])])}),[],!1,null,null,null);a.default=r.exports}}]);