(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{197:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.")]),t._m(1),n("p",[t._v("『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.")]),t._m(2),n("p",[t._v("下面就是一个 MongoDB 文档 (document) 示例:")]),t._m(3),t._m(4),n("p",[t._v("前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?")]),t._m(5),t._m(6),t._m(7),n("p",[t._v("在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.")]),t._m(8),t._m(9),t._m(10),t._m(11),n("p",[t._v("文档中的值可以是多种不同的数据类型. 在一个集合中各个文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型.")]),n("p",[t._v("MongoDB 区分类型和大小写. 例如，下面的两个文档是不同的：")]),t._m(12),n("p",[t._v('在给文档的\b "键" 命名时还需要注意:')]),t._m(13),t._m(14),t._m(15),n("p",[t._v("\b下面是一个集合示例:")]),t._m(16),n("p",[t._v("虽然 MongoDB 对集合中的文档类型没有要求, 但通常情况下我们插入集合的数据都会有一定的关联性.  这样会降低查询\b特定文档的复杂度, 并且提升查询速度.")]),n("p",[t._v("集合命名时需要注意:")]),t._m(17),t._m(18),t._m(19),t._m(20),n("p",[t._v("数据库名可以是满足以下条件的任意 UTF-8 字符串:")]),t._m(21),n("p",[t._v("数据库最终会变成文件系统里的文件，而数据库名就是相应的文件名")]),n("p",[t._v("\b文档, 表单, 数据库之间的关系如下图:")]),t._m(22),t._m(23),n("p",[t._v("这篇文章我不想过多讲安装步骤, 大家可以自行去查阅方法.")]),n("p",[n("a",{attrs:{href:"http://www.runoob.com/mongodb/mongodb-window-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows 平台安装 MongoDB - 菜鸟教程"),n("OutboundLink")],1),n("a",{attrs:{href:"http://www.runoob.com/mongodb/mongodb-osx-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mac 平台安装 MongoDB - 菜鸟教程"),n("OutboundLink")],1)]),n("p",[t._v("为了更方便的管理 MongoDB 数据库, 我推荐使用 Studio 3T 可视化工具.")]),n("p",[n("a",{attrs:{href:"https://studio3t.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Studio 3T - 官网"),n("OutboundLink")],1)]),n("p",[t._v("使用方法可参照下面链接内容:")]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/weixin_39999535/article/details/81383196",target:"_blank",rel:"noopener noreferrer"}},[t._v("Studio 3T 使用方法"),n("OutboundLink")],1)]),t._m(24),n("p",[n("a",{attrs:{href:"http://mongodb.github.io/node-mongodb-native/3.1/api/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongodb 模块 - 文档"),n("OutboundLink")],1)]),n("p",[t._v("想要在 Node.js 中使用\b MongoDB, 要先安装 "),n("a",{attrs:{href:"https://www.npmjs.com/package/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongodb 模块"),n("OutboundLink")],1),t._v(", 具体步骤不赘述.  在 Node.js 中使用之前, 还需要先在命令行中用 "),n("code",[t._v("mongod")]),t._v(" 指令运行 MongoDB 服务器.")]),t._m(25),t._m(26),n("p",[t._v("要想连接 MongoDB 数据库, 我们要先创建一个 MongoDB 客户端并且连接上 MongoDB 服务器.  之后在此连接之上创建数据库实例.")]),t._m(27),t._m(28),t._m(29),t._m(30),n("p",[t._v("区别是:")]),t._m(31),n("p",[t._v("这两个方法的最后一个参数都为回调函数.  回调函数的第一个参数为错误信息, 第二个为处理结果")]),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),n("p",[t._v("假如集合中的文档有如下:")]),t._m(42),n("p",[t._v("那么执行上面代码匹配到的为:")]),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),t._m(48),n("p",[t._v("MongoDB 中有两种方式进行 OR 查询:")]),t._m(49),t._m(50),t._m(51),t._m(52),t._m(53),t._m(54),t._m(55),t._m(56),t._m(57),t._m(58),t._m(59)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"使用-mongodb-数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-mongodb-数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用\b MongoDB 数据库")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"什么是-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-mongodb","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是 MongoDB")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("MongoDB 将数据存储为一个文档，"),s("strong",[this._v("数据结构由键值对 "),s("code",[this._v("key:value")]),this._v(" 组成.  MongoDB 文档类似于 JSON 对象.")]),this._v("  字段值可以包含其他文档，数组及文档数组.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Garrik"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"age"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("21")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Male"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"job"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Frontend Developer"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"关系型数据库-非关系型数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库-非关系型数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 关系型数据库 & 非关系型数据库")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("关系型数据库")]),this._v(' 』以 "行" 和 "列" 组成的 "二维表格" 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 "元组"（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.')])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("非关系数据库")]),this._v(' 』以 "键值对" 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等')])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"mongodb-基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-基础概念","aria-hidden":"true"}},[this._v("#")]),this._v(" MongoDB 基础概念")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"文档-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档-document","aria-hidden":"true"}},[this._v("#")]),this._v(" 文档 (document)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("文档")]),this._v(' 』是\b一组 "键值对" 的有序集合.  是 MongoDB 的核心概念.  文档的数据结构被称为 BSON, 是一种类似于 JSON 的二进制形式的存储格式.  下面是一个文档示例\b:')])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Garrik"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"age"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("21")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v('"name"')]),t._v(" 和 "),n("code",[t._v('"age"')]),t._v(' 是这个文档的 "键" (key), '),n("code",[t._v('"Garrik"')]),t._v(" 和 "),n("code",[t._v("21")]),t._v(' 是 "值" (value)')])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token property"}},[t._v('"foo"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token property"}},[t._v('"Foo"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"3"')]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("文档的键必须是字符串")]),n("li",[t._v("键不能含有 "),n("code",[t._v("\\0")]),t._v(" (空字符)。这个字符用来表示键的结尾")]),n("li",[n("code",[t._v(".")]),t._v(" 和 "),n("code",[t._v("$")]),t._v(" 有特别的意义，只有在特定环境下才能使用")]),n("li",[t._v("以下划线 "),n("code",[t._v("_")]),t._v("开头的键是保留的 (不是严格要求的)")]),n("li",[t._v("一个文档内不能有重复的键")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"集合-collection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合-collection","aria-hidden":"true"}},[this._v("#")]),this._v(" 集合 (collection)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("集合")]),this._v(" 』就是一组文档，如果将 MongoDB 中的一个文档比喻为关系型数据库中的一行，那么一个集合就相当于一张表.  集合存在于数据库中，当第一个文档插入时，集合就会被创建.  集合没有固定的结构，一个集合里面的文档可以是各式各样的，这被称为 『 动态模式 』")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.baidu.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"百度"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.google.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Google"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"query"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token property"}},[t._v('"search"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"前端开发"')]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"site"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"www.zhihu.com"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"知乎"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token property"}},[t._v('"username"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"罐装汽水_Garrik"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("集合名不能是空字符串。")]),n("li",[t._v("集合名不能含有 "),n("code",[t._v("\\0")]),t._v("（空字符)，这个字符表示集合名的结尾。")]),n("li",[t._v("集合名不能以 "),n("code",[t._v("system.")]),t._v(" 开头，这是为系统集合保留的前缀。")]),n("li",[t._v("用户创建的集合名字不能含有保留字符 "),n("code",[t._v("$")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"数据库-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库-database","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据库 (database)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("『 "),s("strong",[this._v("数据库")]),this._v(" 』由多个集合组成.  在 MongoDB 中可以建立多个数据库。每个数据库都有独立的权限，即便是在磁盘上，不同的数据库也放置在不同的文件中。按照经验，我们将有关一个应用程序的所有数据都存储在同一个数据库中。要想在同一个 MongoDB 服务器上存放多个应用程序或者用户的数据，就需要使用不同的数据库。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("MongoDB 的默认数据库为 "),s("code",[this._v('"db"')]),this._v("，该数据库存储在 "),s("code",[this._v("data")]),this._v(" 目录中。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("不是空字符串")]),n("li",[t._v("不得含有 "),n("code",[t._v("空格")]),t._v("、"),n("code",[t._v(".")]),t._v("、"),n("code",[t._v("$")]),t._v("、"),n("code",[t._v("/")]),t._v("、"),n("code",[t._v("\\")]),t._v(" 和 "),n("code",[t._v("\\0")]),t._v(" (空字符)")]),n("li",[t._v("数据库名区分大小写, 推荐全部小写")]),n("li",[t._v("最多 64 字节")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.imgur.com/LhMQBtL.png",alt:"Screen Shot 2018-10-14 at 5.48.11 PM"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"安装-mongodb-可视化工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-mongodb-可视化工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装 MongoDB & 可视化工具")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"在-node-js-中使用-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-node-js-中使用-mongodb","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 Node.js 中使用 MongoDB")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以下代码适用于 mongodb 模块 3.x 版本")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"连接数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 连接数据库")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 引入模块")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MongoClient "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'mongodb'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MongoClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// MongoDB 服务器的地址")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" url "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'mongodb://localhost:27017'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 目标数据库的名字")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dbname "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'mydb'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 创建 MongoDB 客户端")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("MongoClient")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 让客户端连接上服务器")]),t._v("\nclient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"成功连接到 MongoDB 服务器!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 创建数据库实例")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 断开连接 ")]),t._v("\n    client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"插入文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 插入文档")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("要想向一个特定的集合插入文档, 首先我们用 "),s("code",[this._v("db.collection")]),this._v(" 方法去获取目标集合的实例对象.  该方法第一个参数为集合的名字.  如果用这个名字的集合之前不存在, 它会自动帮你创建.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("之后我们用刚刚获得的集合实例的 "),s("code",[this._v("insertMany")]),this._v(" 或 "),s("code",[this._v("insertOne")]),this._v(" 方法来向集合插入文档.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("insertOne")]),this._v(" 用以插入单个文档, 第一个参数为文档对象")]),s("li",[s("code",[this._v("insertMany")]),this._v(" 用以插入多个文档, 第一个参数为由文档对象组成的数组")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假如说我们现在要向 "),s("code",[this._v("usersInfo")]),this._v(" 集合插入用户信息, 代码如下:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 获取 'usersInfo' 集合的实例对象.")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" collection "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("collection")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'usersInfo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 插入单个用户的信息")]),t._v("\n    collection"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("insertOne")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Garrik"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        date_of_birth"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"1997-06-04"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"查询全部文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询全部文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 查询全部文档")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果我们想查询一个集合下的全部文档, 我们可以使用集合实例的 "),s("code",[this._v("find")]),this._v(" 方法.  该方法的第一个参数为查询条件对象, 如果传入一个空对象 "),s("code",[this._v("{}")]),this._v(" 则表示查询全部文档.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 获取 'usersInfo' 集合的实例对象.")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" collection "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("collection")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'usersInfo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 查询集合下的所有文档, 然后用 toArray 转换成数组")]),t._v("\n    collection"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("find")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toArray")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"查询特定文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询特定文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 查询特定文档")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("前面说集合实例的 "),s("code",[this._v("find")]),this._v(" 方法的第一个参数为查询条件对象.  想要查找特定文档的前提是知道怎么写查询条件对象.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v('首先, 平时最常用的查询是找到有特定 "键值对" 的文档.  比如找到 "文档中有 '),n("code",[t._v("name")]),t._v(" 键, 且它的值为 "),n("code",[t._v("小明")]),t._v('".  这个查询写成查询条件对象是: '),n("code",[t._v("{'name':'小明'}")]),t._v(".  假如要查询的文档在 "),n("code",[t._v("usersInfo")]),t._v(" 集合下, 在 Node.js 的代码就为:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 客户端连接上服务器")]),t._v("\nclient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"成功连接到 MongoDB 服务器!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 创建数据库实例")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//查询 'name' 等于 '小明' 的文档")]),t._v("\n    db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("collection")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'usersInfo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("find")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'name'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'小明'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toArray")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 打印出匹配到的文档")]),t._v("\n        console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 关闭客户端")]),t._v("\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如果再想加一条 "),n("code",[t._v("gender")]),t._v(" 键的值 等于 "),n("code",[t._v("male")]),t._v(".  那查询条件对象就为 "),n("code",[t._v("{'name':'小明', 'gender':'male'}")]),t._v("  查询条件对象中各个条件是 AND 的关系.  也就是只匹配 "),n("code",[t._v("name")]),t._v(" 键的值等于 "),n("code",[t._v("小明")]),t._v(", 且 "),n("code",[t._v("gender")]),t._v(" 键的值为 "),n("code",[t._v("male")]),t._v(" 的文档.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"5bd1e7df8a5c0550f4722b01"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"小明"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"male"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"5bd1e7e28a5c0550f4722b02"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"小明"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"female"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"5bd1e7e88a5c0550f4722b03"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"小红"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"female"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"5bd1e7f48a5c0550f4722b04"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"小王"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"male"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"5bd1e7df8a5c0550f4722b01"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"小明"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"gender"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"male"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"数值比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值比较","aria-hidden":"true"}},[this._v("#")]),this._v(" 数值比较")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("上面的查询条件都是精确匹配, 也就是匹配文档中某个键的值是否等于多少.  平时常用的另一个查询是范围比较.  也就是 "),n("code",[t._v("<")]),t._v(", "),n("code",[t._v(">")]),t._v(", "),n("code",[t._v("<=")]),t._v(", "),n("code",[t._v(">=")]),t._v(", "),n("code",[t._v("!=")]),t._v(".  它们对应的 MongoDB 关键字为 "),n("code",[t._v("$lt")]),t._v(", "),n("code",[t._v("$gt")]),t._v(", "),n("code",[t._v("$lte")]),t._v(", "),n("code",[t._v("$gte")]),t._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比如要匹配 "),s("code",[this._v("age")]),this._v(" 键的值小于 60, 那么查询条件对象为 "),s("code",[this._v("{'age': {$lt:60}}")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果在小于 60 的同时还要大于 18, 那就是 "),s("code",[this._v("{'age': {$lt:60, $gt:18}}")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"or-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or-查询","aria-hidden":"true"}},[this._v("#")]),this._v(" OR 查询")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("$in")]),this._v(" 关键字可以查询一个键的多个值")]),s("li",[s("code",[this._v("$or")]),this._v(" 可以用于多个键值对.")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("比如我们要查 "),n("code",[t._v("name")]),t._v(" 键的值为 "),n("code",[t._v("小明")]),t._v(" 或者 "),n("code",[t._v("小红")]),t._v(" 的文档. 用 "),n("code",[t._v("$in")]),t._v(" 的话, 文档查询对象为 "),n("code",[t._v("{'name': {$in: ['小明', '小红']}}")]),t._v(";  用 "),n("code",[t._v("$or")]),t._v(" 的话, 文档查询对象为 "),n("code",[t._v("{$or:[{'name':'小明'}, {'name':'小红'}]}")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("但如果我们要查 "),n("code",[t._v("name")]),t._v(" 键的值为 "),n("code",[t._v("小明")]),t._v(" 或 "),n("code",[t._v("小红")]),t._v(", 或者 "),n("code",[t._v("gender")]),t._v(" 键的值为 "),n("code",[t._v("male")]),t._v(" 的文档的话, "),n("code",[t._v("$in")]),t._v(" 和 "),n("code",[t._v("$or")]),t._v(" 结合使用会很方便.  其文档查询对象为 "),n("code",[t._v("{$or:[{'name':{$in:['小明','小红']}}, {'gender':'male'}]}")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"更新文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 更新文档")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("使用集合实例的 "),n("code",[t._v("updateOne")]),t._v(" 和 "),n("code",[t._v("updateMany")]),t._v(" 方法可以更新文档.  它们的第一个参数为查询对象, 用来匹配到需要更新的文档.  第二个参数为更新对象, 也就是要应用于文档上的更新内容.  最后一个参数为回调函数, 回调函数第一个参数为错误信息, 第二个为操作结果.  这两个方法的区别是 "),n("code",[t._v("updateOne")]),t._v(" 只更新匹配到的第一个文档, "),n("code",[t._v("updateMany")]),t._v(" 更新所有匹配到的文档.")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("比如我们要更新 "),n("code",[t._v("name")]),t._v(" 键的值为 "),n("code",[t._v("小明")]),t._v(" 的文档的 "),n("code",[t._v("age")]),t._v(" 键为 22.  Node.js 代码如下: (注意更新对象里面的 "),n("code",[t._v("$set")]),t._v(" 关键字)")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 客户端连接上服务器")]),t._v("\nclient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"成功连接到 MongoDB 服务器!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 创建数据库实例")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//查询 'name' 等于 '小明' 的文档, 然后更新 `age` 键")]),t._v("\n    db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("collection")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'usersInfo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("updateOne")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'name'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'小明'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $"),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'age'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("22")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 关闭客户端")]),t._v("\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"删除文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除文档")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("想要删除一个文档可以用 "),s("code",[this._v("deleteOne")]),this._v(" 和 "),s("code",[this._v("deleteMany")]),this._v(" 方法.  第一参数为查询对象, 最后一个参数为回调函数.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比如我们要删除 "),s("code",[this._v("name")]),this._v(" 为 "),s("code",[this._v("小明")]),this._v(" 的第一个文档. Node.js 代码如下:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 客户端连接上服务器")]),t._v("\nclient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"成功连接到 MongoDB 服务器!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 创建数据库实例")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("db")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//删除 'name' 等于 '小明' 的第一条文档")]),t._v("\n    db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("collection")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'usersInfo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("deleteOne")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'name'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'小明'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 关闭客户端")]),t._v("\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);