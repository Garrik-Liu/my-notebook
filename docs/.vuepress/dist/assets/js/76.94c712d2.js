(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{155:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"模块机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块机制")]),s("p",[t._v("在开发相对复杂的程序时, 通过使用模块机制, 我们可以把一个复杂程序的各个功能拆分, 分别封装到不同的文件. 在需要的时候引入相关的模块. 这样做可以让代码的可读性, 复用性, 和易维护性够变得更高.")]),s("p",[t._v("Node.js 参照 CommonJS 标准实现了模块机制.  在 Node.js 中, 每个\b文件就被视为一个模块.  这个文件可能是 JavaScript \b编写的文件、JSON 或者用 C/C++ 编译的二进制文件.  在上一篇结尾的 Node 代码实例中, "),s("code",[t._v("http")]),t._v(" 就是一个 Node 自带的核心模块, 用以实现 HTTP 协议.")]),s("blockquote",[s("p",[t._v("CommonJS 规范: 因为 JavaScript 诞生之初只是为了写网页小脚本, 并不作为开发大型复杂应用的语言, 其自身有很多不足.  由于官方规范 (ECMAScript) 制定的时间较早, 涵盖范围较小, 对于后端开发而言, 例如文件系统, I/O 流, 模块系统, 等等方面都没有相应的标准.  CommonJS 规范让 JavaScript 弥补了没有标准的缺陷, 让 JavaScript 有能力去开发复杂应用, 同时具备了跨平台能力.")])]),s("h2",{attrs:{id:"模块类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块类型")]),s("p",[t._v("核心模块")]),s("h2",{attrs:{id:"创建-导出模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-导出模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建 & 导出模块")]),s("p",[t._v("在了解了什么是模块之后, 让我们来看看如何创建并导出模块.  在 Node.js 中, 一个文件就是一个模块.  创建模块的方法就是创建一个文件.  我们要关注的问题是怎么样把这个模块的内容导出, 以让其他文件能够获取到. 在这一篇里我只关注 JavaScript 编写的模块.")]),s("p",[t._v("在 Node.js 中, 通过 "),s("code",[t._v("exports")]),t._v(" 对象来指定一个模块的导出内容.")]),s("p",[t._v("示例:")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 文件名: nameModule.js")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'Garrik'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nexports"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function-variable function"}},[t._v("setName")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newName"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newName"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nexports"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function-variable function"}},[t._v("getName")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在以上示例中, nameModule.js 文件通过 "),s("code",[t._v("exports")]),t._v(" 对象导出了 "),s("code",[t._v("setName")]),t._v(" 和 "),s("code",[t._v("getName")]),t._v(" 两个方法.  其他的模块可以通过引入这两个方法来操作 nameModule.js 文件中的 "),s("code",[t._v("name")]),t._v(" 变量.")]),s("h2",{attrs:{id:"引入模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 引入模块")]),s("p",[t._v("在 Node.js 中, 通过 "),s("code",[t._v("require")]),t._v(" 方法来引入外界模块导出的内容.")]),s("p",[t._v("示例:")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 文件名: showNameModule.js")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nameModule "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("require")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'./nameModule'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameModule"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{attrs:{class:"token comment"}},[t._v("// 显示: Garrik")]),t._v("\n\nnameModule"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("setName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Xiang'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameModule"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 显示: Xiang")]),t._v("\n")])])]),s("p",[t._v("上面示例中, 通过 "),s("code",[t._v("require")]),t._v(" 引入 nameModule.js 导出的对象 (后缀 "),s("code",[t._v(".js")]),t._v(" 可以省略).  我们就可以在 showNameModule.js 文件中使用 "),s("code",[t._v("getName")]),t._v(" 和 "),s("code",[t._v("setName")]),t._v(" 这两个方法了.")]),s("h3",{attrs:{id:"路径解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径解析","aria-hidden":"true"}},[t._v("#")]),t._v(" 路径解析")]),s("h2",{attrs:{id:"包-包管理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包-包管理器","aria-hidden":"true"}},[t._v("#")]),t._v(" 包 & 包管理器")])])}],!1,null,null,null);a.default=e.exports}}]);