(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{167:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),a("p",[t._v("程序在执行任务的时候需要对值进行操作, 因此程序需要追踪值的变化.  实现这一点的最简单方法为将值赋给一个符号容器, 这个符号容器称为变量。顾名思义, 这个容器中的值是可以变化的.  JavaScript 中变量的名字又叫做 『 标识符 』.")]),a("p",[t._v("JavaScript 中的变量是没有类型的，只有值才有。变量可以随时持有任何类型的值。这被称为 『 动态类型 』或 『 弱类型 』")]),t._m(1),a("p",[t._v("一个 JavaScript 标识符必须以字母、下划线（_）或者美元符号（$）开头.")]),a("p",[t._v("后续的字符也可以是数字（0-9）, 或大部分 ISO 8859-1 或 Unicode 编码的字符.  也可以使用 Unicode 转义字符 作标识符。")]),t._m(2),a("p",[t._v("相关参考:")]),a("p",[a("router-link",{attrs:{to:"./作用域.html"}},[t._v("作用域")])],1),t._m(3),t._m(4),t._m(5),t._m(6),a("p",[t._v("在一个作用域下重复声明的变量, 会被解析器给忽略.  如果试图访问一个没有声明的变量, 引擎因为找不到变量, 会沿着作用域链一直向上搜寻, 直到全局作用域.  在非严格模式下, 会在全局作用域创建一个同名变量; 在严格模式下会抛出 ReferenceError 异常.")]),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),a("p",[t._v("let不允许在相同作用域内，重复声明同一个变量。")]),t._m(17),t._m(18),a("p",[t._v("ES5 规定，函数只能在顶层作用域和函数作用域之中声明，不能在块级作用域声明。")]),t._m(19),t._m(20),t._m(21),t._m(22),a("p",[t._v("上面的代码在浏览器的 ES6 环境中, 实际运行的代码是下面这样:")]),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),a("p",[t._v("创建了新的词法环境之后，就会执行第一阶段。在第一阶段，没有执行代码，JavaScript 引擎会访问并注册在当前词法环境中所声明的变量和函数。")]),t._m(30),t._m(31),t._m(32),t._m(33),a("p",[t._v('"提升" 指的是变量和函数声明从它们在代码中出现的位置好像被 “移动” 到了最上面。')]),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),a("p",[t._v("会输出 1 而不是 2 ！这个代码片段会被 引擎 理解为如下形式：")]),t._m(39),t._m(40)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"命名规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规则","aria-hidden":"true"}},[this._v("#")]),this._v(" 命名规则")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"声明变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明变量","aria-hidden":"true"}},[this._v("#")]),this._v(" 声明变量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var","aria-hidden":"true"}},[this._v("#")]),this._v(" var")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("var")]),this._v(" 关键字可以用来声明变量; 通过逗号 (,) 分隔可以同时创建多个对象; 通过等号 (=) 可以在声明时初始化变量.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("未经初始化的变量值为 "),s("code",[this._v("undefined")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let","aria-hidden":"true"}},[this._v("#")]),this._v(" let")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("let")]),this._v(' 声明的变量只可在其所在的代码块中被访问.  由此可以实现 "块级作用域".')])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("123")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("456")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"不会变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不会变量提升","aria-hidden":"true"}},[this._v("#")]),this._v(" 不会变量提升")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("var")]),this._v(' 声明的变量会发生 "变量提升", 即变量可以在声明之前使用, 值为'),s("code",[this._v("undefined")]),this._v("。为了纠正这种现象，"),s("code",[this._v("let")]),this._v(" 命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"暂时性死区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂时性死区","aria-hidden":"true"}},[this._v("#")]),this._v(" 暂时性死区")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("只要块级作用域内存在 "),s("code",[this._v("let")]),this._v(" 命令，它所声明的变量就 “绑定”（binding）这个区域，不再受外部的影响。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tmp "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("123")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tmp "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// ReferenceError")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tmp"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("上面代码中, 即使 if 代码块外面有已经声明 "),a("code",[t._v("tmp")]),t._v(" 变量, 但因为在块中存在 "),a("code",[t._v("let")]),t._v(" 关键字, 那么 "),a("code",[t._v("tmp")]),t._v(" 变量不受外部影响, 使用 "),a("code",[t._v("let")]),t._v(" 命令声明变量之前，该变量都是不可用的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"不允许重复声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不允许重复声明","aria-hidden":"true"}},[this._v("#")]),this._v(" 不允许重复声明")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("func")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("func")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"函数声明-块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明-块级作用域","aria-hidden":"true"}},[this._v("#")]),this._v(" 函数声明 & 块级作用域")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES6 规定，块级作用域之中，函数声明语句的行为类似于 "),s("code",[this._v("let")]),this._v("，在块级作用域之外不可引用。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'I am outside!'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 重复声明一次函数f")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'I am inside!'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面代码在 ES5 中运行，会得到 “I am inside!”，因为在 "),s("code",[this._v("if")]),this._v(" 内声明的函数 "),s("code",[this._v("f")]),this._v(" 会被提升到函数头部.  而在 ES6 中，理论上会得到“I am outside!”。但因为浏览器为了保证兼容性, 在处理方式上有自己的办法:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("允许在块级作用域内声明函数;")]),s("li",[this._v("函数声明会提升到全局作用域或函数作用域的头部;")]),s("li",[this._v("同时，函数声明还会提升到所在的块级作用域的头部;")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 浏览器的 ES6 环境")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'I am outside!'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" undefined"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'I am inside!'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: f is not a function")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("考虑到环境导致的行为差异太大，应该避免在块级作用域内声明函数。如果确实需要，也应该写成函数表达式")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const","aria-hidden":"true"}},[this._v("#")]),this._v(" const")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("const")]),this._v(" 声明一个只读的常量。一旦声明，常量的值就不能改变。在声明时, 必须进行初始化.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3.1415")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3.1415")]),t._v("\n\n"),a("span",{attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// TypeError: Assignment to constant variable.")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[s("code",[this._v("const")]),this._v(" 实际上保证的是变量指向的那个内存地址所保存的数据不得改动")]),this._v("。对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址。对于引用类型，变量指向的内存地址，保存的是一个指向保存在堆内存的对象的指针.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"注册标识符过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册标识符过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 注册标识符过程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第二阶段，具体如何执行取决于标识符的声明的方式（"),s("code",[this._v("let")]),this._v("、"),s("code",[this._v("var")]),this._v("、"),s("code",[this._v("const")]),this._v(" 和 函数声明）以及环境类型（全局环境、函数环境 或 块级作用域）:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("如果创建一个函数环境，那么创建形参及函数参数的默认值。如果是非函数环境，将跳过此步骤。")]),a("li",[t._v("如果创建全局或函数环境，就扫描当前代码进行函数声明（不会扫描其他函数的函数体），但是不会扫描函数表达式或箭头函数。对于所找到的函数声明，将创建函数，并绑定到当前环境与函数名相同的标识符上。若该标识符已经存在，那么该标识符的值将被重写。如果是块级作用域，将跳过此步骤。")]),a("li",[t._v("扫描当前代码进行变量声明。在函数或全局环境中，找到所有当前函数以及其他函数之外通过 "),a("code",[t._v("var")]),t._v(" 声明的变量，并找到所有在其他函数或代码块之外通过 "),a("code",[t._v("let")]),t._v(" 或 "),a("code",[t._v("const")]),t._v(" 定义的变量。在块级环境中，仅查找当前块中通过 "),a("code",[t._v("let")]),t._v(" 或 "),a("code",[t._v("const")]),t._v(" 定义的变量。对于所查找到的变量，若该标识符不存在，进行注册并将其初始化为 "),a("code",[t._v("undefined")]),t._v("。若该标识符已经存在，将保留其值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2019/02/25/5c73f2b6f265f.jpg",alt:"1809e4bb18003a1620fd-Original-figure_5.14"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升","aria-hidden":"true"}},[this._v("#")]),this._v(" 变量提升")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("编译阶段中的一部分工作就是找到所有的声明，并用合适的作用域将它们关联起来。也就是包括变量和函数在内的所有"),s("strong",[this._v("声明都会在任何代码被执行前首先被处理")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("var a = 2;")]),this._v(" 会被看成 "),s("code",[this._v("var a;")]),this._v(" 和 "),s("code",[this._v("a = 2;")]),this._v(" 。第一个定义声明是在编译阶段进行的。第二个赋值声明会被留在原地等待执行阶段。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"函数优先"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数优先","aria-hidden":"true"}},[this._v("#")]),this._v(" 函数优先")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("函数声明和变量声明都会被提升。但是"),s("strong",[this._v("函数会首先被提升，然后才是变量")]),this._v("。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("注意, "),s("code",[this._v("var")]),this._v(' 声明因为是重复的声明, 所以会被忽略, "作用域篇" 里讲过.')])}],!1,null,null,null);s.default=e.exports}}]);