(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{429:function(t,v,_){"use strict";_.r(v);var e=_(0),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[_("router-link",{attrs:{to:"/网络/http/"}},[t._v("返回目录")])],1),t._v(" "),_("h1",{attrs:{id:"http-报文信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-报文信息"}},[t._v("#")]),t._v(" HTTP 报文信息")]),t._v(" "),_("p",[t._v("用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的 HTTP 报文叫做请求报文，响应端（服务器端）的叫做响应报文。")]),t._v(" "),_("p",[t._v("HTTP 报文本身是由多行数据构成的字符串文本。")]),t._v(" "),_("p",[t._v("HTTP 报文可分为 报文首部 和 报文主体 两块。两者由最初出现的空行来划分。")]),t._v(" "),_("h2",{attrs:{id:"报文结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#报文结构"}},[t._v("#")]),t._v(" 报文结构")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://i.imgur.com/NRDIPvv.png",alt:"Screen Shot 2018-07-10 at 4.06.15 PM"}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://i.imgur.com/Lm3QkYJ.png",alt:"Screen Shot 2018-07-10 at 4.06.45 PM"}})]),t._v(" "),_("ul",[_("li",[_("p",[t._v("请求行\n包含 用于请求的 方法，请求 URI 和 HTTP 版本。")])]),t._v(" "),_("li",[_("p",[t._v("状态行\n包含 表明响应结果的 状态码，原因短语和 HTTP 版本。")])]),t._v(" "),_("li",[_("p",[t._v("首部字段\n包含表示 请求和响应 的 各种条件 和 属性 的各类首部。\n一般有 4 种首部，分别是：通用首部、请求首部、响应首部 和 实体首部。")])]),t._v(" "),_("li",[_("p",[t._v("其他\n可能包含 HTTP 的 RFC 里未定义的首部（例如: Cookie）")])])]),t._v(" "),_("h2",{attrs:{id:"编码-提升-传输速率"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编码-提升-传输速率"}},[t._v("#")]),t._v(" 编码 提升 传输速率")]),t._v(" "),_("p",[t._v("HTTP 在传输数据时 可以按照 数据原貌 直接传输 原始数据.\n但 也可以在 传输过程中 通过编码 提升 传输速率。")]),t._v(" "),_("h3",{attrs:{id:"报文主体-和-实体主体的-差异"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#报文主体-和-实体主体的-差异"}},[t._v("#")]),t._v(" 报文主体 和 实体主体的 差异")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("报文（message）\n是 HTTP 通信中的基本单位，由 8 位组字节流（octet sequence）组成，通过 HTTP 通信传输。")])]),t._v(" "),_("li",[_("p",[t._v("实体（entity）\n作为请求或响应的有效载荷数据（补充项）被传输，其内容由实体首部和实体主体组成。")])])]),t._v(" "),_("p",[t._v("HTTP 报文的主体 用于传输 请求或响应的 实体主体。")]),t._v(" "),_("p",[t._v("通常，报文主体 等于 实体主体。只有当传输中进行编码操作时，实体主体的内容 发生变化，才导致 它和报文主体 产生差异。")]),t._v(" "),_("h3",{attrs:{id:"内容编码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内容编码"}},[t._v("#")]),t._v(" 内容编码")]),t._v(" "),_("p",[t._v("向待发送邮件内增加附件时，为了使邮件容量变小，我们会先用 ZIP 压缩文件之后再添加附件发送。")]),t._v(" "),_("p",[t._v("HTTP 协议中通过指定"),_("strong",[t._v("内容编码")]),t._v("也能进行类似的操作。")]),t._v(" "),_("p",[t._v("内容编码 指明 应用在实体内容上的 编码格式，内容编码后的实体由客户端接收并负责解码。")]),t._v(" "),_("p",[t._v("常用的内容编码有以下几种:")]),t._v(" "),_("ul",[_("li",[t._v("gzip（GNU zip）")]),t._v(" "),_("li",[t._v("compress（UNIX 系统的标准压缩）")]),t._v(" "),_("li",[t._v("deflate（zlib）")]),t._v(" "),_("li",[t._v("identity（不进行编码）")])]),t._v(" "),_("h3",{attrs:{id:"分块传输编码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分块传输编码"}},[t._v("#")]),t._v(" 分块传输编码")]),t._v(" "),_("p",[t._v("在 HTTP 通信过程中，请求的编码实体资源尚未全部传输完成之前，浏览器无法显示请求页面。")]),t._v(" "),_("p",[t._v("在传输大容量数据时，通过把数据分割成多块，能够让浏览器逐步显示页面。")]),t._v(" "),_("p",[t._v("这种把实体主体分块的功能称为"),_("strong",[t._v("分块传输编码")]),t._v("（Chunked Transfer Coding）")]),t._v(" "),_("p",[t._v("分块传输编码会将实体主体分成多个块, 每一块都会用十六进制来标记块的大小，而实体主体的最后一块会使用“0(CR+LF)”来标记。")]),t._v(" "),_("p",[t._v("使用分块传输编码的实体主体会由接收的客户端负责解码，恢复到编码前的实体主体。")]),t._v(" "),_("h2",{attrs:{id:"mime-多部分对象集合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mime-多部分对象集合"}},[t._v("#")]),t._v(" \bMIME 多部分对象集合")]),t._v(" "),_("p",[t._v("发送邮件时，我们可以在邮件里写入文字并添加多份附件。这是因为采用了 MIME 机制（Multipurpose Internet Mail Extensions，多用途因特网邮件扩展）")]),t._v(" "),_("p",[t._v("它允许邮件处理文本、图片、视频等多个不同类型的数据")]),t._v(" "),_("p",[t._v("在 MIME 扩展中使用一种称为 多部分对象集合（Multipart）的方法，来容纳多种不同类型的数据。")]),t._v(" "),_("p",[t._v("HTTP 协议中也采纳了多部分对象集合，发送的一份报文主体内可含有多类型实体。通常是在图片或文本文件等上传时使用。")]),t._v(" "),_("p",[t._v("多部分对象集合包含的对象如下:")]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("multipart/form-data")]),t._v("\n在 Web 表单文件上传时使用")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("multipart/byteranges")]),t._v("\n状态码 206（Partial Content，部分内容）响应报文包含了多个范围的内容时使用。")])])]),t._v(" "),_("p",[t._v("在 HTTP 报文中使用多部分对象集合时，需要在首部字段里指明 "),_("code",[t._v("Content-type")])]),t._v(" "),_("p",[t._v("多部分对象集合的每个部分类型中，都可以含有首部字段。另外，可以在某个部分中嵌套使用多部分对象集合。")]),t._v(" "),_("h2",{attrs:{id:"范围请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#范围请求"}},[t._v("#")]),t._v(" 范围请求")]),t._v(" "),_("p",[t._v("以前，下载一个尺寸稍大的图片或文件就已经很吃力了。如果下载过程中遇到网络中断的情况，那就必须重头开始。为了解决上述问题，需要一种可恢复的机制。所谓恢复是指能从之前下载中断处恢复下载。")]),t._v(" "),_("p",[t._v("要实现该功能需要指定下载的实体范围。\n指定范围发送的请求叫做范围请求（Range Request）")]),t._v(" "),_("p",[t._v("对一份 10 000 字节大小的资源，如果使用范围请求，可以只请求 5001~10 000 字节内的资源。")]),t._v(" "),_("p",[t._v("执行范围请求时，会用到首部字段 "),_("code",[t._v("Range")]),t._v(" 来指定资源的 "),_("code",[t._v("byte")]),t._v(" 范围。")]),t._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5001~10 000 字节 ")]),t._v("\nRange: bytes "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("5001")]),t._v("-10000\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从 5001 字节之后全部的")]),t._v("\nRange: bytes "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("5001")]),t._v("-\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从一开始到 3000 字节和 5000~7000 字节的多重范围")]),t._v("\nRange: bytes "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("-3000, "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("-7000\n")])])]),_("p",[t._v("针对范围请求，响应会返回状态码为 "),_("code",[t._v("206")]),t._v(" Partial Content 的响应报文。")]),t._v(" "),_("p",[t._v("对于多重范围的范围请求，响应会在首部字段 "),_("code",[t._v("Content-Type")]),t._v(" 标明 "),_("code",[t._v("multipart/byteranges")]),t._v(" 后返回响应报文。")]),t._v(" "),_("p",[t._v("如果服务器端无法响应范围请求，则会返回状态码 "),_("code",[t._v("200")]),t._v(" OK 和完整的实体内容。")]),t._v(" "),_("h2",{attrs:{id:"内容协商"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内容协商"}},[t._v("#")]),t._v(" 内容协商")]),t._v(" "),_("p",[t._v("同一个 Web 网站有可能存在着多份相同内容的页面。比如英语版和中文版的 Web 页面")]),t._v(" "),_("p",[t._v("当浏览器的默认语言为英语或中文，访问相同 URI 的 Web 页面时，则会显示对应的英语版或中文版的 Web 页面。这样的机制称为内容协商（Content Negotiation）。")]),t._v(" "),_("p",[t._v("包含在请求报文中的某些首部字段（如下）就是判断的基准:")]),t._v(" "),_("ul",[_("li",[t._v("Accept")]),t._v(" "),_("li",[t._v("Accept-Charset")]),t._v(" "),_("li",[t._v("Accept-Encoding")]),t._v(" "),_("li",[t._v("Accept-Language")]),t._v(" "),_("li",[t._v("Content-Language")])]),t._v(" "),_("p",[t._v("内容协商技术有以下 3 种类型:")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("服务器驱动协商（Server-driven Negotiation）\n由服务器端进行内容协商。以请求的首部字段为参考，在服务器端自动处理。但对用户来说，以浏览器发送的信息作为判定的依据，并不一定能筛选出最优内容。")])]),t._v(" "),_("li",[_("p",[t._v("客户端驱动协商（Agent-driven Negotiation）\n由客户端进行内容协商的方式。用户从浏览器显示的可选项列表中手动选择。还可以利用 JavaScript 脚本在 Web 页面上自动进行上述选择。比如按 OS 的类型或浏览器类型，自行切换成 PC 版页面或手机版页面。")])]),t._v(" "),_("li",[_("p",[t._v("透明协商（Transparent Negotiation）\n是服务器驱动和客户端驱动的结合体，是由服务器端和客户端各自进行内容协商的一种方法。")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);