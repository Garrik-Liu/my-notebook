{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{221:function(t,s,e){\"use strict\";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"content\"},[t._m(0),t._m(1),t._m(2),e(\"p\",[e(\"a\",{attrs:{href:\"https://git-scm.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Git 官网\"),e(\"OutboundLink\")],1)]),t._m(3),e(\"p\",[t._v('版本控制是一种用来 \"记录文件内容变化，并且允许将来查阅特定版本修订情况的系统\".  当编写文件时使用「版本控制系統」可以清楚的記錄每個檔案是誰在什麼時候加進來、什麼時候被修改或刪除。Git 是目前业界最流行的版本控制系統.')]),e(\"p\",[t._v(\"Git 是分布式的, 相比于集中式的最大区别在于每一个客户端都是一个独立的节点，在各自的节点上都有独立的一份完整的版本库。一个人修改了文件，这时只要把修改过的文件发送给别人，别人就也都能看的到了。这样做不但提高了效率，而且即使一个人的电脑出问题了，也可以直接从其他人那里克隆一份。分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活.\")]),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),e(\"p\",[t._v(\"表示目录中没有东西可以提交.\")]),t._m(11),t._m(12),t._m(13),e(\"p\",[t._v(\"在状态报告中可以看到新建的 README 文件出现在 Untracked files 下面。 未跟踪的文件意味着 Git 在之前的快照（提交）中没有这些文件.\")]),t._m(14),t._m(15),e(\"p\",[t._v(\"只要在 Changes to be committed 这行下面的，就说明是已暂存状态。 如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中。\")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),e(\"p\",[t._v(\"表示已暂存，下次提交时就会一并记录到仓库。\")]),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),e(\"p\",[t._v(\"比如:\")]),t._m(29),e(\"p\",[t._v(\"第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。第二行告诉 Git 忽略所有以波浪符（~）结尾的文件.\")]),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),e(\"p\",[t._v(\"下面有些例子:\")]),t._m(35)])},[function(){var t=this.$createElement,s=this._self._c||t;return s(\"h1\",{attrs:{id:\"git-攻略\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-攻略\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Git 攻略\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[s(\"strong\",[this._v(\"摘要\")]),this._v(\": 本文讲解 Git 是什么, 有什么用, 如何用 Git 进行版本控制, 以及\\b\\b\\b大厂的版本管理策略.\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"git-干什么的\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-干什么的\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Git 干什么的?\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"strong\",[this._v(\"Git 是一个开源的分布式版本控制系统。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"开始使用-git\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开始使用-git\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 开始使用 Git\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"初始化仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初始化仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 初始化仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在一个目录下使用 \"),s(\"code\",[this._v(\"git init\")]),this._v(\" 指令初始化這個目錄，主要目的是要讓 Git 開始對這個目錄進行版本控制。這個指令會在這個目錄裡建立了一個 \"),s(\"code\",[this._v(\".git\")]),this._v(\" 隐藏目录.  目录是 Git 来跟踪管理版本库的, 它将默认记录项目目录中任何文件的改动。如果把这个子目录删除了，这里面记录的文件版本就都没有了.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"记录每次更新到仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#记录每次更新到仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 记录每次更新到仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"检查当前文件状态\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#检查当前文件状态\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 检查当前文件状态\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在一个空目录下执行 \"),s(\"code\",[this._v(\"git init\")]),this._v(\".  之后使用命令 \"),s(\"code\",[this._v(\"git status\")]),this._v(\" 来查看这个目录的状态.\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" status\\nOn branch master\\n\\nInitial commit\\n\\nnothing to commit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"create/copy files and use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add\"')]),t._v(\" to track\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"跟踪新文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跟踪新文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 跟踪新文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在项目下创建一个新的 README 文件。 如果之前并不存在这个文件，使用 \"),s(\"code\",[this._v(\"git status\")]),this._v(\" 命令，你将看到一个新的未跟踪文件：\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"On branch master\\nUntracked files:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add <file>...\"')]),t._v(\" to include \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" what will be committed\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n    readme.md\\n\\nnothing added to commit but untracked files present \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add\"')]),t._v(\" to track\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"现在用 \"),s(\"code\",[this._v(\"git add\")]),this._v(\" 跟踪 \"),s(\"code\",[this._v(\"readme.md\")]),this._v(\" 文件.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"(\")]),this._v(\"use \"),s(\"span\",{attrs:{class:\"token string\"}},[this._v('\"git rm --cached <file>...\"')]),this._v(\" to unstage\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\")\")]),this._v(\"\\n\\n\\tnew file:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"暂存已修改文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#暂存已修改文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 暂存已修改文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"现在修改一下之前被跟踪的 \"),s(\"code\",[this._v(\"readme.md\")]),this._v(\" 文件.  然后再执行 \"),s(\"code\",[this._v(\"git status\")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git rm --cached <file>...\"')]),t._v(\" to unstage\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\tnew file:   readme.md\\n\\nChanges not staged \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" commit:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add <file>...\"')]),t._v(\" to update what will be committed\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git checkout -- <file>...\"')]),t._v(\" to discard changes \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" working directory\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\tmodified:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"readme.md\")]),this._v(\" 出现在 Changes not staged for commit 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。要暂存这次更新，需要运行 \"),s(\"code\",[this._v(\"git add\")]),this._v(\" 命令。这个命令将可以理解为 “\"),s(\"strong\",[this._v(\"添加内容到下一次提交中\")]),this._v(\"” 而不是 “将一个文件添加到项目中” 要更加合适。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"添加完后, 在执行 \"),s(\"code\",[this._v(\"git status\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"(\")]),this._v(\"use \"),s(\"span\",{attrs:{class:\"token string\"}},[this._v('\"git rm --cached <file>...\"')]),this._v(\" to unstage\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\")\")]),this._v(\"\\n\\n\\tnew file:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"状态简览\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#状态简览\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 状态简览\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"git status\")]),this._v(\" 命令的输出十分详细，但其用语有些繁琐。 如果你使用 \"),s(\"code\",[this._v(\"git status -s\")]),this._v(\" 命令或 \"),s(\"code\",[this._v(\"git status --short\")]),this._v(\" 命令，你将得到一种更为紧凑的格式输出。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" status -s\\n M README\\nMM Rakefile\\nA  lib/git.rb\\nM  lib/simplegit.rb\\n?? LICENSE.txt\\n\")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"新添加的未跟踪文件前面有 \"),e(\"code\",[t._v(\"??\")]),t._v(\" 标记，\")]),e(\"li\",[t._v(\"新添加到暂存区中的文件前面有 \"),e(\"code\",[t._v(\"A\")]),t._v(\" 标记，\")]),e(\"li\",[t._v(\"修改过的文件前面有 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 标记\\n\"),e(\"ul\",[e(\"li\",[t._v(\"出现在右边的 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 表示该文件被修改了但是还没放入暂存区\")]),e(\"li\",[t._v(\"出现在靠左边的 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 表示该文件被修改了并放入了暂存区。\")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"向 \"),s(\"code\",[this._v(\"Rakefile\")]),this._v(\" 文件前面有两个 \"),s(\"code\",[this._v(\"MM\")]),this._v(\", 表示在工作区被修改并提交到暂存区后又在工作区中被修改了，所以在暂存区和工作区都有该文件被修改了的记录。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"忽略文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#忽略文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 忽略文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。我们可以创建一个名为 \"),s(\"code\",[this._v(\".gitignore\")]),this._v(\" 的文件，列出要忽略的文件模式。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"*.\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"[\")]),this._v(\"oa\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"]\")]),this._v(\"\\n*~\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"要养成一开始就设置好 \"),s(\"code\",[this._v(\".gitignore\")]),this._v(\" 文件的习惯，以免将来误提交无用的文件.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\".gitignore\")]),this._v(\" 的格式规范如下：\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"所有空行或者以 \"),e(\"code\",[t._v(\"＃\")]),t._v(\" 开头的行都会被 Git 忽略。\")]),e(\"li\",[t._v(\"可以使用标准的 \"),e(\"code\",[t._v(\"glob\")]),t._v(\" 模式匹配。\")]),e(\"li\",[t._v(\"匹配模式可以以（\"),e(\"code\",[t._v(\"/\")]),t._v(\"）开头防止递归。\")]),e(\"li\",[t._v(\"匹配模式可以以（\"),e(\"code\",[t._v(\"/\")]),t._v(\"）结尾指定目录。\")]),e(\"li\",[t._v(\"要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（\"),e(\"code\",[t._v(\"!\")]),t._v(\"）取反。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"glob\")]),this._v(\" 模式是指 shell 所使用的简化了的正则表达式:\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"星号（\"),e(\"code\",[t._v(\"*\")]),t._v(\"）匹配零个或多个任意字符;\")]),e(\"li\",[e(\"code\",[t._v(\"[abc]\")]),t._v(\" 匹配任何一个列在方括号中的字符;\")]),e(\"li\",[t._v(\"问号（\"),e(\"code\",[t._v(\"?\")]),t._v(\"）只匹配一个任意字符;\")]),e(\"li\",[t._v(\"如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 \"),e(\"code\",[t._v(\"[0-9]\")]),t._v(\" 表示匹配所有 0 到 9 的数字）;\")]),e(\"li\",[t._v(\"使用两个星号（\"),e(\"code\",[t._v(\"*\")]),t._v(\") 表示匹配任意中间目录，比如\"),e(\"code\",[t._v(\"a/**/z\")]),t._v(\" 可以匹配 a/z, a/b/z 或 \"),e(\"code\",[t._v(\"a/b/c/z\")]),t._v(\"等。\")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# no .a files\")]),t._v(\"\\n*.a\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# but do track lib.a, even though you're ignoring .a files above\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"lib.a\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# only ignore the TODO file in the current directory, not subdir/TODO\")]),t._v(\"\\n/TODO\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore all files in the build/ directory\")]),t._v(\"\\nbuild/\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore doc/notes.txt, but not doc/server/arch.txt\")]),t._v(\"\\ndoc/*.txt\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore all .pdf files in the doc/ directory\")]),t._v(\"\\ndoc/**/*.pdf\\n\")])])])}],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}