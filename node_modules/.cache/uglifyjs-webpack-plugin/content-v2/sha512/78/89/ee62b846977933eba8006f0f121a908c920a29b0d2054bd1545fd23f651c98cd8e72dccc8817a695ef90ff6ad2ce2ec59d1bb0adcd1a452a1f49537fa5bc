{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{159:function(t,e,s){\"use strict\";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"content\"},[t._m(0),t._m(1),t._m(2),s(\"p\",[t._v(\"ECMAScript中的一切（变量、函数名和操作符）都区分大小写。\")]),t._m(3),s(\"p\",[t._v(\"标识符，就是指变量、函数、属性的名字，或者函数的参数。\")]),s(\"p\",[t._v(\"命名规则:\")]),t._m(4),t._m(5),s(\"p\",[t._v(\"单行注释以两个斜杠开头\")]),t._m(6),t._m(7),t._m(8),t._m(9),s(\"p\",[t._v(\"严格模式是为JavaScript定义了一种不同的解析与执行模型。在严格模式下，一些不确定的行为将得到处理，而且对某些不安全的操作也会抛出错误。\")]),s(\"p\",[t._v(\"要在作用域中启用严格模式，可以在顶部添加如下代码：\")]),t._m(10),s(\"p\",[t._v(\"这条不是字符串, 它是一个编译指示（pragma），用于告诉支持它的 JavaScript 引擎切换到严格模式。\")]),t._m(11),s(\"p\",[t._v('语句以一个分号 \";\" 结尾；如果省略分号，则由解析器确定语句的结尾.')]),s(\"p\",[t._v(\"虽然可以省略分号, 但是有分号可以避免错误, 压缩语句之间多余的空格. 解析器也不用去判断哪里是语句的结尾了, 可以增加性能\")]),s(\"p\",[t._v(\"多条语句可以组合到一个代码块中, 代码块以左花括号（{）开头，以右花括号（}）结尾：\")]),t._m(12),s(\"p\",[s(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Lexical_grammar#%E5%85%B3%E9%94%AE%E5%AD%97\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"关键字和保留字列表\"),s(\"OutboundLink\")],1)]),s(\"p\",[t._v(\"关键字 是可用于表示控制语句的开始或结束，或者用于执行特定操作等,\\n保留字 是将来可能成为关键字的,\")]),s(\"p\",[t._v(\"它们都不可以用作标识符.\")]),t._m(13),s(\"p\",[t._v(\"ECMAScript的变量是松散类型的，松散类型可以用来保存任何类型的数据。\")]),s(\"p\",[t._v(\"换句话说，每个变量仅仅是一个用于保存值的占位符而已。\")]),s(\"p\",[t._v(\"变量在离开作用域后就会被销毁\")]),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),s(\"p\",[s(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"typeof 文档\"),s(\"OutboundLink\")],1)]),t._m(20),s(\"p\",[t._v(\"对一个值使用 typeof 可以返回一个字符串表示其数据类型, 具体信息请查阅文档\")]),t._m(21),t._m(22),t._m(23),s(\"p\",[t._v(\"这个值最初引入的原因是为了正式区分空对象指针与未经初始化的变量。\")]),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),s(\"p\",[t._v(\"使用 IEEE754 格式来表示整数和浮点数值, 支持 十进制, 八进制, 十六进制数值字面量格式\")]),t._m(31),s(\"p\",[t._v(\"在进行算术计算时，所有值都会被转换成十进制数值。\")]),t._m(32),s(\"p\",[t._v(\"浮点数值，就是该数值中必须包含一个小数点，并且小数点后面必须至少有一位数字。\")]),s(\"p\",[t._v(\"保存浮点数值需要的内存空间是保存整数值的两倍.\")]),s(\"p\",[t._v(\"浮点数值的最高精度是17位小数, 进行算术计算时其精确度远远不如整数.\")]),s(\"p\",[t._v(\"0.1 加 0.2 的结果不是 0.3，而是 0.30000000000000004。这个小小的舍入误差会导致无法测试特定的浮点数值。\")]),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),s(\"p\",[t._v('如果字符串以 \"0x\" 开头且后跟数字字符，就会将其当作一个 十六进制整数；如果字符串以 \"0\" 开头且后跟数字字符，则还是十进制。')]),t._m(48),t._m(49),t._m(50),s(\"p\",[t._v(\"也就是说，字符串中的 第一个小数点 是有效的，而 第二个小数点 就是无效的了。\")]),t._m(51),t._m(52),t._m(53)])},[function(){var t=this.$createElement,e=this._self._c||t;return e(\"h1\",{attrs:{id:\"基本概念\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本概念\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 基本概念\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"基础知识\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基础知识\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 基础知识\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"区分大小写\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#区分大小写\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 区分大小写\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"标识符\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#标识符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 标识符\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"第一个字符必须是一个字母、下划线（_）或一个美元符号（$）；\")]),e(\"li\",[this._v(\"其他字符可以是字母、下划线、美元符号或数字。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"注释\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注释\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 注释\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token comment\"}},[this._v(\"// 单行注释\")]),this._v(\"\\n\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"多行注释以一个斜杠和一个星号（/\"),e(\"em\",[this._v(\"）开头，以一个星号和一个斜杠（\")]),this._v(\"/）结尾, 中间的星号不是必须的\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token comment\"}},[this._v(\"/*\\n *  这是一个多行\\n *  （块级）注释\\n */\")]),this._v(\"\\n\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"严格模式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#严格模式\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 严格模式\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 在全局\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"use strict\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 函数作用域\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"doSomething\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"use strict\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"语句\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#语句\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 语句\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"关键字和保留字\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关键字和保留字\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 关键字和保留字\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"变量\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 变量\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"定义变量时要使用 \"),e(\"code\",[this._v(\"var\")]),this._v(\" 操作符, 后跟变量名（即一个标识符）:\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token keyword\"}},[this._v(\"var\")]),this._v(\" x \"),e(\"span\",{attrs:{class:\"token operator\"}},[this._v(\"=\")]),this._v(\" \"),e(\"span\",{attrs:{class:\"token number\"}},[this._v(\"123\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\";\")]),this._v(\"\\n\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"不用 \"),e(\"code\",[this._v(\"var\")]),this._v(\" 操作符, 即使在函数内定义变量, 也会变成全局变量\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"数据类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 数据类型\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"p\",[t._v(\"ECMAScript中有 5 种简单数据类型（也称为基本数据类型）：\"),s(\"code\",[t._v(\"Undefined\")]),t._v(\"、\"),s(\"code\",[t._v(\"Null\")]),t._v(\"、\"),s(\"code\",[t._v(\"Boolean\")]),t._v(\"、\"),s(\"code\",[t._v(\"Number\")]),t._v(\" 和 \"),s(\"code\",[t._v(\"String\")]),t._v(\"。还有 1 种引用数据类型 \"),s(\"code\",[t._v(\"Object\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"typeof-操作符\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#typeof-操作符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" typeof 操作符\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"typeof\")]),this._v(\" 用于检测数据类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"调用 \"),e(\"code\",[this._v(\"typeof null\")]),this._v(' 会返回 \"object\"，因为特殊值 '),e(\"code\",[this._v(\"null\")]),this._v(\" 被认为是一个空的对象引用。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"undefined-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#undefined-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Undefined 类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"Undefined 类型只有一个值，即特殊的 \"),e(\"code\",[this._v(\"undefined\")]),this._v(\"。在使用 \"),e(\"code\",[this._v(\"var\")]),this._v(\" 声明变量但未对其加以初始化时，这个变量的值就是 \"),e(\"code\",[this._v(\"undefined\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"null-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#null-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Null 类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"null\")]),this._v(\" 值表示一个空对象指针, 如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为 \"),e(\"code\",[this._v(\"null\")]),this._v(\" 而不是其他值\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"boolean-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#boolean-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Boolean 类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"该类型只有两个字面值：\"),e(\"code\",[this._v(\"true\")]),this._v(\" 和 \"),e(\"code\",[this._v(\"false\")]),this._v(\"。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"虽然 Boolean 类型的字面值只有两个，但 ECMAScript 中所有类型的值都有与这两个 Boolean 值等价的值。要将一个值转换为其对应的 Boolean 值，可以调用转型函数 \"),e(\"code\",[this._v(\"Boolean()\")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"p\",[t._v(\"如果省略该参数，或者其值为 \"),s(\"code\",[t._v(\"0\")]),t._v(\"、\"),s(\"code\",[t._v(\"-0\")]),t._v(\"、\"),s(\"code\",[t._v(\"null\")]),t._v(\"、\"),s(\"code\",[t._v(\"false\")]),t._v(\"、\"),s(\"code\",[t._v(\"NaN\")]),t._v(\"、\"),s(\"code\",[t._v(\"undefined\")]),t._v(\"、或者空字符串（\"),s(\"code\",[t._v('\"\"')]),t._v(\"），则生成的 Boolean 对象的值为 false。如果传入的参数是 DOM 对象 \"),s(\"code\",[t._v(\"document.all\")]),t._v(\"，也会生成值为 \"),s(\"code\",[t._v(\"false\")]),t._v(' 的 Boolean 对象。任何其他的值，包括值为 \"false\" 的字符串和任何对象，都会创建一个值为 '),s(\"code\",[t._v(\"true\")]),t._v(\" 的 Boolean 对象。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"number-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#number-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Number 类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"八进制字面值 的第一位必须是零（0），然后是八进制数字序列（0～7）。如果字面值中的数值超出了范围，那么前导零将被忽略，后面的数值将被当作十进制数值解析。(严格模式下无效)\\n十六进制字面值 的前两位必须是 \"),e(\"code\",[this._v(\"0x\")]),this._v(\"，后跟任何十六进制数字（0～9及A～F）。其中，字母A～F可以大写，也可以小写。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"浮点数值\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浮点数值\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 浮点数值\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"数值范围\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数值范围\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 数值范围\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"p\",[t._v(\"JS 能够表示的最小数值保存在 \"),s(\"code\",[t._v(\"Number.MIN_VALUE\")]),t._v(\" 中, 一般为 \"),s(\"code\",[t._v(\"5e-324\")]),t._v(\",\\n最大数值保存在 \"),s(\"code\",[t._v(\"Number.MAX_VALUE\")]),t._v(\", 一般为 \"),s(\"code\",[t._v(\"1.7976931348623157e+308\")]),t._v(\".\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"如果超过这个值了, 这个数值将被自动转换成特殊的 \"),e(\"code\",[this._v(\"Infinity\")]),this._v(\" 值,\\n如果这个数值是负数，则会被转换成 \"),e(\"code\",[this._v(\"-Infinity\")]),this._v(\"（负无穷），如果这个数值是正数，则会被转换成 \"),e(\"code\",[this._v(\"Infinity\")]),this._v(\"（正无穷),\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"要想确定一个数值是不是有穷的, 可以使用 \"),e(\"code\",[this._v(\"isFinite()\")]),this._v(\" 函数。是的话返回 \"),e(\"code\",[this._v(\"true\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"nan\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nan\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" NaN\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"NaN\")]),this._v(\"，即非数值（Not a Number）是一个特殊的数值，这个数值用于表示一个本来要返回数值的操作数未返回数值的情况\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"任何数值除以非数值会返回 \"),e(\"code\",[this._v(\"NaN\")]),this._v(\", \"),e(\"code\",[this._v(\"NaN\")]),this._v(\" 与任何值都不相等，包括 \"),e(\"code\",[this._v(\"NaN\")]),this._v(\" 本身\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"isNaN()\")]),this._v(\" 函数可以检测是否值可以被转换成数值, 任何不能被转换为数值的值都会导致这个函数返回 \"),e(\"code\",[this._v(\"true\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"数值转换\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数值转换\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 数值转换\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"p\",[s(\"code\",[t._v(\"Number()\")]),t._v(\"、\"),s(\"code\",[t._v(\"parseInt()\")]),t._v(\" 和 \"),s(\"code\",[t._v(\"parseFloat()\")]),t._v(\"可以把非数值转换为数值, 转型函数 \"),s(\"code\",[t._v(\"Number()\")]),t._v(\" 可以用于任何数据类型，而另两个函数则专门用于把字符串转换成数值。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"Number()\")]),this._v(\" 函数的转换规则如下。\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ul\",[s(\"li\",[t._v(\"如果是\"),s(\"code\",[t._v(\"Boolean\")]),t._v(\"值，\"),s(\"code\",[t._v(\"true\")]),t._v(\"和\"),s(\"code\",[t._v(\"false\")]),t._v(\"将分别被转换为 1 和 0。\")]),s(\"li\",[t._v(\"如果是数字值，只是简单的传入和返回。\")]),s(\"li\",[t._v(\"如果是\"),s(\"code\",[t._v(\"null\")]),t._v(\"值，返回 0。\")]),s(\"li\",[t._v(\"如果是\"),s(\"code\",[t._v(\"undefined\")]),t._v(\"，返回\"),s(\"code\",[t._v(\"NaN\")]),t._v(\"。\")]),s(\"li\",[t._v(\"如果是 字符串，遵循下列规则：\\n\"),s(\"ul\",[s(\"li\",[t._v(\"如果字符串中只包含 \"),s(\"strong\",[t._v(\"数字\")]),t._v(\"（包括前面带加号或负号的情况），则将其转换为\"),s(\"strong\",[t._v(\"十进制数值\")]),t._v(\"。\")]),s(\"li\",[t._v(\"如果字符串中包含有效的 \"),s(\"strong\",[t._v(\"浮点格式\")]),t._v('，如 \"1.1\"，则将其转换为'),s(\"strong\",[t._v(\"对应的浮点数值\")]),t._v(\"。\")]),s(\"li\",[t._v(\"如果字符串中包含有效的 \"),s(\"strong\",[t._v(\"十六进制\")]),t._v(' 格式，例如\"0xf\"，则将其转换为相同大小的 '),s(\"strong\",[t._v(\"十进制整数值\")])]),s(\"li\",[t._v(\"如果是\"),s(\"code\",[t._v(\"0\")]),t._v(\"开头的数字，是按照\"),s(\"strong\",[t._v(\"十进制转换\")])]),s(\"li\",[t._v(\"如果字符串是 \"),s(\"strong\",[t._v(\"空的\")]),t._v(\"（不包含任何字符），则将其转换为 \"),s(\"strong\",[t._v(\"0\")])]),s(\"li\",[t._v(\"如果字符串中包含除上述\"),s(\"strong\",[t._v(\"格式之外\")]),t._v(\"的字符，则将其转换为 \"),s(\"code\",[t._v(\"\\bNa\\bN\")]),t._v(\"。\")])])]),s(\"li\",[t._v(\"如果是对象，则调用对象的\"),s(\"code\",[t._v(\"valueOf()\")]),t._v(\"方法，然后依照前面的规则转换返回的值。如果转换的结果是\"),s(\"code\",[t._v(\"NaN\")]),t._v(\"，则调用对象的\"),s(\"code\",[t._v(\"toString()\")]),t._v(\"方法，然后再次依照前面的规则转换返回的字符串值。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"在处理 \"),e(\"strong\",[this._v(\"整数\")]),this._v(\" 的时候更常用的是\"),e(\"code\",[this._v(\"parseInt()\")]),this._v(\"函数。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"parseInt()\")]),this._v(\" 函数在转换字符串时，会忽略字符串前面的空格，直至找到第一个非空格字符。如果是数字字符\"),e(\"code\",[this._v(\"parseInt()\")]),this._v(\"会继续解析第二个字符，直到解析完所有后续字符或者遇到了一个非数字字符。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"如果第一个字符不是 数字字符 或者 正负号，\"),e(\"code\",[this._v(\"parseInt()\")]),this._v(\"就会返回\"),e(\"code\",[this._v(\"NaN\")]),this._v(\"；\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"函数提供 第二个参数：转换时使用的 \"),e(\"strong\",[this._v(\"基数\")]),this._v(\"（即多少进制）\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" num \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"parseInt\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"0xAF\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"16\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"         \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//175\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" num1 \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"parseInt\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"AF\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"16\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"          \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//175\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" num2 \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"parseInt\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"AF\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"              \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//NaN\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"parseFloat()\")]),this._v(\" 也从第一个字符（位置0）开始解析每个字符。而且也是一直解析到字符串末尾，或者解析到遇见一个无效的浮点数字字符为止。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"code\",[this._v(\"parseFloat()\")]),e(\"strong\",[this._v(\"只解析十进制值\")]),this._v(\"，因此它没有用第二个参数指定基数的用法。十六进制格式的字符串则始终会被转换成0。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"string-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#string-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" String 类型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"object-类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#object-类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Object 类型\")])}],!1,null,null,null);e.default=n.exports}}]);","extractedComments":[]}