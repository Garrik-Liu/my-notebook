{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{192:function(t,s,n){\"use strict\";n.r(s);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n(\"div\",{staticClass:\"content\"},[n(\"h1\",{attrs:{id:\"mvc-模式\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mvc-模式\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" MVC 模式\")]),n(\"p\",[t._v(\"MVC即模型（model）－视图（view）－控制器（controller），用一种将业务逻辑、数据、视图分离的方式组织架构代码。\")]),n(\"p\",[t._v(\"在页面开发中我们常常将，页面分成3个层次。视图层，像你刚才说的创建视图等。数据层，像你刚才提到的处理数据；业务逻辑层，比如你刚才说的交互逻辑等。\")]),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 为简化页面操作逻辑，这里引用链模式中实现的A框架，具体方法参考附录A\")]),t._v(\"\\n\"),n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 页面加载后创建MVC对象\")]),t._v(\"\\n\"),n(\"span\",{attrs:{class:\"token function\"}},[t._v(\"$\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 初始化MVC对象\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"MVC\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"MVC\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 初始化MVC数据模型层\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"MVC\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"model\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 初始化MVC视图层\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"MVC\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"view\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 初始化MVC控制器层\")]),t._v(\"\\n    \"),n(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"MVC\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"ctrl\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),n(\"p\",[t._v(\"通过单体模式创建MVC对象，由于MVC对象要分3个层次，因此我们创建3个层次对象属性，分别是模型对象model、视图对象view、控制器对象ctrl。剩下的事情就是要依次实现3个层次对象。”\")])])}],!1,null,null,null);s.default=o.exports}}]);","extractedComments":[]}