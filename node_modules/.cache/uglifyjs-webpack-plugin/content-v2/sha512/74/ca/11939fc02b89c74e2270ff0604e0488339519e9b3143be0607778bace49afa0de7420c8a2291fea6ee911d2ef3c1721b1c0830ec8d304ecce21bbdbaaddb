{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{176:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),a(\"p\",[t._v(\"上面代码, 用 Object 构造函数创建了一个 Object 引用类型的新实例, 实例保存在变量 person 中.\")]),t._m(5),a(\"p\",[a(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"文档\"),a(\"OutboundLink\")],1)]),a(\"p\",[t._v(\"创建Object实例的方式有两种:\")]),t._m(6),t._m(7),a(\"p\",[t._v(\"另一种方式是使用 对象字面量表示法:\")]),t._m(8),a(\"p\",[t._v(\"也可以写成:\")]),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),a(\"p\",[t._v(\"问题: 下面这个我还没明白!!!\")]),t._m(15),a(\"p\",[t._v(\"访问对象中的属性可以用 点表示法 和 方括号表示法, 使用方括号语法时，应该将要访问的属性以字符串的形式放在方括号中:\")]),t._m(16),t._m(17),a(\"p\",[a(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"文档\"),a(\"OutboundLink\")],1)]),a(\"p\",[t._v(\"ECMAScript 数组的每一项可以保存任何类型的数据。ECMAScript数组的大小是可以动态调整的，即可以随着数据的添加自动增长以容纳新增数据。\")]),a(\"p\",[t._v(\"和 Object 一样, 也是有两种创建方法:\")]),t._m(18),t._m(19),a(\"p\",[t._v('第二种: 使用数组字面量表示法: 数组字面量由一对包含数组项的方括号 (\"[]\") 表示，多个数组项之间以逗号 (\",\") 隔开，')]),t._m(20),t._m(21),a(\"p\",[t._v('在读取和设置数组的值时，要使用方括号 (\"[]\") 并提供相应值的 基于 0 的数字索引')]),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),a(\"p\",[t._v(\"栈是一种 LIFO（Last-In-First-Out，后进先出）的数据结构, 也就是最新添加的项最早被移除。\")]),a(\"p\",[t._v(\"ECMAScript 数组也提供了一种让数组的行为类似于栈数据结构的方法。\")]),t._m(33),t._m(34),t._m(35),a(\"p\",[t._v(\"队列数据结构的访问规则是 FIFO（First-In-First-Out，先进先出）队列在列表的末端添加项，从列表的前端移除项。\")]),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),a(\"p\",[t._v(\"因为按照字符串进行比较, 就会出现上面的问题.\")]),t._m(44),t._m(45),t._m(46),t._m(47),t._m(48),t._m(49),a(\"p\",[t._v(\"不传递任何参数, 可以硬复制一个数组, 数组是引用类型, 直接的复制只是复制了指针\")]),t._m(50),t._m(51),t._m(52),t._m(53),t._m(54),t._m(55),a(\"p\",[t._v(\"删除: 可以删除任意数量的项，只需指定2个参数：要删除的第一项的位置和要删除的项数, 返回删除的项组成的数组\")]),t._m(56),a(\"p\",[t._v(\"插入: 向指定位置插入任意数量的项，只需提供3个参数：起始位置、0（要删除的项数）和要插入的项。返回空数组\")]),t._m(57),a(\"p\",[t._v(\"替换: 可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定3个参数：起始位置、要删除的项数和要插入的任意数量的项。插入的项数不必与删除的项数相等\")]),t._m(58),t._m(59),t._m(60),t._m(61),t._m(62),t._m(63),t._m(64),t._m(65),a(\"p\",[t._v(\"下面这些方法都不会修改原数组中的包含的值\")]),t._m(66),t._m(67),t._m(68),t._m(69),a(\"p\",[t._v(\"两个方法都接收两个参数：一个在每一项上调用的函数 和（可选的）作为缩小基础的初始值。\")]),a(\"p\",[t._v(\"传给的函数接收 4 个参数：前一个值、当前值、项的索引 和 数组对象。这个函数返回的任何值都会作为第一个参数自动传给下一项。第一次迭代发生在数组的第二项上，因此第一个参数是数组的第一项，第二个参数就是数组的第二项。\")]),t._m(70),t._m(71),a(\"p\",[a(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"文档\"),a(\"OutboundLink\")],1)]),t._m(72),t._m(73),a(\"p\",[t._v(\"哈希表(hash table), 也叫散列表, 是根据键（Key）而直接访问在内存存储位置的二维数据结构。通过计算一个关于键值的函数，将所需查询的数据映射到表中一个位置, 通过这个位置来访问数据。这个映射函数称做散列函数，存放记录的数组称做散列表。\")]),a(\"p\",[t._v('举个例子: 查电话本, 将人名按照首字母排序, 找人时, 根据人的名字找到首字母, 根据首字母, 去对应字母的一栏查找具体的电话号码.\\n在这里, 人名是 \"Key\", 取人名首字母的过程是 \"散列函数\", 算出之后, 对应的首字母组为人名的 \"Value\", 人名和首字母构成散列表.')]),t._m(74),a(\"p\",[t._v(\"JS 对象是基于 Hash 表存储变量的\")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s(\"h1\",{attrs:{id:\"数据类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 数据类型\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"引用类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引用类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 引用类型\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"p\",[t._v(\"在ECMAScript中，\"),a(\"strong\",[t._v(\"引用类型\")]),t._v(\"是一种数据结构, 是一组\"),a(\"strong\",[t._v(\"数据和功能的无序集合\")]),t._v(\"。它也常被称为\"),a(\"strong\",[t._v(\"类\")]),t._v(\". 引用类型有时候也被称为\"),a(\"strong\",[t._v(\"对象定义\")]),t._v(\"，因为它们描述的是一类对象所具有的属性和方法。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"对象是某个特定引用类型的实例。新对象是使用 \"),s(\"code\",[this._v(\"new\")]),this._v(\" 操作符后跟一个构造函数来创建的。构造函数本身就是一个函数，只不过该函数是出于创建新对象的目的而定义的。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" person \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"object类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#object类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Object类型\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"第一种是使用 \"),s(\"code\",[this._v(\"new\")]),this._v(\" 操作符后跟 Object构造函数:\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" person \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nperson\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Nicholas\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nperson\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"age \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"29\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" person \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    name \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Nicholas\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    age \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"29\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" person \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nperson\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Nicholas\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nperson\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"age \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"29\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v('上面这种写法先定义了一个 \"空对象\", 然后添加属性和方法.  但是注意 \"空对象\" 只是一个简称.  JS 中没有空对象, 最简单的 '),s(\"code\",[this._v(\"{}\")]),this._v(\" 也包含从 \"),s(\"code\",[this._v(\"Object.prototype\")]),this._v(' 继承来的属性和方法, 这里的 \"空\" 只是说它没有自有属性.')])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"对象字面量与使用构造函数相比还是很多区别的: 在创建时尽量用 \"),s(\"strong\",[this._v(\"对象字面量\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[t._v(\"对象字面量代码更少, 更易读.\")]),a(\"li\",[t._v(\"它可以强调对象就是一个简单的可变的散列表(可变哈希映射)，而不必一定派生自某个类\")]),a(\"li\",[t._v('对象字面量不需要做 \"作用域解析\", 假如说我们自定义了一个同名的构造函数 '),a(\"code\",[t._v(\"Object()\")]),t._v(\", 调用 \"),a(\"code\",[t._v(\"Object()\")]),t._v(\" 创建新对象的时候, 解析器会顺着作用域链开始查找, 先找到自定义的了, 就不往上找了.  对象字面量不需要这个过程, 会更高效.\")]),a(\"li\",[a(\"code\",[t._v(\"Object()\")]),t._v(\" 可以接收参数, 可以根据参数不同把创建过程委托给别的内置构造函数\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"下面的示例代码中展示了给 \"),s(\"code\",[this._v(\"new Object()\")]),this._v(\" 传入不同的参数（数字、字符串和布尔值），最终得到的对象是由不同的构造函数生成的：\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 空对象\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" o \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"o\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"constructor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" Object\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 数值对象\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" o \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"o\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"constructor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" Number\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 字符串对象\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" o \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"I am a string\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"o\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"constructor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" String\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 布尔值对象\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" o \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token boolean\"}},[t._v(\"true\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"o\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"constructor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" Boolean\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"在通过对象字面量定义对象时，实际上不会调用Object构造函数\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"name\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"          \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v('//\"Nicholas\"')]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"             \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v('//\"Nicholas\"')]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"array类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#array类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Array类型\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"第一种: 使用 \"),s(\"code\",[this._v(\"Array\")]),this._v(\" 构造函数:\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v('// 如果预先知道数组要保存的项目数量，也可以给构造函数传递该数量，而该数量会自动变成 \"length\" 属性的值。')]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"20\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 也可以向 Array 构造函数传递数组中应该包含的项。\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// new 操作符可以省略\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"Array\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 创建一个包含3个字符串的数组\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"与对象一样，在使用数组字面量表示法时，也不会调用 Array 构造函数\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 定义一个字符串数组\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"                         \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 显示第一项\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"black\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"                      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 修改第三项\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"brown\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"                      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 新增第四项\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"数组的项数保存在其 \"),s(\"code\",[this._v(\"length\")]),this._v(\" 属性中，这个属性始终会返回0或更大的值, 通过设置 \"),s(\"code\",[this._v(\"length\")]),this._v(\" 来删除, 添加数组项\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"       \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 创建一个包含3个字符串的数组\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 3\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 移除最后一项\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 在末尾添加新项, 由于数组最后一项的索引始终是length-1，因此下一个新项的位置就是length。\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"black\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"检测数组\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#检测数组\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 检测数组\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"Array.isArray()\")]),this._v(\" 方法可以确定某个值到底是不是数组\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"转换方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#转换方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 转换方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"数组的 \"),s(\"code\",[this._v(\"toString()\")]),this._v(' 方法会返回由数组中每个值的字符串形式拼接而成的一个以逗号 (\",\") 分隔的字符串.')])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 创建一个包含3个字符串的数组\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"toString\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// red,blue,green\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"join()\")]),this._v(\"方法可以使用不同的分隔符来构建返回包含所有数组项的字符串。只接收一个参数，即用作分隔符的字符串.\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"join\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\",\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"       \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//red,green,blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"join\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"||\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//red||green||blue\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"栈方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 栈方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[s(\"code\",[this._v(\"push()\")]),this._v(\" 方法可以接收任意数量的参数，把它们逐个添加到数组末尾，并返回修改后数组的长度。\")]),s(\"li\",[s(\"code\",[this._v(\"pop()\")]),this._v(\"方法则从数组末尾移除最后一项，然后返回移除的项。\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"push\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" deleteColor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"pop\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"队列方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#队列方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 队列方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[s(\"code\",[this._v(\"push()\")]),this._v(\" 是向数组末端添加项的方法, 返回长度\")]),s(\"li\",[s(\"code\",[this._v(\"shift()\")]),this._v(\" 是从数组前端取得项的方法, 返回移除的项\")]),s(\"li\",[s(\"code\",[this._v(\"unshift()\")]),this._v(\" 在数组前端添加任意个项并返回新数组的长度\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"push\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" deleteColor \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"shift\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"重排序方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重排序方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 重排序方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"数组中已经存在两个可以直接用来重排序的方法：\"),s(\"code\",[this._v(\"reverse()\")]),this._v(\" 和 \"),s(\"code\",[this._v(\"sort()\")]),this._v(\"。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"reverse()\")]),this._v(\" 方法会反转数组项的顺序。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" values \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nvalues\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"reverse\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"values\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"        \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//5,4,3,2,1\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在默认情况下，\"),s(\"code\",[this._v(\"sort()\")]),this._v(\" 方法按升序排列数组项——即最小的值位于最前面，最大的值排在最后面。\\n为了实现排序，\"),s(\"code\",[this._v(\"sort()\")]),this._v(\" 方法会调用每个数组项的 \"),s(\"code\",[this._v(\"toString()\")]),this._v(\" 转型方法，也就是说最后比较的是字符串.\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" values \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"15\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nvalues\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"sort\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"values\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//0,1,10,15,5\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"sort()\")]),this._v(\" 方法可以接收一个比较函数作为参数，以便我们指定哪个值位于哪个值的前面。比较函数接收两个参数，如果第一个参数应该位于第二个之前则返回一个负数，如果两个参数相等则返回0，如果第一个参数应该位于第二个之后则返回一个正数。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" values \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"15\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nvalues\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"sort\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"compare\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"values\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//0,1,5,10,15\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"compare\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"value1\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value2\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" value1 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" value2\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"操作方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#操作方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 操作方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"concat\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#concat\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" concat()\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"concat()\")]),this._v(\" 方法可以用于拼接数组. 这个方法会先创建当前数组一个副本，然后将接收到的参数添加到这个副本的末尾，最后返回新构建的数组。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors2 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"concat\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"yellow\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"black\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"brown\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//red,green,blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors2\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//red,green,blue,yellow,black,brown\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors2 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors3 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"concat\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\ncolors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"white\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors2\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// white, green, blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors3\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// red, green, blue\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"slice\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slice\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" slice()\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"slice()\")]),this._v(\" 用于切割数组, 接受一或两个参数，即要返回项的起始和结束位置. 在只有一个参数的情况下，\"),s(\"code\",[this._v(\"slice()\")]),this._v(\" 方法返回从该参数指定位置开始到当前数组末尾的所有项。如果有两个参数，该方法返回起始和结束位置之间的项——但不包括结束位置的项。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"yellow\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"purple\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors2 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"slice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors3 \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"slice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors2\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//green,blue,yellow,purple\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors3\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//green,blue,yellow\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"splice\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#splice\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" splice()\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"splice()\")]),this._v(\" 方法主要用途是向数组的中部插入项，但使用这种方法的方式则有如下3种:\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"green\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"blue\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" removed \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"splice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"                    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 删除第一项\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// green,blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"removed\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// red，返回的数组中只包含一项\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"removed \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"splice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"yellow\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"orange\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 从位置1开始插入两项\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// green,yellow,orange,blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"removed\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 返回的是一个空数组\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"removed \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"splice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"red\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"purple\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 插入两项，删除一项\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// green,red,purple,orange,blue\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"removed\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// yellow，返回的数组中只包含一项\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"位置方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#位置方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 位置方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"数组实例添加了两个位置方法: \"),s(\"code\",[this._v(\"indexOf()\")]),this._v(\" 和 \"),s(\"code\",[this._v(\"lastIndexOf()\")]),this._v(\"。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"这两个方法都接收两个参数：要查找的项 和（可选的）表示查找起点位置的索引。其中，\"),s(\"code\",[this._v(\"indexOf()\")]),this._v(\" 方法从数组的开头（位置0）开始向后查找，\"),s(\"code\",[this._v(\"lastIndexOf()\")]),this._v(\" 方法则从数组的末尾开始向前查找。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"返回要查找的项在数组中的位置，或者在没找到的情况下返回 -1。比较的时候用的是全等操作符 \"),s(\"code\",[this._v(\"===\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" numbers \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"numbers\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"        \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//3\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"numbers\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"lastIndexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//5\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"numbers\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//5\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"numbers\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"lastIndexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//3up\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" person \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" name\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Nicholas\"')]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" people \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" name\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Nicholas\"')]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" morePeople \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"person\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"people\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//-1\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"morePeople\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//0\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"迭代方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 迭代方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"ECMAScript 5 为数组定义了 5 个迭代方法。每个方法都接收两个参数：要在每一项上运行的函数和（可选的）运行该函数的作用域对象(影响 \"),s(\"code\",[this._v(\"this\")]),this._v(\" 的值)。传入方法中的函数会接收三个参数：数组项的值、该项在数组中的位置 和 数组对象本身。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"every()\")]),t._v(\"：对数组中的每一项运行给定函数，如果该函数对每一项都返回 \"),a(\"code\",[t._v(\"true\")]),t._v(\"，则返回 \"),a(\"code\",[t._v(\"true\")]),t._v(\"。\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"filter()\")]),t._v(\"：对数组中的每一项运行给定函数，返回该函数会返回 \"),a(\"code\",[t._v(\"true\")]),t._v(\" 的项组成的数组。\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"forEach()\")]),t._v(\"：对数组中的每一项运行给定函数。这个方法没有返回值。\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"map()\")]),t._v(\"：对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组。\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"some()\")]),t._v(\"：对数组中的每一项运行给定函数，如果该函数对任一项返回 \"),a(\"code\",[t._v(\"true\")]),t._v(\"，则返回 \"),a(\"code\",[t._v(\"true\")]),t._v(\"。\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"缩小方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缩小方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 缩小方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"ECMAScript 5还新增了两个缩小数组的方法：\"),s(\"code\",[this._v(\"reduce()\")]),this._v(\" 和 \"),s(\"code\",[this._v(\"reduceRight()\")]),this._v(\"。这两个方法都会迭代数组的所有项，然后构建一个最终返回的值。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"reduce()\")]),this._v(\" 方法从数组的第一项开始，逐个遍历到最后。而 \"),s(\"code\",[this._v(\"reduceRight()\")]),this._v(\" 则从数组的最后一项开始，向前遍历到第一项。\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" values \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sum \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" values\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"reduce\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"prev\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" cur\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" index\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" array\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" prev \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" cur\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"sum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//15\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"date类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#date类型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Date类型\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"哈希表-与-js对象\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#哈希表-与-js对象\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 哈希表 与 JS对象\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"哈希表\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#哈希表\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 哈希表\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\",\"aria-hidden\":\"true\"}},[this._v(\"#\")])])}],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}