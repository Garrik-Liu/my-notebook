{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{244:function(t,s,e){\"use strict\";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"content\"},[t._m(0),t._m(1),t._m(2),e(\"p\",[e(\"a\",{attrs:{href:\"https://git-scm.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Git 官网\"),e(\"OutboundLink\")],1)]),t._m(3),e(\"p\",[t._v('版本控制是一种用来 \"记录文件内容变化，并且允许将来查阅特定版本修订情况的系统\".  当编写文件时使用「版本控制系統」可以清楚的記錄每個檔案是誰在什麼時候加進來、什麼時候被修改或刪除。Git 是目前业界最流行的版本控制系統.')]),e(\"p\",[t._v(\"Git 是分布式的, 相比于集中式的最大区别在于每一个客户端都是一个独立的节点，在各自的节点上都有独立的一份完整的版本库。一个人修改了文件，这时只要把修改过的文件发送给别人，别人就也都能看的到了。这样做不但提高了效率，而且即使一个人的电脑出问题了，也可以直接从其他人那里克隆一份。分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活.\")]),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),e(\"p\",[t._v(\"表示目录中没有东西可以提交.\")]),t._m(11),t._m(12),t._m(13),e(\"p\",[t._v(\"在状态报告中可以看到新建的 README 文件出现在 Untracked files 下面。 未跟踪的文件意味着 Git 在之前的快照（提交）中没有这些文件.\")]),t._m(14),t._m(15),e(\"p\",[t._v(\"只要在 Changes to be committed 这行下面的，就说明是已暂存状态。 如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中。\")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),e(\"p\",[t._v(\"表示已暂存，下次提交时就会一并记录到仓库。\")]),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),e(\"p\",[t._v(\"比如:\")]),t._m(42),e(\"p\",[t._v(\"第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。第二行告诉 Git 忽略所有以波浪符（~）结尾的文件.\")]),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),e(\"p\",[t._v(\"下面有些例子:\")]),t._m(48),t._m(49),t._m(50),t._m(51),t._m(52),t._m(53),t._m(54),t._m(55),t._m(56),t._m(57),t._m(58),t._m(59),t._m(60),e(\"p\",[t._v(\"通过使用不同的选项参数\\b可以帮助我们找到要找的提交.\")]),t._m(61),t._m(62),t._m(63),e(\"p\",[t._v(\"另外一个常用的选项是 \"),e(\"code\",[t._v(\"--pretty\")]),t._v(\"。 这个选项可以指定使用不同于默认格式的方式展示提交历史。这个选项有一些内建的子选项供你使用。 比如用 \"),e(\"code\",[t._v(\"oneline\")]),t._v(\" 将每个提交放在一行显示，查看的提交数很大时非常有用。 另外还有 \"),e(\"code\",[t._v(\"short\")]),t._v(\"，\"),e(\"code\",[t._v(\"full\")]),t._v(\" 和 \"),e(\"code\",[t._v(\"fuller\")]),t._v(\" 可以用.  \"),e(\"code\",[t._v(\"format\")]),t._v(\" 选项可以定制要显示的记录格式。 这样的输出对后期提取分析格外有用.  具体文档参考-\"),e(\"a\",{attrs:{href:\"https://git-scm.com/docs/pretty-formats\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"链接\"),e(\"OutboundLink\")],1)]),t._m(64),t._m(65),e(\"p\",[t._v('远程仓库是指托管在因特网或其他网络中的你的项目的版本库.  与他人协作时, 可以在这个远程仓库上根据需要 \"推送\" 或 \"拉取\" 数据。')]),t._m(66),t._m(67),t._m(68),t._m(69),t._m(70),t._m(71),t._m(72),t._m(73),t._m(74),t._m(75),t._m(76),t._m(77),t._m(78),t._m(79),t._m(80),t._m(81),t._m(82),t._m(83),e(\"p\",[t._v(\"這個簡單的 Push 指令其實做了幾件事：\")]),t._m(84),e(\"p\",[t._v(\"只有当你有所克隆服务器的写入权限，并且之前没有人推送过时，这条命令才能生效。 当你和其他人在同一时间克隆，他们先推送到上游然后你再推送到上游，你的推送就会毫无疑问地被拒绝。\")]),e(\"p\",[t._v(\"你必须先将他们的工作拉取下来并将其合并进你的工作后才能推送。\")]),t._m(85),e(\"p\",[t._v(\"upstream，中文翻譯成「上游」.  在 Git 裡，每個分支可以設定一個「上游」（但每個分支最多只能設定一個 upstream）.  它會指向並追蹤（track）某個分支。通常 upstream 會是远端 Server 上的某個分支，但其實要設定在本地端的其它分支也可以。\")]),t._m(86),t._m(87),t._m(88),t._m(89),t._m(90),e(\"p\",[t._v(\"其實上面這個指令跟下面這個指令是一樣的效果：\")]),t._m(91),e(\"p\",[t._v(\"意思是「把本地的 master 分支推上去後，在 Server 上更新 master 分支的進度，或是如果不存在該分支的話，就建立一個 master 分支」。\")]),e(\"p\",[t._v(\"但如果你想推上去之後不要叫這個名字的話，可以把後面的那個名字改掉：\")]),t._m(92),e(\"p\",[t._v(\"這樣當把本地端的 master 分支推上去之後，就不會在線上建立 master 分支，而是建立（或更新進度）一個叫做 cat 的分支了。\")]),t._m(93),t._m(94),t._m(95),t._m(96),t._m(97),t._m(98),t._m(99),t._m(100),t._m(101),t._m(102)])},[function(){var t=this.$createElement,s=this._self._c||t;return s(\"h1\",{attrs:{id:\"git-攻略\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-攻略\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Git 攻略\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[s(\"strong\",[this._v(\"摘要\")]),this._v(\": 本文讲解 Git 是什么, 有什么用, 如何用 Git 进行版本控制, 以及\\b\\b\\b大厂的版本管理策略.\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"git-干什么的\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-干什么的\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Git 干什么的?\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"strong\",[this._v(\"Git 是一个开源的分布式版本控制系统。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"git-基础\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-基础\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Git 基础\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"初始化仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初始化仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 初始化仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在一个目录下使用 \"),s(\"code\",[this._v(\"git init\")]),this._v(\" 指令初始化這個目錄，主要目的是要讓 Git 開始對這個目錄進行版本控制。這個指令會在這個目錄裡建立了一個 \"),s(\"code\",[this._v(\".git\")]),this._v(\" 隐藏目录.  目录是 Git 来跟踪管理版本库的, 它将默认记录项目目录中任何文件的改动。如果把这个子目录删除了，这里面记录的文件版本就都没有了.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"记录每次更新到仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#记录每次更新到仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 记录每次更新到仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"检查当前文件状态\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#检查当前文件状态\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 检查当前文件状态\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在一个空目录下执行 \"),s(\"code\",[this._v(\"git init\")]),this._v(\".  之后使用命令 \"),s(\"code\",[this._v(\"git status\")]),this._v(\" 来查看这个目录的状态.\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" status\\nOn branch master\\n\\nInitial commit\\n\\nnothing to commit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"create/copy files and use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add\"')]),t._v(\" to track\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"跟踪新文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跟踪新文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 跟踪新文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在项目下创建一个新的 README 文件。 如果之前并不存在这个文件，使用 \"),s(\"code\",[this._v(\"git status\")]),this._v(\" 命令，你将看到一个新的未跟踪文件：\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"On branch master\\nUntracked files:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add <file>...\"')]),t._v(\" to include \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" what will be committed\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n    readme.md\\n\\nnothing added to commit but untracked files present \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add\"')]),t._v(\" to track\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"现在用 \"),s(\"code\",[this._v(\"git add\")]),this._v(\" 跟踪 \"),s(\"code\",[this._v(\"readme.md\")]),this._v(\" 文件.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"(\")]),this._v(\"use \"),s(\"span\",{attrs:{class:\"token string\"}},[this._v('\"git rm --cached <file>...\"')]),this._v(\" to unstage\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\")\")]),this._v(\"\\n\\n\\tnew file:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"暂存已修改文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#暂存已修改文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 暂存已修改文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"现在修改一下之前被跟踪的 \"),s(\"code\",[this._v(\"readme.md\")]),this._v(\" 文件.  然后再执行 \"),s(\"code\",[this._v(\"git status\")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git rm --cached <file>...\"')]),t._v(\" to unstage\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\tnew file:   readme.md\\n\\nChanges not staged \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" commit:\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git add <file>...\"')]),t._v(\" to update what will be committed\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"use \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"git checkout -- <file>...\"')]),t._v(\" to discard changes \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" working directory\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\tmodified:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"readme.md\")]),this._v(\" 出现在 Changes not staged for commit 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。要暂存这次更新，需要运行 \"),s(\"code\",[this._v(\"git add\")]),this._v(\" 命令。这个命令将可以理解为 “\"),s(\"strong\",[this._v(\"添加内容到下一次提交中\")]),this._v(\"” 而不是 “将一个文件添加到项目中” 要更加合适。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"添加完后, 在执行 \"),s(\"code\",[this._v(\"git status\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"On branch master\\n\\nNo commits yet\\n\\nChanges to be committed:\\n  \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"(\")]),this._v(\"use \"),s(\"span\",{attrs:{class:\"token string\"}},[this._v('\"git rm --cached <file>...\"')]),this._v(\" to unstage\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\")\")]),this._v(\"\\n\\n\\tnew file:   readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"提交更新\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#提交更新\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 提交更新\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"使用 \"),s(\"code\",[this._v(\"git commit\")]),this._v(\" 命令将已暂存的文件进行提交.  \\b这种方式会启动文本编辑器以便输入本次提交的说明。(默认会启用 shell 的环境变量 \"),s(\"code\",[this._v(\"$EDITOR\")]),this._v(\" 所指定的软件，一般都是 vim 或 emacs。)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"也可以在 \"),s(\"code\",[this._v(\"commit\")]),this._v(\" 命令后添加 \"),s(\"code\",[this._v(\"-m\")]),this._v(\" 选项，将提交信息与命令放在同一行\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" commit -m \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Story 182: Fix benchmarks for speed\"')]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"master 463dc4f\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" Story 182: Fix benchmarks \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" speed\\n 2 files changed, 2 insertions\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"+\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n create mode 100644 README\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"提交后它会告诉你，当前是在哪个分支（\"),s(\"code\",[this._v(\"master\")]),this._v(\"）提交的，本次提交的完整 SHA-1 校验和是什么（\"),s(\"code\",[this._v(\"463dc4f\")]),this._v(\"），以及在本次提交中，有多少文件修订过，多少行添加和删改过。\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"p\",[e(\"code\",[t._v(\"commit\")]),t._v(\" 命令加上 \"),e(\"code\",[t._v(\"-a\")]),t._v(\" 选项，Git 就会自动把所有\"),e(\"strong\",[t._v(\"已经跟踪过\")]),t._v(\"的文件暂存起来一并提交，从而跳过 \"),e(\"code\",[t._v(\"git add\")]),t._v(\" 步骤\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果此次提交暂存区没有任何\\b\\b变动, 想要提交需要加上\"),s(\"code\",[this._v(\"--allow-empty\")]),this._v(\"参数.\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" commit --allow-empty -m \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"空的\"')]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"master 76a5b84\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" 空的\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"状态简览\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#状态简览\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 状态简览\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"git status\")]),this._v(\" 命令的输出十分详细，但其用语有些繁琐。 如果你使用 \"),s(\"code\",[this._v(\"git status -s\")]),this._v(\" 命令或 \"),s(\"code\",[this._v(\"git status --short\")]),this._v(\" 命令，你将得到一种更为紧凑的格式输出。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" status -s\\n M README\\nMM Rakefile\\nA  lib/git.rb\\nM  lib/simplegit.rb\\n?? LICENSE.txt\\n\")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"新添加的未跟踪文件前面有 \"),e(\"code\",[t._v(\"??\")]),t._v(\" 标记，\")]),e(\"li\",[t._v(\"新添加到暂存区中的文件前面有 \"),e(\"code\",[t._v(\"A\")]),t._v(\" 标记，\")]),e(\"li\",[t._v(\"修改过的文件前面有 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 标记\\n\"),e(\"ul\",[e(\"li\",[t._v(\"出现在右边的 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 表示该文件被修改了但是还没放入暂存区\")]),e(\"li\",[t._v(\"出现在靠左边的 \"),e(\"code\",[t._v(\"M\")]),t._v(\" 表示该文件被修改了并放入了暂存区。\")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"向 \"),s(\"code\",[this._v(\"Rakefile\")]),this._v(\" 文件前面有两个 \"),s(\"code\",[this._v(\"MM\")]),this._v(\", 表示在工作区被修改并提交到暂存区后又在工作区中被修改了，所以在暂存区和工作区都有该文件被修改了的记录。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"移除文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#移除文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 移除文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果想\"),s(\"strong\",[this._v(\"移除某个文件的已跟踪状态\")]),this._v(\"（确切地说，是从暂存区域移除）.  可以使用 \"),s(\"code\",[this._v(\"git rm\")]),this._v(\" 命令.  此命令还会连带从工作目录中把指定的文件删除\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果只是简单地从工作目录中手工删除文件，运行 \"),s(\"code\",[this._v(\"git status\")]),this._v(\" 时就会在 “Changes not staged for commit” 部分（也就是 未暂存清单）看到\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果\"),s(\"strong\",[this._v(\"文件删除之前修改过并且已经放到暂存区域\")]),this._v(\"的话，则必须要用强制删除选项 \"),s(\"code\",[this._v(\"-f\")]),this._v(\". 这是一种安全特性，用于防止误删还没有添加到快照的数据.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"另外一种情况是，我们想\"),s(\"strong\",[this._v(\"把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中\")]),this._v(\"。换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一大堆文件添加到暂存区时，这一做法尤其有用。使用 \"),s(\"code\",[this._v(\"--cached\")]),this._v(\" 选项可以做到.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"忽略文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#忽略文件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 忽略文件\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。我们可以创建一个名为 \"),s(\"code\",[this._v(\".gitignore\")]),this._v(\" 的文件，列出要忽略的文件模式。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"*.\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"[\")]),this._v(\"oa\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[this._v(\"]\")]),this._v(\"\\n*~\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"要养成一开始就设置好 \"),s(\"code\",[this._v(\".gitignore\")]),this._v(\" 文件的习惯，以免将来误提交无用的文件.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\".gitignore\")]),this._v(\" 的格式规范如下：\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"所有空行或者以 \"),e(\"code\",[t._v(\"＃\")]),t._v(\" 开头的行都会被 Git 忽略。\")]),e(\"li\",[t._v(\"可以使用标准的 \"),e(\"code\",[t._v(\"glob\")]),t._v(\" 模式匹配。\")]),e(\"li\",[t._v(\"匹配模式可以以（\"),e(\"code\",[t._v(\"/\")]),t._v(\"）开头防止递归。\")]),e(\"li\",[t._v(\"匹配模式可以以（\"),e(\"code\",[t._v(\"/\")]),t._v(\"）结尾指定目录。\")]),e(\"li\",[t._v(\"要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（\"),e(\"code\",[t._v(\"!\")]),t._v(\"）取反。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"glob\")]),this._v(\" 模式是指 shell 所使用的简化了的正则表达式:\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"星号（\"),e(\"code\",[t._v(\"*\")]),t._v(\"）匹配零个或多个任意字符;\")]),e(\"li\",[e(\"code\",[t._v(\"[abc]\")]),t._v(\" 匹配任何一个列在方括号中的字符;\")]),e(\"li\",[t._v(\"问号（\"),e(\"code\",[t._v(\"?\")]),t._v(\"）只匹配一个任意字符;\")]),e(\"li\",[t._v(\"如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 \"),e(\"code\",[t._v(\"[0-9]\")]),t._v(\" 表示匹配所有 0 到 9 的数字）;\")]),e(\"li\",[t._v(\"使用两个星号（\"),e(\"code\",[t._v(\"*\")]),t._v(\") 表示匹配任意中间目录，比如\"),e(\"code\",[t._v(\"a/**/z\")]),t._v(\" 可以匹配 a/z, a/b/z 或 \"),e(\"code\",[t._v(\"a/b/c/z\")]),t._v(\"等。\")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# no .a files\")]),t._v(\"\\n*.a\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# but do track lib.a, even though you're ignoring .a files above\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"lib.a\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# only ignore the TODO file in the current directory, not subdir/TODO\")]),t._v(\"\\n/TODO\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore all files in the build/ directory\")]),t._v(\"\\nbuild/\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore doc/notes.txt, but not doc/server/arch.txt\")]),t._v(\"\\ndoc/*.txt\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# ignore all .pdf files in the doc/ directory\")]),t._v(\"\\ndoc/**/*.pdf\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"文件状态-工作区域\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件状态-工作区域\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 文件状态 & 工作区域\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"在 Git 中文件有两种状态：\"),s(\"strong\",[this._v(\"已跟踪（tracked）\")]),this._v(\" 和 \"),s(\"strong\",[this._v(\"未跟踪（untracked）\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"**已跟踪（tracked）**又分为：\"),s(\"strong\",[this._v(\"已提交（committed）\")]),this._v(\"、**已修改（modified）**和 \"),s(\"strong\",[this._v(\"已暂存（staged）\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"被 Git 管理的项目有三个工作区域：\"),s(\"strong\",[this._v(\"版本库（Repository）\")]),this._v(\"、\"),s(\"strong\",[this._v(\"工作区（Working Directory）\")]),this._v(\" 和 \"),s(\"strong\",[this._v(\"暂存区（Staging Area）\")]),this._v(\"。\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"工作区: 就是你在电脑里能看到的目录。\")]),e(\"li\",[t._v(\"暂存区：英文叫 stage, 或 index。一般存放在\"),e(\"code\",[t._v(\".git\")]),t._v(\"目录下的 \"),e(\"code\",[t._v(\"index\")]),t._v(\" 文件（\"),e(\"code\",[t._v(\".git/index\")]),t._v(\"）中，所以我们把暂存区有时也叫作索引（index）。\")]),e(\"li\",[t._v(\"版本库：\"),e(\"code\",[t._v(\".git\")]),t._v(\" 目录不算工作区，而是 Git 的版本库。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"img\",{attrs:{src:\"https://i.imgur.com/qmzpPGu.jpg\",alt:\"1352126739_7909\"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v('当对工作区修改（或新增）的文件执行 \"'),s(\"code\",[this._v(\"git add\")]),this._v('\" 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的 ID 被记录在暂存区的文件索引中。')])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"当执行提交操作（\"),s(\"code\",[this._v(\"git commit\")]),this._v(\"）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"查看提交历史\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看提交历史\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 查看提交历史\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"\\b想回顾提交历史需要使用 \"),s(\"code\",[this._v(\"git log\")]),this._v(\" 命令\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"garrikliu:a xiangliu$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" log\\ncommit fb3afcd7ad8151207cec0ace9a6550c3e1589f81 \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"HEAD\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nAuthor: Garrik-Liu \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"garrikliu@Gmail.com\"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\nDate:   Mon Feb 4 16:55:48 2019 +0800\\n\\n    deleted readme\\n\\ncommit 022abc8b56edac279d3aa28981913e378bca136b\\nAuthor: Garrik-Liu \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"garrikliu@Gmail.com\"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\nDate:   Sun Feb 3 09:56:44 2019 +0800\\n\\n    add readme.md\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"默认不用任何参数的话，\"),s(\"code\",[this._v(\"git log\")]),this._v(\" 会按提交时间列出所有的更新，最近的更新排在最上面。这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"一个常用的选项是 \"),s(\"code\",[this._v(\"-p\")]),this._v(\"，用来显示每次提交的内容差异。 你也可以加上 \"),s(\"code\",[this._v(\"-2\")]),this._v(\" 来仅显示最近两次提交(同理 \"),s(\"code\",[this._v(\"-3\")]),this._v(\" 就是最近的三次提交)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果你想看到每次提交的简略的统计信息，你可以使用 \"),s(\"code\",[this._v(\"--stat\")]),this._v(\" 选项.  \"),s(\"code\",[this._v(\"--stat\")]),this._v(\" 选项在每次提交的下面列出所有被修改过的文件、有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。 在每次提交的最后还有一个总结。\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"commit a11bef06a3f659402fe7563abf99ad00de2209e6\\nAuthor: Scott Chacon \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"schacon@gee-mail.com\"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\nDate:   Sat Mar 15 10:31:28 2008 -0700\\n\\n    first commit\\n\\n README           \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\"  6 ++++++\\n Rakefile         \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" 23 +++++++++++++++++++++++\\n lib/simplegit.rb \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" 25 +++++++++++++++++++++++++\\n 3 files changed, 54 insertions\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"+\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" log --pretty\"),s(\"span\",{attrs:{class:\"token operator\"}},[this._v(\"=\")]),this._v(\"oneline\\nca82a6dff817ec66f44342007202690a93763949 changed the version number\\n085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"test\")]),this._v(\"\\na11bef06a3f659402fe7563abf99ad00de2209e6 first commit\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"远程仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#远程仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"查看远程仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看远程仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 查看远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果想查看你已经配置的远程仓库服务器，可以运行 \"),s(\"code\",[this._v(\"git remote\")]),this._v(\" 命令。 它会列出你指定的每一个远程服务器的简写。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果你已经克隆了自己的仓库，那么至少应该能看到 \"),s(\"code\",[this._v(\"origin\")]),this._v(\". 这是 Git 给你克隆的仓库服务器的默认名字\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" clone https://github.com/schacon/ticgit\\nCloning into \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'ticgit'\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"..\")]),t._v(\".\\nremote: Reusing existing pack: 1857, done.\\nremote: Total 1857 \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"delta 0\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\", reused 0 \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"delta 0\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nReceiving objects: 100% \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"1857/1857\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\", 374.35 KiB \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" 268.00 KiB/s, done.\\nResolving deltas: 100% \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"772/772\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\", done.\\nChecking connectivity\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"..\")]),t._v(\". done.\\n$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"cd\")]),t._v(\" ticgit\\n$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote\\norigin\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"指定选项 \"),s(\"code\",[this._v(\"-v\")]),this._v(\"，会显示需要读写远程仓库使用的 Git 保存的仓库服务器的名字, 以及其对应的 URL。\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote -v\\norigin\\thttps://github.com/schacon/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\norigin\\thttps://github.com/schacon/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"添加远程仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#添加远程仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 添加远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"运行 \"),s(\"code\",[this._v(\"git remote add <shortname> <url>\")]),this._v(\" 添加一个新的远程 Git 仓库, 同时可以为仓库指定一个名字.\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote\\norigin\\n$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote add pb https://github.com/paulboone/ticgit\\n$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote -v\\norigin\\thttps://github.com/schacon/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\norigin\\thttps://github.com/schacon/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\npb\\thttps://github.com/paulboone/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\npb\\thttps://github.com/paulboone/ticgit \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果你使用 \"),s(\"code\",[this._v(\"clone\")]),this._v(\" 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为名称简写。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"抓取-pull-拉取-fetch\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#抓取-pull-拉取-fetch\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 抓取(pull) & 拉取(fetch)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"拉取-fetch\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#拉取-fetch\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 拉取(fetch)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"从远程仓库中获得数据，可以执行 \"),s(\"code\",[this._v(\"git fetch [remote-name]\")]),this._v(\".  这个命令会访问远程仓库，从中\"),s(\"strong\",[this._v(\"拉取\")]),this._v(\"所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"必须注意 \"),s(\"code\",[this._v(\"git fetch\")]),this._v(\" 命令会将数据\"),s(\"strong\",[this._v(\"拉取\")]),this._v(\"到你的本地仓库 - 它并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"抓取-pull\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#抓取-pull\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 抓取(pull)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"git pull = git fetch + git merge\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"推送到远程仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#推送到远程仓库\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 推送到远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"使用命令 \"),s(\"code\",[this._v(\"git push [remote-name] [branch-name]\")]),this._v(\" 将你本地的内容推送到远端服务器.\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ul\",[e(\"li\",[t._v(\"把 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 這個分支的內容，推向 \"),e(\"code\",[t._v(\"origin\")]),t._v(\" 這個位置。\")]),e(\"li\",[t._v(\"在 \"),e(\"code\",[t._v(\"origin\")]),t._v(\" 那個遠端 Server 上，如果 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 不存在，就建立一個叫做 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 的同名分支。\")]),e(\"li\",[t._v(\"但如果本來 Server 上就存在 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 分支，便會移動 Server 上 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 分支的位置，使它指到目前最新的進度上。\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"设定-upstream-上游\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设定-upstream-上游\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 设定 upstream (上游)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果有設定，當下次執行 \"),s(\"code\",[this._v(\"git push\")]),this._v(\" 指令的時候，它就會用來當預設值。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" push -u origin master\\n\")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"p\",[t._v(\"就會把 \"),e(\"code\",[t._v(\"origin/master\")]),t._v(\" 設定為本地 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 分支的 upstream，當下回執行 \"),e(\"code\",[t._v(\"git push\")]),t._v(\" 指令而不加任何參數的時候，它就會猜你是要推往 \"),e(\"code\",[t._v(\"origin\")]),t._v(\" 這個遠端節點，並且把 \"),e(\"code\",[t._v(\"master\")]),t._v(\" 這個分支推上去。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"不想要同名的分支\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#不想要同名的分支\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 不想要同名的分支\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" push origin master\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" push origin master:master\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" push origin master:cat\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"查看远程仓库-2\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看远程仓库-2\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 查看远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"如果想要查看某一个远程仓库的更多信息，可以使用 \"),s(\"code\",[this._v(\"git remote show [remote-name]\")]),this._v(\" 命令\")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[t._v(\"$ \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote show origin\\n* remote origin\\n  Fetch URL: https://github.com/schacon/ticgit\\n  Push  URL: https://github.com/schacon/ticgit\\n  HEAD branch: master\\n  Remote branches:\\n    master                               tracked\\n    dev-branch                           tracked\\n  Local branch configured \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'git pull'\")]),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\":\")]),t._v(\"\\n    master merges with remote master\\n  Local ref configured \"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'git push'\")]),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\":\")]),t._v(\"\\n    master pushes to master \"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"up to date\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"它同样会列出远程仓库的 URL 与跟踪分支的信息。 这些信息非常有用，它告诉你正处于 master 分支，并且如果运行 \"),s(\"code\",[this._v(\"git pull\")]),this._v(\"，就会抓取所有的远程引用，然后将远程 master 分支合并到本地 master 分支。 它也会列出拉取到的所有远程引用。\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"远程仓库的移除与重命名\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#远程仓库的移除与重命名\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 远程仓库的移除与重命名\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"运行 \"),s(\"code\",[this._v(\"git remote rename\")]),this._v(\" 去修改一个远程仓库的简写名\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" remote \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"rename\")]),this._v(\" pb paul\\n$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" remote\\norigin\\npaul\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"使用 \"),s(\"code\",[this._v(\"git remote rm\")]),this._v(\" 移除一个远程仓库\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[this._v(\"$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" remote \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"rm\")]),this._v(\" paul\\n$ \"),s(\"span\",{attrs:{class:\"token function\"}},[this._v(\"git\")]),this._v(\" remote\\norigin\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"使用分支\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用分支\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 使用分支\")])}],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}