{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/实战篇/todolist.md?vue&type=template&id=9c42cf6e","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/实战篇/todolist.md","mtime":1545181497917},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"todo-list\\\"><a href=\\\"#todo-list\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> TODO LIST</h1><p>在前面我们已经介绍过了 Node.js 的基本知识.  在这一篇, 让我们来试着用 Node.js, EJS 模板引擎 和 MongoDB 来搭建一个 TODO List 单页面应用.</p><p>最终效果如下:</p><p><img src=\\\"https://i.imgur.com/tu57EL4.gif\\\" alt=\\\"todo\\\"></p><h2 id=\\\"项目分析\\\"><a href=\\\"#项目分析\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 项目分析</h2><p>首先, 我们分析一下这个 APP 有什么功能.</p><ol><li>展示已有任务</li><li>\\b添加新任务</li><li>删除\\b已有任务</li></ol><p>然后我们\\b来设计数据结构.  在这个项目里, 我们使用 MongoDB 数据库. 在其中, &quot;文档&quot; 作为基本数据单位, 由 &quot;键值对&quot; 组成.  在分析完应用所应有的功能之后, 我\\b决定让一个 TODO 任务对应一个文档, 其\\b包含两个键: 一个是\\b作为唯一标识的 <code>&quot;id&quot;</code>; 一个是\\b\\b储存任务信息的 <code>&quot;taskDetail&quot;</code></p><p>下面是一个数据示例:</p><div class=\\\"language-json extra-class\\\"><pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span> \\n    <span class=\\\"token property\\\">&quot;id&quot;</span><span class=\\\"token operator\\\">:</span> \\bObjectID(<span class=\\\"token string\\\">&quot;000001&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> // \\b类型<span class=\\\"token operator\\\">:</span> ObjectID\\n    <span class=\\\"token property\\\">&quot;taskDetail&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;任务信息&quot;</span>   //  类型<span class=\\\"token operator\\\">:</span> String\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>之后, 在 HTTP 路由上我们设计用以下接口来\\b对应实现以上功能:</p><ul><li><code>/</code> (GET - 展现页面)</li><li><code>/addTask</code> (GET - 添加任务)</li><li><code>/deleteTask</code> (\\bGET - \\b删除)</li></ul><h2 id=\\\"搭建服务器骨架\\\"><a href=\\\"#搭建服务器骨架\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 搭建服务器骨架</h2><p>接下来让我们开始\\b写服务器代码的基本\\b结构.</p><p>在项目目录下新建 <code>app.js</code> 文件, 具体代码如下:</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 引入模块</span>\\n<span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> url <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'url'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 创建 HTTP 服务器</span>\\n<span class=\\\"token keyword\\\">var</span> server <span class=\\\"token operator\\\">=</span> http<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 解析请求 URL</span>\\n    <span class=\\\"token keyword\\\">var</span> urlObj <span class=\\\"token operator\\\">=</span> url<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token comment\\\">// 路由</span>\\n    <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>urlObj<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token comment\\\">// 展示已有任务</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/addTask&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token comment\\\">// 添加新任务</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/deleteTask&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token comment\\\">// 删除已有任务</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token comment\\\">// 返回 404 - Not Found</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 监听请求</span>\\nserver<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">8080</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;服务器启动, 监听 8080 端口:&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div><h2 id=\\\"编写视图\\\"><a href=\\\"#编写视图\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> \\b编写视图</h2><p>在项目目录下新建 \\b<code>views</code> 目录, 用来存放 EJS 模板文件.  在这个项目中我们需要 <code>index.ejs</code> 和 <code>404.ejs</code> 两个模板, 一个用来显示应用界面, 一个用来显示 404 错误信息.</p><div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token keyword\\\">.</span>\\n├── app.js\\n└── views\\n    ├── 404.ejs\\n    └── index.ejs\\n</code></pre></div><p><code>index.ejs</code> 的代码如下:</p><div class=\\\"language-html extra-class\\\"><pre class=\\\"language-html\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>TODO LIST<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">action</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/addTask<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">method</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>GET<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>text<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>taskDetail<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">placeholder</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>请输入任务...<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>submit<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>提交<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            &lt;% for(var i = 0; i &lt; tasks.length; i++) { %&gt;\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span><span class=\\\"token punctuation\\\">&gt;</span></span>&lt;%= tasks[i].taskDetail %&gt;<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>a</span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/deleteTask?id=&lt;%= tasks[i]._id %&gt;<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>删除<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>a</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            &lt;% } %&gt;\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div><p>通过一个 <code>&lt;form&gt;</code> 来向服务器的 <code>/addTask</code> 路径提交请求来添加新任务.</p><p>\\b在 <code>&lt;ul&gt;</code> 标签中, 用从服务器传来的 <code>tasks</code> 数组来遍历渲染出\\b已有的任务.  每个任务上有一个删除链接, 用来向服务器的 <code>/deleteTask</code> 路径发送请求来删除\\b任务.  通过查询字符串中的 <code>id</code> 字段来指明\\b具体\\b要删除哪个任务.</p><p><code>404.ejs</code> 的代码如下:</p><div class=\\\"language-html extra-class\\\"><pre class=\\\"language-html\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>404<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div><h2 id=\\\"编写-路由代码\\\"><a href=\\\"#编写-路由代码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 编写 <code>&quot;/&quot;</code> 路由\\b代码</h2><p>客户端访问这个路由时, 服务器要先去\\b数据库获取已有的任务数据, \\b并保存在数组中, 然后把数据传入\\b\\b\\b\\b模板来渲染出视图并响应给客户端.</p><p>那么首先\\b, 我们用 NPM 安装 <code>mongodb</code> 和 <code>ejs</code> 模块.</p><div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">npm</span> init\\n<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> ejs mongodb -save\\n</code></pre></div><p>之后编写 Node.js 代码:</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 引入模块</span>\\n<span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> url <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'url'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> ejs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'ejs'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> MongoClient <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mongodb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>MongoClient<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 数据库服务器地址</span>\\n<span class=\\\"token keyword\\\">var</span> mongoServerUrl <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'mongodb://localhost:27017'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> server <span class=\\\"token operator\\\">=</span> http<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> urlObj <span class=\\\"token operator\\\">=</span> url<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>urlObj<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token comment\\\">// MongoDB 客户端连接到 \\bMongoDB 服务器</span>\\n            MongoClient<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mongoServerUrl<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> client<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n                \\n                <span class=\\\"token comment\\\">// 连接到 'todoDB' \\b数据库 (你的数据库名字不需要和我一样)</span>\\n                <span class=\\\"token keyword\\\">var</span> db <span class=\\\"token operator\\\">=</span> client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">db</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todoDb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n                <span class=\\\"token comment\\\">// 获取 'todos' 集合实例 (你的数据库名字不需要和我一样)</span>\\n                <span class=\\\"token keyword\\\">var</span> collection <span class=\\\"token operator\\\">=</span> db<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collection</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todos'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                \\n                <span class=\\\"token comment\\\">// 查找集合下所有的文档, 并以数组的形式返回</span>\\n                collection<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n                    \\n                    <span class=\\\"token comment\\\">// 渲染视图并响应给客户端</span>\\n                    ejs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderFile</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./views/index.ejs'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> tasks<span class=\\\"token punctuation\\\">:</span> result <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> str<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n\\n                        <span class=\\\"token comment\\\">// \\bMongoDB 客户端与服务器的链接断开, </span>\\n                        <span class=\\\"token comment\\\">// 之后在其回调函数中发送响应</span>\\n                        client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                            res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'Content-Type'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text/html;charset=utf-8'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                            res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>str<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                            res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 代码省略...</span>\\n</code></pre></div><h2 id=\\\"编写-addtask-路由代码\\\"><a href=\\\"#编写-addtask-路由代码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 编写 <code>&quot;/addTask&quot;</code> 路由\\b代码</h2><p>当客户端向 <code>/addTask</code> 提交表单时, 服务器获取它查询对象里 <code>taskDetail</code> 的值, 作为用户输入的\\b任务详情.  之后在在 MongoDB 数据库中插入新文档.</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 代码省略...</span>\\n<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/addTask&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token comment\\\">// 获取任务详情 </span>\\n    <span class=\\\"token keyword\\\">var</span> taskDetail <span class=\\\"token operator\\\">=</span> urlObj<span class=\\\"token punctuation\\\">.</span>query<span class=\\\"token punctuation\\\">.</span>taskDetail<span class=\\\"token punctuation\\\">;</span>\\n    \\n    MongoClient<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mongoServerUrl<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> client<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n            \\n        <span class=\\\"token keyword\\\">var</span> db <span class=\\\"token operator\\\">=</span> client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">db</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todoDb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">var</span> collection <span class=\\\"token operator\\\">=</span> db<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collection</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todos'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token comment\\\">// 插入新文档</span>\\n        <span class=\\\"token comment\\\">// 因为 MongoDB 自动为文档添加类型为 ObjectID 的 _id 主键</span>\\n        <span class=\\\"token comment\\\">// 所以我就不自己为\\b每个任务创建 id 了</span>\\n        collection<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">insertOne</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> taskDetail<span class=\\\"token punctuation\\\">:</span> taskDetail <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n            \\n            <span class=\\\"token comment\\\">// 插入完文档, 断开 MongoDB 连接,</span>\\n            <span class=\\\"token comment\\\">// 让\\b请求重定向到 '/' 路径下, 以来重新显示已有\\b任务</span>\\n            client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">302</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'Location'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 代码省略...</span>\\n</code></pre></div><h2 id=\\\"编写-deletetask-路由代码\\\"><a href=\\\"#编写-deletetask-路由代码\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 编写 <code>&quot;/deleteTask&quot;</code> 路由\\b代码</h2><p>当客户端向 <code>/deleteTask</code> \\b路径发送请求, 服务器获取查询\\b\\b对象中 <code>id</code> 的值.  \\b之后去 MongoDB 数据库找到匹配的文档, 并删除.</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 引入 mongodb 模块中的 ObjectID 函数.  </span>\\n<span class=\\\"token comment\\\">// 稍后用其来生成 ObjectID 类型的值</span>\\n<span class=\\\"token keyword\\\">var</span> ObjectID <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mongodb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>ObjectID<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 代码省略...</span>\\n\\n<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">&quot;/deleteTask&quot;</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token comment\\\">// 获取查询对象中的 id 值</span>\\n    <span class=\\\"token keyword\\\">var</span> targetId <span class=\\\"token operator\\\">=</span> urlObj<span class=\\\"token punctuation\\\">.</span>query<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token comment\\\">// \\b刚刚获取的 id 值的类型为 String</span>\\n    <span class=\\\"token comment\\\">// 我们还需要\\b用\\b其来生成对应的 ObjectID 值</span>\\n    <span class=\\\"token keyword\\\">var</span> targetObjectId <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ObjectID</span><span class=\\\"token punctuation\\\">(</span>targetId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    MongoClient<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mongoServerUrl<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> client<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">var</span> db <span class=\\\"token operator\\\">=</span> client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">db</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todoDb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">var</span> collection <span class=\\\"token operator\\\">=</span> db<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collection</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'todos'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        \\n        <span class=\\\"token comment\\\">// 删除对应的文档</span>\\n        collection<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">deleteOne</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> _id<span class=\\\"token punctuation\\\">:</span> targetObjectId <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n\\n            client<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">302</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'Location'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 代码省略...</span>\\n</code></pre></div><h2 id=\\\"处理错误请求\\\"><a href=\\\"#处理错误请求\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 处理错误请求</h2><p>最后别忘了补全用以返回 404 错误信息的代码.</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    ejs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderFile</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./views/404.ejs'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> str<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n\\n        res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">404</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'Content-Type'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text/html;charset=utf-8'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>str<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><p>至此所有的代码\\b\\b编写完毕.  试着运行一下吧!<br>\\n对了, 别忘了运行之前先启动 MongoDB 服务器, 并创建好数据库!</p>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"\\b\\n我的代码保存在 Github, 可以作为参考\\b - \"),_vm._ssrNode(\"<a href=\\\"https://github.com/Garrik-Liu/MyTutorials/tree/master/%5BNode-EJS-MongoDB%5D-TODO_01\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"传送门\"),_c('OutboundLink')],2)],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}