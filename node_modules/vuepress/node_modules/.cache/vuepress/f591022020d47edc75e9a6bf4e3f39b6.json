{"remainingRequest":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Downloads/front-end-notebook/docs/others/http/http状态码.md?vue&type=template&id=73fe47fc","dependencies":[{"path":"/Users/xiangliu/Downloads/front-end-notebook/docs/others/http/http状态码.md","mtime":1531257964455},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1530932815982},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1530932815981},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1530932816121}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"http-状态码\"><a class=\"header-anchor\" href=\"#http-状态码\" aria-hidden=\"true\">#</a> HTTP 状态码</h1>\n<p>状态码的职责是当客户端向服务器端发送请求时，描述返回的请求结果。</p>\n<p>借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了错误。</p>\n<p>状态码以 3 位数字 和 原因短语 组成。</p>\n<p>数字中的第一位指定了响应类别，后两位无分类。响应类别有以下 5 种:</p>\n<table>\n<thead>\n<tr>\n<th>数字</th>\n<th>类别</th>\n<th>原因短语</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1XX</td>\n<td>Informational（信息性状态码）</td>\n<td>接收的请求正在处理</td>\n</tr>\n<tr>\n<td>2XX</td>\n<td>Success（成功状态码）</td>\n<td>请求正常处理完毕</td>\n</tr>\n<tr>\n<td>3XX</td>\n<td>Redirection（重定向状态码）</td>\n<td>需要进行附加操作以完成请求</td>\n</tr>\n<tr>\n<td>4XX</td>\n<td>Client Error（客户端错误状态码）</td>\n<td>服务器无法处理请求</td>\n</tr>\n<tr>\n<td>5XX</td>\n<td>Server Error（服务器错误状态码）</td>\n<td>服务器处理请求出错</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"_2xx-成功\"><a class=\"header-anchor\" href=\"#_2xx-成功\" aria-hidden=\"true\">#</a> 2XX 成功</h2>\n<p>2XX 的响应结果表明请求被正常处理了。</p>\n<h3 id=\"_200-ok\"><a class=\"header-anchor\" href=\"#_200-ok\" aria-hidden=\"true\">#</a> 200 OK</h3>\n<p>表示从客户端发来的请求在服务器端被正常处理了。</p>\n<h3 id=\"_204-no-content\"><a class=\"header-anchor\" href=\"#_204-no-content\" aria-hidden=\"true\">#</a> 204 No Content</h3>\n<p>该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。</p>\n<p>比如，当从浏览器发出请求处理后，返回 204 响应，那么浏览器显示的页面不发生更新。</p>\n<p>一般在只需要从客户端往服务器发送信息，而对客户端不需要发送新信息内容的情况下使用。</p>\n<h3 id=\"_206-partial-content\"><a class=\"header-anchor\" href=\"#_206-partial-content\" aria-hidden=\"true\">#</a> 206 Partial Content</h3>\n<p>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的 GET 请求。</p>\n<h2 id=\"_3xx-重定向\"><a class=\"header-anchor\" href=\"#_3xx-重定向\" aria-hidden=\"true\">#</a> 3XX 重定向</h2>\n<p>3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。</p>\n<h3 id=\"_301-moved-permanently\"><a class=\"header-anchor\" href=\"#_301-moved-permanently\" aria-hidden=\"true\">#</a> 301 Moved Permanently</h3>\n<p>永久性重定向。该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在新的 URI。</p>\n<p>如果已经把资源对应的 URI 保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存。</p>\n<h3 id=\"_302-found\"><a class=\"header-anchor\" href=\"#_302-found\" aria-hidden=\"true\">#</a> 302 Found</h3>\n<p>临时性重定向。该状态码表示请求的资源已被分配了新的 URI，希望用户（本次）能使用新的 URI 访问。</p>\n<p>302 状态码代表的资源不是被永久移动，只是临时性质的。换句话说，已移动的资源对应的 URI 将来还有可能发生改变。</p>\n<h3 id=\"_303-see-other\"><a class=\"header-anchor\" href=\"#_303-see-other\" aria-hidden=\"true\">#</a> 303 See Other</h3>\n<p>该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源。</p>\n<p>303 状态码和 302 Found 状态码有着相同的功能，但 303 状态码明确表示客户端<strong>应当采用 GET 方法</strong>获取资源</p>\n<p>比如，当使用 POST 方法上传表单，其执行后的处理结果是希望客户端能以 GET 方法重定向到另一个 URI 上去时.</p>\n<blockquote>\n<p>当 301、302、303 响应状态码返回时，几乎所有的浏览器都会把 POST 改成 GET，并删除请求报文内的主体，之后请求会自动再次发送。</p>\n</blockquote>\n<blockquote>\n<p>虽然 301、302 标准是禁止将 POST 方法改变成 GET 方法的，但实际使用时大家都会这么做。</p>\n</blockquote>\n<h3 id=\"_304-not-modified\"><a class=\"header-anchor\" href=\"#_304-not-modified\" aria-hidden=\"true\">#</a> 304 Not Modified</h3>\n<p>该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但因发生请求条件未满足的情况后，直接返回 304 Not Modified（服务器端资源未改变，可直接使用客户端未过期的缓存）。</p>\n<p>304 状态码返回时，不包含任何响应的主体部分。304 虽然被划分在 3XX 类别中，但是<strong>和重定向没有关系</strong>。</p>\n<blockquote>\n<p>附带条件的请求是指采用 GET 方法的请求报文中包含 If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since 中任一首部。</p>\n</blockquote>\n<h3 id=\"_307-temporary-redirect\"><a class=\"header-anchor\" href=\"#_307-temporary-redirect\" aria-hidden=\"true\">#</a> 307 Temporary Redirect</h3>\n<p>临时重定向。该状态码与 302 Found 有着相同的含义。尽管 302 标准禁止 POST 变换成 GET，但实际使用时大家并不遵守。</p>\n<p>307 会遵照标准，不会从 POST 变成 GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况。</p>\n<h2 id=\"_4xx-客户端错误\"><a class=\"header-anchor\" href=\"#_4xx-客户端错误\" aria-hidden=\"true\">#</a> 4XX 客户端错误</h2>\n<p>4XX 的响应结果表明客户端是发生错误的原因所在。</p>\n<h3 id=\"_400-bad-request\"><a class=\"header-anchor\" href=\"#_400-bad-request\" aria-hidden=\"true\">#</a> 400 Bad Request</h3>\n<p>该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器会像 200 OK 一样对待该状态码。</p>\n<h3 id=\"_401-unauthorized\"><a class=\"header-anchor\" href=\"#_401-unauthorized\" aria-hidden=\"true\">#</a> 401 Unauthorized</h3>\n<p>该状态码表示发送的请求需要有通过 HTTP 认证的认证信息。</p>\n<p>返回含有 401 的响应必须包含一个适用于被请求资源的 WWW-Authenticate 首部用以质询（challenge）用户信息。</p>\n<p>当浏览器初次接收到 401 响应，会弹出认证用的对话窗口。</p>\n<h3 id=\"_403-forbidden\"><a class=\"header-anchor\" href=\"#_403-forbidden\" aria-hidden=\"true\">#</a> 403 Forbidden</h3>\n<p>该状态码表明对请求资源的访问被服务器拒绝了。服务器端没有必要给出拒绝的详细理由，但如果想作说明的话，可以在实体的主体部分对原因进行描述，这样就能让用户看到了。</p>\n<h3 id=\"_404-not-found\"><a class=\"header-anchor\" href=\"#_404-not-found\" aria-hidden=\"true\">#</a> 404 Not Found</h3>\n<p>该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。</p>\n<h2 id=\"_5xx-服务器错误\"><a class=\"header-anchor\" href=\"#_5xx-服务器错误\" aria-hidden=\"true\">#</a> 5XX 服务器错误</h2>\n<p>5XX 的响应结果表明服务器本身发生错误。</p>\n<h3 id=\"_500-internal-server-error\"><a class=\"header-anchor\" href=\"#_500-internal-server-error\" aria-hidden=\"true\">#</a> 500 Internal Server Error</h3>\n<p>该状态码表明服务器端在执行请求时发生了错误。</p>\n<h3 id=\"_503-service-unavailable\"><a class=\"header-anchor\" href=\"#_503-service-unavailable\" aria-hidden=\"true\">#</a> 503 Service Unavailable</h3>\n<p>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求.</p>\n<p>如果事先得知解除以上状况需要的时间，最好写入 RetryAfter 首部字段再返回给客户端。</p>\n</div>\n",null]}