{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/数据结构与算法/算法/复杂度分析.md?vue&type=template&id=10320d42","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/数据结构与算法/算法/复杂度分析.md","mtime":1538415434300},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_c('p',[_vm._v(\"简单说, 复杂度分析就是不用具体的测试数据来测试，就可以粗略地估计算法的执行效率的方法\")]),_vm._m(1),_c('p',[_vm._v(\"算法的执行效率，粗略地讲，就是算法代码执行的时间。\")]),_c('p',[_vm._v(\"先举个例子:\")]),_vm._m(2),_c('p',[_vm._v(\"看上面这一段代码, 求 1,2,3…n 的累加和.  估算一下这段代码的执行时间。这段代码的每一行都执行着类似的操作：读数据-运算-写数据。假设每行代码执行的时间都一样，为  unit_time。\")]),_vm._m(3),_vm._m(4),_c('p',[_vm._v(\"这个规律总结成一个公式:\")]),_vm._m(5),_vm._m(6),_vm._m(7),_vm._m(8),_vm._m(9),_c('p',[_vm._v(\"如何分析一段代码的时间复杂度？我这儿有三个比较实用的方法可以分享给你。\")]),_vm._m(10),_c('p',[_vm._v(\"我们在分析一个算法、一段代码的时间复杂度的时候，也只关注循环执行次数最多的那一段代码就可以了。\")]),_c('p',[_vm._v(\"这段核心代码执行次数的 n 的量级，就是整段要分析代码的时间复杂度。\")]),_c('p',[_vm._v(\"还是前面的例子, 第 2, 3 行都是常量级执行时间, 对时间复杂度没有什么影响.  我们只关注 for 循环里面的代码就可以了.  循环中的代码被执行了 n 次, 所以复杂度就是  O(n)。\")]),_vm._m(11),_c('p',[_vm._v(\"先看下面这一段代码:\")]),_vm._m(12),_vm._m(13),_c('p',[_vm._v(\"第二个循环的复杂度是 O(n), 第三个是 O(n^2).\")]),_c('p',[_vm._v(\"综合这三段代码的时间复杂度，我们取其中最大的量级。所以，整段代码的时间复杂度就为 O(n^2)。\")]),_vm._m(14),_vm._m(15),_vm._m(16),_c('p',[_vm._v(\"落实到具体的代码上，我们可以把乘法法则看成是嵌套循环\")]),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_vm._m(21),_vm._m(22),_c('p',[_vm._v(\"它们所花时间的比较\")]),_vm._m(23),_vm._m(24),_vm._m(25),_c('p',[_vm._v(\"当数据规模 n 越来越大时，非多项式量级算法的执行时间会急剧增加, 所以这是一种非常低效的算法\")]),_vm._m(26),_vm._m(27),_c('p',[_vm._v(\"O(1) 只是常量级时间复杂度的一种表示方法，并不是指只执行了一行代码。\")]),_c('p',[_vm._v(\"只要代码的执行时间不随 n 的增大而增长，这样代码的时间复杂度我们都记作 O(1)。\")]),_vm._m(28),_c('p',[_vm._v(\"对数时间复杂度非常常见，同时也是最难分析的一种时间复杂度。\")]),_c('p',[_vm._v(\"我们先来看一\\b段代码:\")]),_vm._m(29),_c('p',[_vm._v(\"从代码中可以看出，变量 i 的值从 1 开始取，每循环一次就乘以 2. 当大于 n 时，循环结束。\")]),_c('p',[_vm._v(\"实际上，变量 i 的取值就是一个等比数列。\")]),_vm._m(30),_c('p',[_vm._v(\"所以，我们只要知道 x 值是多少，就知道这行代码执行的次数了\")]),_vm._m(31),_vm._m(32),_vm._m(33),_vm._m(34),_c('p',[_vm._v(\"先看代码:\")]),_vm._m(35),_vm._m(36),_vm._m(37),_vm._m(38),_vm._m(39),_vm._m(40),_vm._m(41),_vm._m(42),_vm._m(43),_c('p',[_vm._v(\"上面这段代码中, 要查找的变量 x 可能出现在数组的任意位置。如果数组中第一个元素正好是要查找的变量 x，那就不需要继续遍历剩下的 n-1 个数据了，那时间复杂度就是 O(1)。但如果数组中不存在变量 x，那我们就需要把整个数组都遍历一遍，时间复杂度就成了 O(n)。\")]),_c('p',[_vm._v(\"为了表示代码在不同情况下的不同时间复杂度，我们需要引入三个概念：最好情况时间复杂度、最坏情况时间复杂度和平均情况时间复杂度。\")]),_vm._m(44),_vm._m(45),_vm._m(46),_c('p',[_vm._v(\"为了更好地表示平均情况下的复杂度，我们需要引入另一个概念：平均情况时间复杂度，后面我简称为平均\\b时间复杂度\")]),_c('p',[_vm._v(\"还是拿上面找\\b变量 X 在数组中的位置的例子:\")]),_vm._m(47),_c('p',[_vm._v(\"我们把每种情况下，查找需要遍历的元素个数累加起来，然后再除以 n+1，就可以得到需要遍历的元素个数的平均值，即：\")]),_vm._m(48),_vm._m(49),_c('p',[_vm._v(\"但是上面这种计算方法其实存在问题.  我们知道，要查找的变量 x，要么在数组里，要么就不在数组里。我们假设在数组中与不在数组中的概率都为 1/2。要查找的数据出现在 0～n-1 这 n 个位置的概率也是一样的，为 1/n。根据概率乘法法则，要查找的数据出现在 0～n-1 中任意位置的概率就是 1/(2n)。\")]),_vm._m(50),_vm._m(51),_vm._m(52),_vm._m(53),_c('p',[_vm._v(\"均摊时间复杂度，听起来跟平均时间复杂度有点儿像。大部分情况下，我们并不需要区分最好、最坏、平均三种复杂度。平均复杂度只在某些特殊情况下才会用到，而均摊时间复杂度应用的场景比它更加特殊、更加有限。\")]),_c('p',[_vm._v(\"下次再说:\\n\"),_c('a',{attrs:{\"href\":\"https://time.geekbang.org/column/article/40447\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"链接\"),_c('OutboundLink')],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"复杂度分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#复杂度分析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 复杂度分析\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"大-o-复杂度表示法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#大-o-复杂度表示法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 大 O 复杂度表示法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"cal\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        sum \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" sum\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"第 2、3 行代码分别需要 1 个 unit_time 的执执行时间，第 4、5 行都运行了 n 遍，所以需要 \"),_c('code',[_vm._v(\"2n * unit_time\")]),_vm._v(\" 的执行时间，所以这段代码总的执行时间就是 \"),_c('code',[_vm._v(\"(2n+2) * unit_time\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"可以看出来，所有代码的执行时间 T(n) 与\"),_c('strong',[_vm._v(\"每行代码的执行次数成正比\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/lqlpF7W.png\",\"alt\":\"22900968aa2b190072c985a08b0e92ef\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"T(n)\")]),_vm._v(\" 我们已经讲过了，它表示代码执行的时间；\")]),_c('li',[_c('code',[_vm._v(\"n\")]),_vm._v(\" 表示数据规模的大小；\")]),_c('li',[_c('code',[_vm._v(\"f(n)\")]),_vm._v(\" 表示每行代码执行的次数总和。\")]),_c('li',[_c('code',[_vm._v(\"O\")]),_vm._v(\" 表示代码的执行时间 \"),_c('code',[_vm._v(\"T(n)\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"f(n)\")]),_vm._v(\" 表达式成正比\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"所以，上面例子用大 O 时间复杂度表示法表示就是 \"),_c('code',[_vm._v(\"T(n) = O(2n+2)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"大 O 时间复杂度实际上并不具体表示代码真正的执行时间，而是表示\"),_c('strong',[_vm._v(\"代码执行时间随数据规模增长的变化趋势\")]),_vm._v(\"，所以，也叫作\"),_c('strong',[_vm._v(\"渐进时间复杂度，简称时间复杂度\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"时间复杂度分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#时间复杂度分析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 时间复杂度分析\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"_1-只关注循环执行次数最多的一段代码\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_1-只关注循环执行次数最多的一段代码\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 1. 只关注循环执行次数最多的一段代码\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"_2-加法法则：总复杂度等于量级最大的那段代码的复杂度\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_2-加法法则：总复杂度等于量级最大的那段代码的复杂度\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 2. 加法法则：总复杂度等于量级最大的那段代码的复杂度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"cal\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" p \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" p \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n     sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" q \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" q \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"q\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n     sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" q\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n \\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum_3 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n     j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n     \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"j\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n       sum_3 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum_3 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\"  i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" j\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n     \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n   \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n \\n   \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" sum_3\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这上面一有三个循环, 第一个循环里面代码执行了 100 次, 所以是一个常量的执行时间，跟 n 的规模无关。( 这里要记住, 无论常量级执行时间有多大, 都忽略掉, 因为我们研究是算法执行效率与数据规模\"),_c('strong',[_vm._v(\"增长\")]),_vm._v(\"的变化趋势. )\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"也就是说：\"),_c('strong',[_vm._v(\"总的时间复杂度就等于量级最大的那段代码的时间复杂度\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"_3-乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_3-乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 3. 乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果 \"),_c('code',[_vm._v(\"T1(n) = O(f(n))\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"T2(n) = O(g(n))\")]),_vm._v(\"；那么 \"),_c('code',[_vm._v(\"T(n) = T1(n) * T2(n) = O(f(n)) * O(g(n)) = O(f(n) * g(n))\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"cal\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" ret \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    ret \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" ret \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"f\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \\n \\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"f\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    sum \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" sum\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"我们单独看 \"),_c('code',[_vm._v(\"cal()\")]),_vm._v(\" 函数。假设 \"),_c('code',[_vm._v(\"f()\")]),_vm._v(\" 只是一个普通的操作, 那么 \"),_c('code',[_vm._v(\"cal()\")]),_vm._v(\" 函数的复杂度是 O(n).  但 \"),_c('code',[_vm._v(\"f()\")]),_vm._v(\" 函数的\\b复杂度也是 O(n), 所以 \"),_c('code',[_vm._v(\"cal()\")]),_vm._v(\" 函数的复杂度就是, \"),_c('code',[_vm._v(\"T(n) = T1(n) * T2(n) = O(n*n) = O(n^2)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"几种常见时间复杂度实例分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#几种常见时间复杂度实例分析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 几种常见时间复杂度实例分析\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/I1uuKxG.jpg\",\"alt\":\"3723793cc5c810e9d5b06bc95325bf0a\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"我们可以粗略地分为两类，\"),_c('strong',[_vm._v(\"多项式量级\")]),_vm._v(\" 和 \"),_c('strong',[_vm._v(\"非多项式量级\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/sm2Lima.jpg\",\"alt\":\"497a3f120b7debee07dc0d03984faf04\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"非多项式量级\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#非多项式量级\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 非多项式量级\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"其中，非多项式量级只有两个：\"),_c('code',[_vm._v(\"O(2n)\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"O(n!)\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"我们把时间复杂度为非多项式量级的算法问题叫作 \"),_c('strong',[_vm._v(\"NP\")]),_vm._v(\"（Non-Deterministic Polynomial，非确定多项式）问题。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"多项式量级\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#多项式量级\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 多项式量级\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"_1-o-1\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_1-o-1\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 1. O(1)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"_2-o-logn-、o-nlogn\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_2-o-logn-、o-nlogn\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 2. O(logn)、O(nlogn)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/lxW8Dfu.jpg\",\"alt\":\"9b1c88264e7a1a20b5954be9bc4bec9a\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"通过 \"),_c('code',[_vm._v(\"2 ^ x = n\")]),_vm._v(\" 求解 \"),_c('code',[_vm._v(\"x\")]),_vm._v(\". \"),_c('code',[_vm._v(\"x = log2n\")]),_vm._v(\" 这段代码的时间复杂度就是 \"),_c('code',[_vm._v(\"O(log2n)\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"实际上，不管是以 2 为底、以 3 为底，还是以 10 为底，我们可以把所有对数阶的时间复杂度都记为 \"),_c('code',[_vm._v(\"O(logn)\")]),_vm._v(\"。\\b\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"\\b原因很简单, 就拿上面的例子举例.  \"),_c('code',[_vm._v(\"O(log2n) = O(logn / log2)\")]),_vm._v(\".  \"),_c('code',[_vm._v(\"O(log2)\")]),_vm._v(\" 是一个常量, 我们就把它忽略掉了\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"_3-o-m-n-、o-m-n\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_3-o-m-n-、o-m-n\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 3. O(m+n)、O(m*n)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"cal\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" m\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" m\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"j\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" sum_2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" j\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" sum_1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" sum_2\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"从代码中可以看出，m 和 n 是表示两个数据规模。我们无法事先评估 m 和 n 谁的量级大，所以我们在表示复杂度的时候，就不能简单地利用加法法则，省略掉其中一个。所以，上面代码的时间复杂度就是 \"),_c('code',[_vm._v(\"O(m+n)\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"空间复杂度分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#空间复杂度分析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 空间复杂度分析\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"前面我讲过，时间复杂度的全称是渐进时间复杂度，表示\"),_c('strong',[_vm._v(\"算法的执行时间与数据规模之间的增长关系\")]),_vm._v(\"。类比一下，空间复杂度全称就是渐进空间复杂度，表示\"),_c('strong',[_vm._v(\"算法的存储空间与数据规模之间的增长关系\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"void\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"print\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" a \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" new \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    a\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\">=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"--\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    print out a\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"可以看到, 第 2 行代码中，我们申请了一个空间存储变量 i，它是常量阶的，跟数据规模 n 没有关系，所以我们可以忽略。 第 3 行申请了一个大小为 n 的 int 类型数组，除此之外，剩下的代码都没有占用更多的空间，所以整段代码的空间复杂度就是 \"),_c('code',[_vm._v(\"O(n)\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"时间复杂度进阶知识\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#时间复杂度进阶知识\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 时间复杂度进阶知识\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"最好、最坏情况时间复杂度\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#最好、最坏情况时间复杂度\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 最好、最坏情况时间复杂度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-C extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// n 表示数组 array 的长度\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"find\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" array\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" x\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" pos \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"array\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"==\")]),_vm._v(\" x\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n       pos \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n       \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" pos\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"最好情况时间复杂度就是，在最理想的情况下，，执行这段代码的时间复杂度。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"最坏情况时间复杂度就是，在最糟糕的情况下，执行这段代码的时间复杂度。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"平均情况时间复杂度\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#平均情况时间复杂度\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 平均情况时间复杂度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"要查找的变量 x 在数组中的位置，有 n+1 种情况：\"),_c('strong',[_vm._v(\"在数组的 0～n-1 位置中和不在数组中\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/8ILNkFg.png\",\"alt\":\"Screen Shot 2018-10-01 at 1.12.28 PM\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"咱们把刚刚这个公式简化之后，得到的平均时间复杂度就是 \"),_c('code',[_vm._v(\"O(n)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"前面的推导过程中存在的最大问题就是，没有将各种情况发生的\"),_c('strong',[_vm._v(\"概率\")]),_vm._v(\"考虑进去。如果我们把每种情况发生的概率也考虑进去，那平均时间复杂度的计算过程就变成了这样：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/FuO0HMx.png\",\"alt\":\"Screen Shot 2018-10-01 at 1.16.45 PM\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这个值就是概率论中的\"),_c('strong',[_vm._v(\"加权平均值\")]),_vm._v(\"，也叫作\"),_c('strong',[_vm._v(\"期望值\")]),_vm._v(\"，所以平均时间复杂度的全称应该叫\"),_c('strong',[_vm._v(\"加权平均时间复杂度\")]),_vm._v(\"或者\"),_c('strong',[_vm._v(\"期望时间复杂度\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"均摊时间复杂度\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#均摊时间复杂度\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 均摊时间复杂度\")])}]\n\nexport { render, staticRenderFns }"]}