{"remainingRequest":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Downloads/front-end-notebook/docs/nodejs/Express/中间件.md?vue&type=template&id=43da0836","dependencies":[{"path":"/Users/xiangliu/Downloads/front-end-notebook/docs/nodejs/Express/中间件.md","mtime":1531076104164},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1530932815982},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1530932815981},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1530932816121}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"概念\\\"><a href=\\\"#概念\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 概念</h2><p>从概念上讲，中间件是一种功能的封装方式。具体来说就是封装在程序中处理 HTTP 请求的功能。</p><p>在使用上讲，中间件只是一个有 3 个参数的函数: 一个 请求对象、一个 响应对象 和一个 next 函数。\\n(还有一种 4 个参数的形式，用来做错误处理）</p><p>可以把中间件想象成 水管。水从一端入，在到达出水口的过程中，会经历各种 仪表 和 阀门。而这个过程中最重要的就是顺序。在其中一个阀门中注入一种原料，流过这个阀门之后的水都会含有这种原料。</p><p>在 Express 程序中，通过调用 <code>app.use</code> 向管道中插入中间件。</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}