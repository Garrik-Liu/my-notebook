{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/基础篇/模块机制.md?vue&type=template&id=4f2686fc","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/基础篇/模块机制.md","mtime":1536075083601},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"模块机制\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#模块机制\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 模块机制\")]),_c('p',[_vm._v(\"在开发相对复杂的程序时, 通过使用模块机制, 我们可以把一个复杂程序的各个功能拆分, 分别封装到不同的文件. 在需要的时候引入相关的模块. 这样做可以让代码的可读性, 复用性, 和易维护性够变得更高.\")]),_c('p',[_vm._v(\"Node.js 参照 CommonJS 标准实现了模块机制.  在 Node.js 中, 每个\\b文件就被视为一个模块.  这个文件可能是 JavaScript \\b编写的文件、JSON 或者用 C/C++ 编译的二进制文件.  在上一篇结尾的 Node 代码实例中, \"),_c('code',[_vm._v(\"http\")]),_vm._v(\" 就是一个 Node 自带的核心模块, 用以实现 HTTP 协议.\")]),_c('blockquote',[_c('p',[_vm._v(\"CommonJS 规范: 因为 JavaScript 诞生之初只是为了写网页小脚本, 并不作为开发大型复杂应用的语言, 其自身有很多不足.  由于官方规范 (ECMAScript) 制定的时间较早, 涵盖范围较小, 对于后端开发而言, 例如文件系统, I/O 流, 模块系统, 等等方面都没有相应的标准.  CommonJS 规范让 JavaScript 弥补了没有标准的缺陷, 让 JavaScript 有能力去开发复杂应用, 同时具备了跨平台能力.\")])]),_c('h2',{attrs:{\"id\":\"创建-导出模块\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#创建-导出模块\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 创建 & 导出模块\")]),_c('p',[_vm._v(\"在了解了什么是模块之后, 让我们来看看如何创建并导出模块.\")]),_c('p',[_vm._v(\"在 Node.js 中, 一个文件就是一个模块.\")]),_c('h2',{attrs:{\"id\":\"引入模块\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#引入模块\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 引入模块\")]),_c('h3',{attrs:{\"id\":\"路径解析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#路径解析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 路径解析\")]),_c('h2',{attrs:{\"id\":\"包-包管理器\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#包-包管理器\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 包 & 包管理器\")])])}]\n\nexport { render, staticRenderFns }"]}