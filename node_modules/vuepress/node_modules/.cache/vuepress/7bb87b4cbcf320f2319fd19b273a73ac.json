{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md?vue&type=template&id=243bcd7c","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md","mtime":1539544947454},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"使用-mongodb-数据库\"><a class=\"header-anchor\" href=\"#使用-mongodb-数据库\" aria-hidden=\"true\">#</a> 使用\b MongoDB 数据库</h1>\n<p>在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.</p>\n<h2 id=\"什么是-mongodb\"><a class=\"header-anchor\" href=\"#什么是-mongodb\" aria-hidden=\"true\">#</a> 什么是 MongoDB</h2>\n<p>『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.</p>\n<p>MongoDB 将数据存储为一个文档，数据结构由键值对 <code>key:value</code> 组成.  MongoDB 文档类似于 JSON 对象.  字段值可以包含其他文档，数组及文档数组.</p>\n<p>下面就是一个 MongoDB 集合 (collection) 示例:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Garrik\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span>\n    gender<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Male\"</span><span class=\"token punctuation\">,</span>\n    job<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Frontend Developer\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"关系型数据库-非关系型数据库\"><a class=\"header-anchor\" href=\"#关系型数据库-非关系型数据库\" aria-hidden=\"true\">#</a> 关系型数据库 &amp; 非关系型数据库</h3>\n<p>前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?</p>\n<p>『 <strong>关系型数据库</strong> 』以 &quot;行&quot; 和 &quot;列&quot; 组成的 &quot;二维表格&quot; 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 &quot;元组&quot;（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.</p>\n<p>『 <strong>非关系数据库</strong> 』以 &quot;键值对&quot; 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等</p>\n<h2 id=\"mongodb-基础概念\"><a class=\"header-anchor\" href=\"#mongodb-基础概念\" aria-hidden=\"true\">#</a> MongoDB 基础概念</h2>\n<p>在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.</p>\n<p>『 数据库 』(database)</p>\n<h2 id=\"mongodb-基本操作\"><a class=\"header-anchor\" href=\"#mongodb-基本操作\" aria-hidden=\"true\">#</a> MongoDB 基本操作</h2>\n<h2 id=\"在-node-js-中使用-mongodb\"><a class=\"header-anchor\" href=\"#在-node-js-中使用-mongodb\" aria-hidden=\"true\">#</a> 在 Node.js 中使用 MongoDB</h2>\n</div>\n",null]}