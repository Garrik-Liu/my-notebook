{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/前端开发/javascript/设计模式/架构型/mvc模式.md?vue&type=template&id=d2188312","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/前端开发/javascript/设计模式/架构型/mvc模式.md","mtime":1542157249275},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"mvc-模式\"><a class=\"header-anchor\" href=\"#mvc-模式\" aria-hidden=\"true\">#</a> MVC 模式</h1>\n<p>MVC即模型（model）－视图（view）－控制器（controller），用一种将业务逻辑、数据、视图分离的方式组织架构代码。</p>\n<p>在页面开发中我们常常将，页面分成3个层次。视图层，像你刚才说的创建视图等。数据层，像你刚才提到的处理数据；业务逻辑层，比如你刚才说的交互逻辑等。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// 为简化页面操作逻辑，这里引用链模式中实现的A框架，具体方法参考附录A</span>\n<span class=\"token comment\">// 页面加载后创建MVC对象</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 初始化MVC对象</span>\n    <span class=\"token keyword\">var</span> <span class=\"token constant\">MVC</span> <span class=\"token operator\">=</span> <span class=\"token constant\">MVC</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 初始化MVC数据模型层</span>\n    <span class=\"token constant\">MVC</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">model</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 初始化MVC视图层</span>\n    <span class=\"token constant\">MVC</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">view</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 初始化MVC控制器层</span>\n    <span class=\"token constant\">MVC</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ctrl</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>通过单体模式创建MVC对象，由于MVC对象要分3个层次，因此我们创建3个层次对象属性，分别是模型对象model、视图对象view、控制器对象ctrl。剩下的事情就是要依次实现3个层次对象。”</p>\n</div>\n",null]}