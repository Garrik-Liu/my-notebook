{"remainingRequest":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Downloads/front-end-notebook/docs/others/http/http首部.md?vue&type=template&id=b88fba2e","dependencies":[{"path":"/Users/xiangliu/Downloads/front-end-notebook/docs/others/http/http首部.md","mtime":1531345807847},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1530932815982},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1530932811487},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1530932815981},{"path":"/Users/xiangliu/Downloads/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1530932816121}],"contextDependencies":[],"result":["\n<div class=\"content\"><p><router-link to=\"./\">返回目录</router-link></p>\n<h1 id=\"http-首部\"><a class=\"header-anchor\" href=\"#http-首部\" aria-hidden=\"true\">#</a> HTTP 首部</h1>\n<p>HTTP 协议的请求和响应报文中必定包含 HTTP 首部</p>\n<h2 id=\"http-报文首部\"><a class=\"header-anchor\" href=\"#http-报文首部\" aria-hidden=\"true\">#</a> HTTP 报文首部</h2>\n<p>首部内容 为 客户端和服务器 处理请求和响应 提供了所需要的信息。</p>\n<h3 id=\"http-请求报文\"><a class=\"header-anchor\" href=\"#http-请求报文\" aria-hidden=\"true\">#</a> HTTP 请求报文</h3>\n<p><img src=\"https://i.imgur.com/Ts3FoD8.png\" alt=\"Screen Shot 2018-07-11 at 12.14.08 PM\"></p>\n<blockquote>\n<p>下面的示例是访问 http://hackr.jp 时，请求报文的首部信息。</p>\n</blockquote>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>GET / HTTP/1.1\nHost: hackr.jp\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*; q=0.8\nAccept-Language: ja,en-us;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nDNT: 1\nConnection: keep-alive\nIf-Modified-Since: Fri, 31 Aug 2007 02:02:20 GMT\nIf-None-Match: &quot;45bae1-16a-46d776ac&quot;\nCache-Control: max-age=0\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"http-响应报文\"><a class=\"header-anchor\" href=\"#http-响应报文\" aria-hidden=\"true\">#</a> HTTP 响应报文</h3>\n<p><img src=\"https://i.imgur.com/5vOgyzu.png\" alt=\"Screen Shot 2018-07-11 at 12.15.32 PM\"></p>\n<blockquote>\n<p>以下示例是之前请求访问 http://hackr.jp/ 时，返回的响应报文的首部信息。</p>\n</blockquote>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>HTTP/1.1 304 Not Modified\nDate: Thu, 07 Jun 2012 07:21:36 GMT\nServer: Apache\nConnection: close\nEtag: &quot;45bae1-16a-46d776ac&quot;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"http-首部字段\"><a class=\"header-anchor\" href=\"#http-首部字段\" aria-hidden=\"true\">#</a> HTTP 首部字段</h2>\n<p>HTTP 首部字段是构成 HTTP 报文的要素之一。在客户端与服务器之间以 HTTP 协议进行通信的过程中，无论是请求还是响应都会使用首部字段，它能起到传递额外重要信息的作用。</p>\n<p>使用首部字段是为了给浏览器和服务器提供报文主体大小、所使用的语言、认证信息等内容。</p>\n<h3 id=\"http-首部字段结构\"><a class=\"header-anchor\" href=\"#http-首部字段结构\" aria-hidden=\"true\">#</a> HTTP 首部字段结构</h3>\n<p>HTTP 首部字段是由 首部字段名 和 字段值 构成的，中间用冒号“:” 分隔。</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>首部字段名: 字段值\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><blockquote>\n<p>例如，在 HTTP 首部中以 Content-Type 这个字段来表示报文主体的 对象类型。\n<code>Content-Type: text/html</code></p>\n</blockquote>\n<p>另外, 单个字段名 可以对应多个 字段值,\n例如<code>Keep-Alive: timeout=15, max=100</code></p>\n<h3 id=\"_4-种-http-首部字段类型\"><a class=\"header-anchor\" href=\"#_4-种-http-首部字段类型\" aria-hidden=\"true\">#</a> 4 种 HTTP 首部字段类型</h3>\n<ul>\n<li>\n<p><strong>通用首部字段</strong>（General Header Fields）\n请求报文和响应报文两方都会使用的首部。</p>\n</li>\n<li>\n<p><strong>请求首部字段</strong>（Request Header Fields）\n从客户端向服务器端发送请求报文时使用的首部。补充了请求的附加内容、客户端信息、响应内容相关优先级等信息。</p>\n</li>\n<li>\n<p><strong>响应首部字段</strong>（Response Header Fields）\n从服务器端向客户端返回响应报文时使用的首部。补充了响应的附加内容，也会要求客户端附加额外的内容信息。</p>\n</li>\n<li>\n<p><strong>实体首部字段</strong>（Entity Header Fields）\n针对请求报文和响应报文的实体部分使用的首部。补充了资源内容更新时间等与实体有关的信息。</p>\n</li>\n</ul>\n<h2 id=\"http-1-1-首部字段一览\"><a class=\"header-anchor\" href=\"#http-1-1-首部字段一览\" aria-hidden=\"true\">#</a> HTTP/1.1 首部字段一览</h2>\n<p>HTTP/1.1 规范定义了如下 47 种首部字段。在 HTTP 协议通信交互中使用到的首部字段，不限于 RFC2616 中定义的 47 种首部字段。还有 Cookie、Set-Cookie 和 Content-Disposition 等在其他 RFC 中定义的首部字段.</p>\n<p>这些非正式的首部字段统一归纳在 RFC4229 HTTP Header Field Registrations 中。</p>\n<h3 id=\"通用首部字段\"><a class=\"header-anchor\" href=\"#通用首部字段\" aria-hidden=\"true\">#</a> 通用首部字段</h3>\n<table>\n<thead>\n<tr>\n<th>首部字段名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cache-Control</td>\n<td>控制缓存的行为</td>\n</tr>\n<tr>\n<td>Connection</td>\n<td>逐跳首部、连接的管理</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>创建报文的日期时间</td>\n</tr>\n<tr>\n<td>Pragma</td>\n<td>报文指令</td>\n</tr>\n<tr>\n<td>Trailer</td>\n<td>报文末端的首部一览</td>\n</tr>\n<tr>\n<td>Transfer-Encoding</td>\n<td>指定报文主体的传输编码方式</td>\n</tr>\n<tr>\n<td>Upgrade</td>\n<td>升级为其他协议</td>\n</tr>\n<tr>\n<td>Via</td>\n<td>代理服务器的相关信息</td>\n</tr>\n<tr>\n<td>Warning</td>\n<td>错误通知</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"请求首部字段\"><a class=\"header-anchor\" href=\"#请求首部字段\" aria-hidden=\"true\">#</a> 请求首部字段</h3>\n<table>\n<thead>\n<tr>\n<th>首部字段名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Accept</td>\n<td>用户代理可处理的媒体类型</td>\n</tr>\n<tr>\n<td>Accept-Charset</td>\n<td>优先的字符集</td>\n</tr>\n<tr>\n<td>Accept-Encoding</td>\n<td>优先的内容编码</td>\n</tr>\n<tr>\n<td>Accept-Language</td>\n<td>优先的语言（自然语言）</td>\n</tr>\n<tr>\n<td>Authorization</td>\n<td>Web认证信息</td>\n</tr>\n<tr>\n<td>Expect</td>\n<td>期待服务器的特定行为</td>\n</tr>\n<tr>\n<td>From</td>\n<td>用户的电子邮箱地址</td>\n</tr>\n<tr>\n<td>Host</td>\n<td>请求资源所在服务器</td>\n</tr>\n<tr>\n<td>If-Match</td>\n<td>比较实体标记（ETag）</td>\n</tr>\n<tr>\n<td>If-Modified-Since</td>\n<td>比较资源的更新时间</td>\n</tr>\n<tr>\n<td>If-None-Match</td>\n<td>比较实体标记（与 If-Match 相反）</td>\n</tr>\n<tr>\n<td>If-Range</td>\n<td>资源未更新时发送实体 Byte 的范围请求</td>\n</tr>\n<tr>\n<td>If-Unmodified-Since</td>\n<td>比较资源的更新时间（与If-Modified-Since相反）</td>\n</tr>\n<tr>\n<td>Max-Forwards</td>\n<td>最大传输逐跳数</td>\n</tr>\n<tr>\n<td>Proxy-Authorization</td>\n<td>代理服务器要求客户端的认证信息</td>\n</tr>\n<tr>\n<td>Range</td>\n<td>实体的字节范围请求</td>\n</tr>\n<tr>\n<td>Referer</td>\n<td>对请求中 URI 的原始获取方</td>\n</tr>\n<tr>\n<td>TE</td>\n<td>传输编码的优先级</td>\n</tr>\n<tr>\n<td>User-Agent</td>\n<td>HTTP 客户端程序的信息</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"响应首部字段\"><a class=\"header-anchor\" href=\"#响应首部字段\" aria-hidden=\"true\">#</a> 响应首部字段</h3>\n<table>\n<thead>\n<tr>\n<th>首部字段名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Accept-Ranges</td>\n<td>是否接受字节范围请求</td>\n</tr>\n<tr>\n<td>Age</td>\n<td>推算资源创建经过时间</td>\n</tr>\n<tr>\n<td>ETag</td>\n<td>资源的匹配信息</td>\n</tr>\n<tr>\n<td>Location</td>\n<td>令客户端重定向至指定URI</td>\n</tr>\n<tr>\n<td>Proxy-Authenticate</td>\n<td>代理服务器对客户端的认证信息</td>\n</tr>\n<tr>\n<td>Retry-After</td>\n<td>对再次发起请求的时机要求</td>\n</tr>\n<tr>\n<td>Server</td>\n<td>HTTP服务器的安装信息</td>\n</tr>\n<tr>\n<td>Vary</td>\n<td>代理服务器缓存的管理信息</td>\n</tr>\n<tr>\n<td>WWW-Authenticate</td>\n<td>服务器对客户端的认证信息</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"实体首部字段\"><a class=\"header-anchor\" href=\"#实体首部字段\" aria-hidden=\"true\">#</a> 实体首部字段</h3>\n<table>\n<thead>\n<tr>\n<th>首部字段名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Allow</td>\n<td>资源可支持的HTTP方法</td>\n</tr>\n<tr>\n<td>Content-Encoding</td>\n<td>实体主体适用的编码方式</td>\n</tr>\n<tr>\n<td>Content-Language</td>\n<td>实体主体的自然语言</td>\n</tr>\n<tr>\n<td>Content-Length</td>\n<td>实体主体的大小（单位：字节）</td>\n</tr>\n<tr>\n<td>Content-Location</td>\n<td>替代对应资源的URI</td>\n</tr>\n<tr>\n<td>Content-MD5</td>\n<td>实体主体的报文摘要</td>\n</tr>\n<tr>\n<td>Content-Range</td>\n<td>实体主体的位置范围</td>\n</tr>\n<tr>\n<td>Content-Type</td>\n<td>实体主体的媒体类型</td>\n</tr>\n<tr>\n<td>Expires</td>\n<td>实体主体过期的日期时间</td>\n</tr>\n<tr>\n<td>Last-Modified</td>\n<td>资源的最后修改日期时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"通用首部字段-2\"><a class=\"header-anchor\" href=\"#通用首部字段-2\" aria-hidden=\"true\">#</a> 通用首部字段</h2>\n<p>太多了, 没必要搬过来.</p>\n<p><a href=\"http://www.ituring.com.cn/book/miniarticle/74655\" target=\"_blank\" rel=\"noopener noreferrer\">原文链接<OutboundLink/></a></p>\n<h2 id=\"请求首部字段-2\"><a class=\"header-anchor\" href=\"#请求首部字段-2\" aria-hidden=\"true\">#</a> 请求首部字段</h2>\n<p>请求首部字段是从客户端往服务器端发送请求报文中所使用的字段,\n用于补充请求的附加信息、客户端信息、对响应内容相关的优先级等内容。</p>\n<p><strong>Accept</strong></p>\n<p>Accept 首部字段可通知服务器，客户端能够处理的媒体类型及媒体类型的相对优先级。</p>\n<p>可使用 <code>type/subtype</code> 这种形式，一次指定多种媒体类型。</p>\n<p>若想要给显示的媒体类型增加优先级，则使用 <code>q=</code> 来额外表示权重值，用分号 ; 进行分隔。</p>\n<p>权重值 q 的范围是 0~1（可精确到小数点后 3 位），且 1 为最大值。不指定权重 q 值时，默认权重为 q=1.0。</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>Accept: text/plain; q=0.3, text/html\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>上面你这句话的意思就是, 如果资源有 HTML 格式的就给我, 如果没有 TEXT 文本\b格式也凑活.</p>\n<p><strong>Accept-Charset</strong></p>\n<p>Accept-Charset 首部字段可用来通知服务器, 客户端支持的字符集 及 字符集的相对优先顺序。\n可一次性指定多种字符集。与首部字段 Accept 相同的是可用权重 q 值来表示相对优先级。</p>\n<p><strong>Accept-Encoding</strong></p>\n<p>Accept-Encoding 首部字段用来告知服务器用户代理支持的内容编码 (gzip, compress, deflate, identity...) 及内容编码的优先级顺序。</p>\n<p><strong>Accept-Language</strong></p>\n<p>首部字段 Accept-Language 用来告知服务器用户代理能够处理的自然语言集（指中文或英文等），以及自然语言集的相对优先级。可一次指定多种自然语言集。</p>\n<p><strong>Authorization</strong></p>\n<p>首部字段 Authorization 是用来告知服务器，用户代理的认证信息（证书值）。</p>\n<p>通常，想要通过服务器认证的用户代理会在接收到返回的 401 状态码响应后，把首部字段 Authorization 加入请求中。</p>\n<p><strong>Expect</strong></p>\n<p>客户端使用首部字段 Expect 来告知服务器，期望出现的某种特定行为。。因服务器无法理解客户端的期望作出回应而发生错误时，会返回状态码 417 Expectation Failed。</p>\n<p>不太懂?</p>\n<p><strong>From</strong></p>\n<p>首部字段 From 用来告知服务器使用用户代理的用户的电子邮件地址。</p>\n<p><strong>Host</strong></p>\n<p>首部字段 Host 会告知服务器，请求的资源所处的互联网主机名和端口号。</p>\n<p>Host 首部字段在 HTTP/1.1 规范内是唯一一个<strong>必须被包含在请求内的首部字段</strong>。</p>\n<p>因为可能出现单个服务器,同时\b部署多个域名. 每个域名都公用同一个 IP , 所以必须指明资源所在的具体位置.</p>\n<p><strong>If-Match</strong></p>\n<p>形如 If-xxx 这种样式的请求首部字段，都可称为条件请求。\n服务器接收到附带条件的请求后，只有判断指定条件为真时，才会执行请求。</p>\n<p>首部字段 If-Match，属附带条件之一，它会告知服务器匹配资源所用的实体标记（ETag）值。</p>\n<p>服务器会比对 If-Match 的字段值和资源的 ETag 值，仅当两者一致时，才会执行请求。反之，则返回状态码 412 Precondition Failed 的响应。</p>\n<p><strong>If-Modified-Since</strong></p>\n<p>首部字段 If-Modified-Since，属附带条件之一，它会告知服务器若 If-Modified-Since 字段值早于资源的更新时间，则希望能处理该请求。\n而在指定 If-Modified-Since 字段值的日期时间之后，如果请求的资源都没有过更新，则返回状态码 304 Not Modified 的响应。</p>\n<p>If-Modified-Since 用于确认代理或客户端拥有的本地资源的有效性。</p>\n<p>获取资源的更新日期时间，可通过确认首部字段 Last-Modified 来确定。</p>\n<p><strong>If-None-Match</strong></p>\n<p>首部字段 If-None-Match 属于附带条件之一。它和首部字段 If-Match 作用相反。</p>\n<p>在 GET 或 HEAD 方法中使用首部字段 If-None-Match 可获取最新的资源。因此，这与使用首部字段 If-Modified-Since 时有些类似。</p>\n<p><strong>If-Range</strong></p>\n<p>首部字段 If-Range 属于附带条件之一。它告知服务器若指定的 If-Range 字段值（ETag 值或者时间）和请求资源的 ETag 值或时间相一致时，则作为范围请求处理。反之，则返回全体资源。</p>\n<p><img src=\"https://i.imgur.com/ACpmJjy.png\" alt=\"Screen Shot 2018-07-11 at 5.13.56 PM\"></p>\n<p><strong>If-Unmodified-Since</strong></p>\n<p>首部字段 If-Unmodified-Since 和首部字段 If-Modified-Since 的作用相反。它的作用的是告知服务器，指定的请求资源只有在字段值内指定的日期时间之后，未发生更新的情况下，才能处理请求。</p>\n<p>如果在指定日期时间后发生了更新，则以状态码 412 Precondition Failed 作为响应返回。</p>\n<p><strong>Max-Forwards</strong></p>\n<p>通过 TRACE 方法或 OPTIONS 方法，发送包含首部字段 Max-Forwards 的请求时，该字段以十进制整数形式指定可经过的服务器最大数目。</p>\n<p>服务器在往下一个服务器转发请求之前，会将 Max-Forwards 的值减 1 后重新赋值。</p>\n<p>当服务器接收到 Max-Forwards 值为 0 的请求时，则不再进行转发，而是直接返回响应。</p>\n<p><strong>Proxy-Authorization</strong></p>\n<p>接收到从代理服务器发来的认证质询时，客户端会发送包含首部字段 Proxy-Authorization 的请求，以告知服务器认证所需要的信息。</p>\n<p>这个行为是与客户端和服务器之间的 HTTP 访问认证相类似的，不同之处在于，认证行为发生在客户端与代理之间。</p>\n<p><strong>Range</strong></p>\n<p>对于只需获取部分资源的范围请求，包含首部字段 Range 即可告知服务器资源的指定范围。</p>\n<p>接收到附带 Range 首部字段请求的服务器，会在处理请求之后返回状态码为 206 Partial Content 的响应。\n无法处理该范围请求时，则会返回状态码 200 OK 的响应及全部资源。</p>\n<p><strong>Referer</strong></p>\n<p>首部字段 Referer 会告知服务器请求的原始资源的 URI。</p>\n<p>客户端一般都会发送 Referer 首部字段给服务器。但当直接在浏览器的地址栏输入 URI，或出于安全性的考虑时，也可以不发送该首部字段。</p>\n<p>因为原始资源的 URI 中的查询字符串可能含有 ID 和密码等保密信息，要是写进 Referer 转发给其他服务器，则有可能导致保密信息的泄露。</p>\n<p><strong>TE</strong></p>\n<p>首部字段 TE 会告知服务器客户端能够处理响应的传输编码方式及相对优先级。它和首部字段 Accept-Encoding 的功能很相像，但是用于传输编码。</p>\n<p><strong>User-Agent</strong></p>\n<p>首部字段 User-Agent 会将创建请求的浏览器 和 用户代理名称等信息传达给服务器。</p>\n<h2 id=\"响应首部字段-2\"><a class=\"header-anchor\" href=\"#响应首部字段-2\" aria-hidden=\"true\">#</a> 响应首部字段</h2>\n<p>响应首部字段是由服务器端向客户端返回响应报文中所使用的字段，\n用于补充响应的附加信息、服务器信息，以及对客户端的附加要求等信息。</p>\n<p><strong>Accept-Ranges</strong></p>\n<p>首部字段 Accept-Ranges 是用来告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。</p>\n<p>可指定的字段值有两种，可处理范围请求时指定其为 <code>bytes</code>，反之则指定其为 <code>none</code>。</p>\n<p><strong>Age</strong></p>\n<p>首部字段 Age 能告知客户端，源服务器在多久前创建了响应。字段值的单位为秒。</p>\n<p>若创建该响应的服务器是缓存服务器，Age 值是指缓存后的响应再次发起认证到认证完成的时间值。</p>\n<p><strong>ETag</strong></p>\n<p>首部字段 ETag 能告知客户端实体标识。它是一种可将资源以字符串形式做唯一性标识的方式。</p>\n<p>服务器会为每份资源分配对应的 ETag 值。</p>\n<p>当资源更新时，ETag 值也需要更新。生成 ETag 值时，并没有统一的算法规则，而仅仅是由服务器来分配。</p>\n<p><strong>强 ETag 值和弱 Tag 值</strong></p>\n<p>强 ETag 值，不论实体发生多么细微的变化都会改变其值。</p>\n<p>弱 ETag 值只用于提示资源是否相同。只有资源发生了根本改变，产生差异时才会改变 ETag 值。这时，会在字段值最开始处附加 W/。</p>\n<p><strong>Location</strong></p>\n<p>使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置不同的资源。</p>\n<p>基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的 URI。</p>\n<p>几乎所有的浏览器在接收到包含首部字段 Location 的响应后，都会强制性地尝试对已提示的重定向资源的访问。</p>\n<p><strong>Proxy-Authenticate</strong></p>\n<p>首部字段 Proxy-Authenticate 会把由代理服务器所要求的认证信息发送给客户端。</p>\n<p><strong>Retry-After</strong></p>\n<p>首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。</p>\n<p>主要配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使用。</p>\n<p><strong>Server</strong></p>\n<p>首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。</p>\n<p><strong>WWW-Authenticate</strong></p>\n<p>首部字段 WWW-Authenticate 用于 HTTP 访问认证。</p>\n<p>它会告知客户端适用于访问请求 URI 所指定资源的认证方案（Basic 或是 Digest）和带参数提示的质询（challenge）。</p>\n<p>状态码 401 Unauthorized 响应中，肯定带有首部字段 WWW-Authenticate。</p>\n<h2 id=\"实体首部字段-2\"><a class=\"header-anchor\" href=\"#实体首部字段-2\" aria-hidden=\"true\">#</a> 实体首部字段</h2>\n<p>懒得写了\n<a href=\"http://www.ituring.com.cn/book/miniarticle/74658\" target=\"_blank\" rel=\"noopener noreferrer\">原文链接<OutboundLink/></a></p>\n<h2 id=\"为-cookie-服务的首部字段\"><a class=\"header-anchor\" href=\"#为-cookie-服务的首部字段\" aria-hidden=\"true\">#</a> 为 Cookie 服务的首部字段</h2>\n<p>Cookie 的工作机制是用户识别及状态管理。\nWeb 服务器 为了管理用户的状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。\n接着当用户访问该 Web服务器 时，可通过通信方式取回之前存放的 Cookie。</p>\n<table>\n<thead>\n<tr>\n<th>首部字段名</th>\n<th>说明</th>\n<th>首部类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Set-Cookie</td>\n<td>开始状态管理所使用的Cookie信息</td>\n<td>响应首部字段</td>\n</tr>\n<tr>\n<td>Cookie</td>\n<td>服务器接收到的Cookie信息</td>\n<td>请求首部字段</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"set-cookie\"><a class=\"header-anchor\" href=\"#set-cookie\" aria-hidden=\"true\">#</a> Set-Cookie</h3>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>Set-Cookie: status=enable; expires=Tue, 05 Jul 2011 07:26:31 GMT; path=/; domain=.hackr.jp;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>当服务器准备开始管理客户端的状态时，会事先告知各种信息。</p>\n<blockquote>\n<p>Set-Cookie 字段的属性:</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NAME=VALUE</td>\n<td>赋予 Cookie 的名称和其值（必需项）</td>\n</tr>\n<tr>\n<td>expires=DATE</td>\n<td>Cookie 的有效期（若不明确指定则默认为浏览器关闭前为止）</td>\n</tr>\n<tr>\n<td>path=PATH</td>\n<td>将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）</td>\n</tr>\n<tr>\n<td>domain=域名</td>\n<td>作为 Cookie 适用对象的域名 （若不指定则默认为创建 Cookie 的服务器的域名）</td>\n</tr>\n<tr>\n<td>Secure</td>\n<td>仅在 HTTPS 安全通信时才会发送 Cookie</td>\n</tr>\n<tr>\n<td>HttpOnly</td>\n<td>加以限制，使 Cookie 不能被 JavaScript 脚本访问</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cookie\"><a class=\"header-anchor\" href=\"#cookie\" aria-hidden=\"true\">#</a> Cookie</h3>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>Cookie: status=enable\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支持时，就会在请求中包含从服务器接收到的 Cookie。</p>\n</div>\n",null]}