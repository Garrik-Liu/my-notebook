{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md?vue&type=template&id=58c5be8d","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md","mtime":1539573050635},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"使用-mongodb-数据库\\\"><a href=\\\"#使用-mongodb-数据库\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 使用\\b MongoDB 数据库</h1><p>在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.</p><h2 id=\\\"什么是-mongodb\\\"><a href=\\\"#什么是-mongodb\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 什么是 MongoDB</h2><p>『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.</p><p>MongoDB 将数据存储为一个文档，数据结构由键值对 <code>key:value</code> 组成.  MongoDB 文档类似于 JSON 对象.  字段值可以包含其他文档，数组及文档数组.</p><p>下面就是一个 MongoDB 文档 (document) 示例:</p><div class=\\\"language-json extra-class\\\"><pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">&quot;name&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;Garrik&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;age&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">21</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;gender&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;Male&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;job&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;Frontend Developer&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><h3 id=\\\"关系型数据库-非关系型数据库\\\"><a href=\\\"#关系型数据库-非关系型数据库\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 关系型数据库 &amp; 非关系型数据库</h3><p>前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?</p><p>『 <strong>关系型数据库</strong> 』以 &quot;行&quot; 和 &quot;列&quot; 组成的 &quot;二维表格&quot; 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 &quot;元组&quot;（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.</p><p>『 <strong>非关系数据库</strong> 』以 &quot;键值对&quot; 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等</p><h2 id=\\\"mongodb-基础概念\\\"><a href=\\\"#mongodb-基础概念\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> MongoDB 基础概念</h2><p>在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.</p><h3 id=\\\"文档-document\\\"><a href=\\\"#文档-document\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 文档 (document)</h3><p>『 <strong>文档</strong> 』是\\b一组 &quot;键值对&quot; 的有序集合.  是 MongoDB 的核心概念.  文档的数据结构和 JSON 基本一样, \\b格式名称为 BSON, 是一种类似于 JSON 的二进制形式的存储格式.  下面是一个文档示例\\b:</p><div class=\\\"language-json extra-class\\\"><pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">&quot;name&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;Garrik&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;age&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">21</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p><code>&quot;name&quot;</code> 和 <code>&quot;age&quot;</code> 是这个文档的 &quot;键&quot; (key), <code>&quot;Garrik&quot;</code> 和 <code>21</code> 是 &quot;值&quot; (value)</p><p>文档中的值可以是多种不同的数据类型. 在一个集合中各个文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型.</p><p>MongoDB 区分类型和大小写. 例如，下面的两个文档是不同的：</p><div class=\\\"language-json extra-class\\\"><pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">&quot;foo&quot;</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">&quot;Foo&quot;</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;3&quot;</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>在给文档的\\b &quot;键&quot; 命名时还需要注意:</p><ul><li>文档的键是字符串</li><li>键不能含有 <code>\\\\0</code> (空字符)。这个字符用来表示键的结尾</li><li><code>.</code> 和 <code>$</code> 有特别的意义，只有在特定环境下才能使用</li><li>以下划线 <code>_</code>开头的键是保留的 (不是严格要求的)</li><li>一个文档内不能有重复的键</li></ul><h3 id=\\\"集合-collection\\\"><a href=\\\"#集合-collection\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 集合 (collection)</h3><p>『 <strong>集合</strong> 』就是一组文档，如果将 MongoDB 中的一个文档比喻为关系型数据库中的一行，那么一个集合就相当于一张表.  集合存在于数据库中，当第一个文档插入时，集合就会被创建.  集合没有固定的结构，一个集合里面的文档可以是各式各样的，这被称为 『 动态模式 』</p><p>\\b下面是一个集合示例:</p><div class=\\\"language-json extra-class\\\"><pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">&quot;site&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;www.baidu.com&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;name&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;百度&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">&quot;site&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;www.google.com&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;name&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;Google&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;query&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">&quot;search&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;前端开发&quot;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">&quot;site&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;www.zhihu.com&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;name&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;知乎&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">&quot;username&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">&quot;罐装汽水_Garrik&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>虽然 MongoDB 对集合中的文档类型没有要求, 但通常情况下我们插入集合的数据都会有一定的关联性.  这样会降低查询\\b特定文档的复杂度, 并且提升查询速度.</p><p>集合命名时需要注意:</p><ul><li>集合名不能是空字符串。</li><li>集合名不能含有 <code>\\\\0</code>（空字符)，这个字符表示集合名的结尾。</li><li>集合名不能以 <code>system.</code> 开头，这是为系统集合保留的前缀。</li><li>用户创建的集合名字不能含有保留字符 <code>$</code>。</li></ul><h3 id=\\\"数据库-database\\\"><a href=\\\"#数据库-database\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 数据库 (database)</h3><p>『 <strong>数据库</strong> 』由多个集合组成.  在 MongoDB 中可以建立多个数据库。每个数据库都有独立的权限，即便是在磁盘上，不同的数据库也放置在不同的文件中。按照经验，我们将有关一个应用程序的所有数据都存储在同一个数据库中。要想在同一个 MongoDB 服务器上存放多个应用程序或者用户的数据，就需要使用不同的数据库。</p><p>MongoDB 的默认数据库为 <code>&quot;db&quot;</code>，该数据库存储在 <code>data</code> 目录中。</p><p>数据库名可以是满足以下条件的任意 UTF-8 字符串:</p><ul><li>不是空字符串</li><li>不得含有 <code>空格</code>、<code>.</code>、<code>$</code>、<code>/</code>、<code>\\\\</code> 和 <code>\\\\0</code> (空字符)</li><li>数据库名区分大小写, 推荐全部小写</li><li>最多 64 字节</li></ul><p>数据库最终会变成文件系统里的文件，而数据库名就是相应的文件名</p><p>\\b文档, 表单, 数据库之间的关系如下图:</p><p><img src=\\\"https://i.imgur.com/LhMQBtL.png\\\" alt=\\\"Screen Shot 2018-10-14 at 5.48.11 PM\\\"></p><h2 id=\\\"安装-mongodb-可视化工具\\\"><a href=\\\"#安装-mongodb-可视化工具\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 安装 MongoDB &amp; 可视化工具</h2><p>这篇文章我不想过多讲安装步骤, 大家可以自行去查阅方法.</p>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"http://www.runoob.com/mongodb/mongodb-window-install.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Windows 平台安装 MongoDB - 菜鸟教程\"),_c('OutboundLink')],2),_vm._ssrNode(\"<a href=\\\"http://www.runoob.com/mongodb/mongodb-osx-install.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Mac 平台安装 MongoDB - 菜鸟教程\"),_c('OutboundLink')],2)]),_vm._ssrNode(\"<p>为了更方便的管理 MongoDB 数据库, 我推荐使用 Studio 3T 可视化工具.</p>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://studio3t.com/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Studio 3T - 官网\"),_c('OutboundLink')],2)]),_vm._ssrNode(\"<p>使用方法可参照下面链接内容:</p>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"<a href=\\\"https://blog.csdn.net/weixin_39999535/article/details/81383196\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"Studio 3T 使用方法\"),_c('OutboundLink')],2)]),_vm._ssrNode(\"<h2 id=\\\"在-node-js-中使用-mongodb\\\"><a href=\\\"#在-node-js-中使用-mongodb\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 在 Node.js 中使用 MongoDB</h2>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"想要在 Node.js 中使用\\b MongoDB, 要先安装 \"),_vm._ssrNode(\"<a href=\\\"https://www.npmjs.com/package/mongodb\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"mongodb 模块\"),_c('OutboundLink')],2),_vm._ssrNode(\", 具体步骤不赘述.\")],2),_vm._ssrNode(\"<h3 id=\\\"创建数据库\\\"><a href=\\\"#创建数据库\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 创建数据库</h3><p>要在 MongoDB 中创建一个数据库，首先我们需要创建一个 MongoClient 对象，然后配置好指定的 URL 和 端口号。 如果数据库不存在，MongoDB 将创建数据库并建立连接。</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 引入模块</span>\\n<span class=\\\"token keyword\\\">var</span> MongoClient <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mongodb'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>MongoClient<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// </span>\\n<span class=\\\"token keyword\\\">var</span> url <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">&quot;mongodb://localhost:27017/runoob&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n \\nMongoClient<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>url<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> db<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n  \\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;数据库已创建!&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  \\n  db<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n</code></pre></div>\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}