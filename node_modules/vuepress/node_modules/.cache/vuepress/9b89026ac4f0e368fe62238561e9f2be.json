{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/基础篇/\b搭建HTTP\b服务器.md?vue&type=template&id=86e4df6a","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/基础篇/\b搭建HTTP\b服务器.md","mtime":1537969877466},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"搭建-http-服务器\\\"><a href=\\\"#搭建-http-服务器\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 搭建 HTTP 服务器</h1><p>\\b\\b📝 什么是 HTTP ( HTTP 基础概念 )</p><p>当我们想要访问页面时, 浏览器根据\\b地址栏中的指定 URL, 向服务器端获取指定的文件资源, 服务器返回内容给浏览器, 然后浏览器显示出 Web 页面.  Web 浏览器在这里可称为客户端.</p><p>那么客户端与服务器之间是怎么通信的\\b呢?</p><p>HTTP 指的是超文本传输协议 ( HyperText Transfer Protocol ) 是互联网上应用最为广泛的一种网络协议.  简单来说, HTTP 协议 用于规定 服务器 和 客户端 之间通信的规则.</p><p>📝 什么是 HTTP 服务器 ( 服务器基础概念 )</p><p>📝 写一个 &quot;HELLO WORLD&quot; 服务器</p><ul><li>介绍 <code>http.createServer</code> 这个\\b方法</li><li>绑定端口接听 (服务器端口的概念)</li></ul><p>📝 \\b读取请求头 &amp; 设置响应头</p><p>📝 设置响应状态码</p><p>📝 RESTful</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}