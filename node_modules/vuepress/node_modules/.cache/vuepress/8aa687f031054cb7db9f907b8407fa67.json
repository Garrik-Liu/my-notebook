{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/javascript/基础知识/基本概念.md?vue&type=template&id=098ecc26","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/javascript/基础知识/基本概念.md","mtime":1533271966884},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._m(1),_vm._m(2),_c('p',[_vm._v(\"ECMAScript中的一切（变量、函数名和操作符）都区分大小写。\")]),_vm._m(3),_c('p',[_vm._v(\"标识符，就是指变量、函数、属性的名字，或者函数的参数。\")]),_c('p',[_vm._v(\"命名规则:\")]),_vm._m(4),_vm._m(5),_c('p',[_vm._v(\"单行注释以两个斜杠开头\")]),_vm._m(6),_vm._m(7),_vm._m(8),_vm._m(9),_c('p',[_vm._v(\"严格模式是为JavaScript定义了一种不同的解析与执行模型。在严格模式下，一些不确定的行为将得到处理，而且对某些不安全的操作也会抛出错误。\")]),_c('p',[_vm._v(\"要在作用域中启用严格模式，可以在顶部添加如下代码：\")]),_vm._m(10),_c('p',[_vm._v(\"这条不是字符串, 它是一个编译指示（pragma），用于告诉支持它的 JavaScript 引擎切换到严格模式。\")]),_vm._m(11),_c('p',[_vm._v(\"语句以一个分号 \\\";\\\" 结尾；如果省略分号，则由解析器确定语句的结尾.\")]),_c('p',[_vm._v(\"虽然可以省略分号, 但是有分号可以避免错误, 压缩语句之间多余的空格. 解析器也不用去判断哪里是语句的结尾了, 可以增加性能\")]),_c('p',[_vm._v(\"多条语句可以组合到一个代码块中, 代码块以左花括号（{）开头，以右花括号（}）结尾：\")]),_vm._m(12),_c('p',[_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Lexical_grammar#%E5%85%B3%E9%94%AE%E5%AD%97\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"关键字和保留字列表\"),_c('OutboundLink')],1)]),_c('p',[_vm._v(\"关键字 是可用于表示控制语句的开始或结束，或者用于执行特定操作等,\\n保留字 是将来可能成为关键字的,\")]),_c('p',[_vm._v(\"它们都不可以用作标识符.\")]),_vm._m(13),_c('p',[_vm._v(\"ECMAScript的变量是松散类型的，松散类型可以用来保存任何类型的数据。\")]),_c('p',[_vm._v(\"换句话说，每个变量仅仅是一个用于保存值的占位符而已。\")]),_c('p',[_vm._v(\"变量在离开作用域后就会被销毁\")]),_vm._m(14),_vm._m(15),_vm._m(16),_vm._m(17),_vm._m(18),_vm._m(19),_c('p',[_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"typeof 文档\"),_c('OutboundLink')],1)]),_vm._m(20),_c('p',[_vm._v(\"对一个值使用 typeof 可以返回一个字符串表示其数据类型, 具体信息请查阅文档\")]),_vm._m(21),_vm._m(22),_vm._m(23),_c('p',[_vm._v(\"这个值最初引入的原因是为了正式区分空对象指针与未经初始化的变量。\")]),_vm._m(24),_vm._m(25),_vm._m(26),_vm._m(27),_vm._m(28),_vm._m(29),_vm._m(30),_c('p',[_vm._v(\"使用 IEEE754 格式来表示整数和浮点数值, 支持 十进制, 八进制, 十六进制数值字面量格式\")]),_vm._m(31),_c('p',[_vm._v(\"在进行算术计算时，所有值都会被转换成十进制数值。\")]),_vm._m(32),_c('p',[_vm._v(\"浮点数值，就是该数值中必须包含一个小数点，并且小数点后面必须至少有一位数字。\")]),_c('p',[_vm._v(\"保存浮点数值需要的内存空间是保存整数值的两倍.\")]),_c('p',[_vm._v(\"浮点数值的最高精度是17位小数, 进行算术计算时其精确度远远不如整数.\")]),_c('p',[_vm._v(\"0.1 加 0.2 的结果不是 0.3，而是 0.30000000000000004。这个小小的舍入误差会导致无法测试特定的浮点数值。\")]),_vm._m(33),_vm._m(34),_vm._m(35),_vm._m(36),_vm._m(37),_vm._m(38),_vm._m(39),_vm._m(40),_vm._m(41),_vm._m(42),_vm._m(43),_vm._m(44),_vm._m(45),_vm._m(46),_vm._m(47),_c('p',[_vm._v(\"如果字符串以 \\\"0x\\\" 开头且后跟数字字符，就会将其当作一个 十六进制整数；如果字符串以 \\\"0\\\" 开头且后跟数字字符，则还是十进制。\")]),_vm._m(48),_vm._m(49),_vm._m(50),_c('p',[_vm._v(\"也就是说，字符串中的 第一个小数点 是有效的，而 第二个小数点 就是无效的了。\")]),_vm._m(51),_vm._m(52),_vm._m(53),_vm._m(54),_vm._m(55),_c('p',[_vm._v(\"String 数据类型包含一些特殊的字符字面量，也叫转义序列，用于表示非打印字符，或者具有其他特殊字符。使用反斜杠 (\\\"\\\") 来向文本字符串添加\")]),_vm._m(56),_vm._m(57),_c('p',[_vm._v(\"ECMAScript 中的字符串是不可变的，也就是说，字符串一旦创建，它们的值就不能改变。要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含新值的字符串填充该变量\")]),_vm._m(58),_c('p',[_vm._v(\"上例中, 首先创建一个能容纳10个字符的新字符串，然后在这个字符串中填充\\\"Java\\\"和\\\"Script\\\"，最后一步是销毁原来的字符串\\\"Java\\\"和字符串\\\"Script\\\"\")]),_vm._m(59),_c('p',[_vm._v(\"把一个值转换为一个字符串有两种方式。\")]),_vm._m(60),_vm._m(61),_vm._m(62),_vm._m(63),_vm._m(64),_vm._m(65),_vm._m(66),_vm._m(67),_c('p',[_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"文档\"),_c('OutboundLink')],1)]),_vm._m(68),_c('p',[_vm._v(\"在ECMAScript中，如果不给构造函数传递参数，则可以省略后面的那一对圆括号, 但不推荐\")]),_vm._m(69),_vm._m(70),_vm._m(71),_vm._m(72),_c('p',[_vm._v(\"只能操作一个值的操作符叫做一元操作符\")]),_vm._m(73),_vm._m(74),_vm._m(75),_vm._m(76),_vm._m(77),_vm._m(78),_c('p',[_vm._v(\"递增和递减操作符遵循下列规则：\")]),_vm._m(79),_vm._m(80),_vm._m(81),_vm._m(82),_vm._m(83),_c('p',[_vm._v(\"位操作符用于在最基本的层次上，即按内存中表示数值的位来操作数值。\")]),_vm._m(84),_vm._m(85),_vm._m(86),_vm._m(87),_vm._m(88),_c('p',[_vm._v(\"计算一个数值的二进制补码，需要经过下列3个步骤：\")]),_vm._m(89),_vm._m(90),_vm._m(91),_vm._m(92),_vm._m(93),_vm._m(94),_vm._m(95),_vm._m(96),_vm._m(97),_vm._m(98),_vm._m(99),_c('p',[_vm._v(\"用于测试两个值的关系\")]),_vm._m(100),_vm._m(101),_c('p',[_vm._v(\"在有一个操作数不是布尔值的情况下，逻辑与操作就不一定返回布尔值；此时，它遵循下列规则：\")]),_vm._m(102),_vm._m(103),_vm._m(104),_vm._m(105),_c('p',[_vm._v(\"辑或操作符也是短路操作符。也就是说，如果第一个操作数的求值结果为true，就不会对第二个操作数求值了。\")]),_vm._m(106),_c('p',[_vm._v(\"3个乘性操作符：乘法、除法 和 求模。\")]),_vm._m(107),_vm._m(108),_c('p',[_vm._v(\"在处理特殊值的情况下，乘法操作符遵循下列特殊的规则：\")]),_vm._m(109),_vm._m(110),_vm._m(111),_vm._m(112),_vm._m(113),_vm._m(114),_vm._m(115),_vm._m(116),_c('p',[_vm._v(\"如果有一个操作数是字符串，那么就要应用如下规则：\")]),_vm._m(117),_vm._m(118),_vm._m(119),_c('p',[_vm._v(\"如果两个操作符都是数值，则执行常规的算术减法操作并返回结果；\")]),_vm._m(120),_vm._m(121),_vm._m(122),_vm._m(123),_c('p',[_vm._v(\"当关系操作符的操作数使用了非数值时，也要进行数据转换或完成某些奇怪的操作:\")]),_vm._m(124),_c('p',[_vm._v(\"在比较字符串值时，并不按照\\b字母表中的位置。\\n在比较字符串时，实际比较的是两个字符串中对应位置的每个字符的字符编码值。\")]),_c('p',[_vm._v(\"另一种奇怪的现象发生在比较两个数字字符串的情况下：\")]),_vm._m(125),_c('p',[_vm._v(\"\\\"2\\\"的字符编码是50，而\\\"3\\\"的字符编码是51\")]),_vm._m(126),_c('p',[_vm._v(\"由于字母\\\"a\\\"不能转换成合理的数值，因此就被转换成了NaN。\")]),_vm._m(127),_vm._m(128),_vm._m(129),_c('p',[_vm._v(\"相等和不相等操作符遵循下列基本规则：\")]),_vm._m(130),_c('p',[_vm._v(\"这两个操作符在进行比较时则要遵循下列规则:\")]),_vm._m(131),_vm._m(132),_vm._m(133),_c('p',[_vm._v(\"其作用就是把右侧的值赋给左侧的变量\")]),_vm._m(134),_c('p',[_vm._v(\"设计这些操作符的主要目的就是简化赋值操作。使用它们不会带来任何性能的提升。\")]),_vm._m(135),_c('p',[_vm._v(\"使用逗号操作符可以在一条语句中执行多个操作\")]),_vm._m(136),_c('p',[_vm._v(\"在用于赋值时，逗号操作符总会返回表达式中的最后一项，如下面的例子所示：\")]),_vm._m(137),_vm._m(138),_vm._m(139),_vm._m(140),_vm._m(141),_vm._m(142),_vm._m(143),_vm._m(144),_c('p',[_vm._v(\"一种后测试循环语句。\")]),_c('p',[_vm._v(\"在对条件表达式求值之前，循环体内的代码至少会被执行一次。\")]),_vm._m(145),_c('p',[_vm._v(\"前测试循环语句\")]),_vm._m(146),_c('p',[_vm._v(\"满足条件表达式，才会执行循环体。\")]),_vm._m(147),_vm._m(148),_c('p',[_vm._v(\"前测试循环语句\")]),_vm._m(149),_c('p',[_vm._v(\"只给出控制表达式实际上就把for循环转换成了while循环\")]),_vm._m(150),_vm._m(151),_vm._m(152),_vm._m(153),_c('p',[_vm._v(\"JS对象的属性没有顺序。因此，通过for-in循环输出的属性名的顺序是不可预测的。\")]),_vm._m(154),_vm._m(155),_vm._m(156),_vm._m(157),_c('p',[_vm._v(\"实例：\")]),_vm._m(158),_vm._m(159),_vm._m(160),_vm._m(161),_vm._m(162),_vm._m(163),_vm._m(164),_vm._m(165),_vm._m(166),_vm._m(167),_vm._m(168),_vm._m(169),_vm._m(170),_vm._m(171),_vm._m(172),_vm._m(173),_vm._m(174),_c('p',[_vm._v(\"使用表达式作为case值还可以实现下列操作：\")]),_vm._m(175),_vm._m(176),_vm._m(177)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"基本概念\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基本概念\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 基本概念\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"基础知识\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基础知识\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 基础知识\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"区分大小写\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#区分大小写\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 区分大小写\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"标识符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#标识符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 标识符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"第一个字符必须是一个字母、下划线（_）或一个美元符号（$）；\")]),_c('li',[_vm._v(\"其他字符可以是字母、下划线、美元符号或数字。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"注释\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#注释\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 注释\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 单行注释\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"多行注释以一个斜杠和一个星号（/\"),_c('em',[_vm._v(\"）开头，以一个星号和一个斜杠（\")]),_vm._v(\"/）结尾, 中间的星号不是必须的\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"/*\\n *  这是一个多行\\n *  （块级）注释\\n */\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"严格模式\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#严格模式\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 严格模式\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 在全局\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"use strict\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 函数作用域\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"doSomething\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"use strict\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"关键字和保留字\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#关键字和保留字\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 关键字和保留字\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"变量\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#变量\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 变量\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"定义变量时要使用 \"),_c('code',[_vm._v(\"var\")]),_vm._v(\" 操作符, 后跟变量名（即一个标识符）:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" x \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"123\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"不用 \"),_c('code',[_vm._v(\"var\")]),_vm._v(\" 操作符, 即使在函数内定义变量, 也会变成全局变量\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"数据类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数据类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数据类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"ECMAScript中有 5 种简单数据类型（也称为基本数据类型）：\"),_c('code',[_vm._v(\"Undefined\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"Null\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"Number\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"String\")]),_vm._v(\"。还有 1 种引用数据类型 \"),_c('code',[_vm._v(\"Object\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"typeof-操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#typeof-操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" typeof 操作符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"typeof\")]),_vm._v(\" 用于检测数据类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"调用 \"),_c('code',[_vm._v(\"typeof null\")]),_vm._v(\" 会返回 \\\"object\\\"，因为特殊值 \"),_c('code',[_vm._v(\"null\")]),_vm._v(\" 被认为是一个空的对象引用。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"undefined-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#undefined-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Undefined 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Undefined 类型只有一个值，即特殊的 \"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"。在使用 \"),_c('code',[_vm._v(\"var\")]),_vm._v(\" 声明变量但未对其加以初始化时，这个变量的值就是 \"),_c('code',[_vm._v(\"undefined\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"null-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#null-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Null 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"null\")]),_vm._v(\" 值表示一个空对象指针, 如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为 \"),_c('code',[_vm._v(\"null\")]),_vm._v(\" 而不是其他值\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"boolean-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#boolean-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Boolean 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"该类型只有两个字面值：\"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"false\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"虽然 Boolean 类型的字面值只有两个，但 ECMAScript 中所有类型的值都有与这两个 Boolean 值等价的值。要将一个值转换为其对应的 Boolean 值，可以调用转型函数 \"),_c('code',[_vm._v(\"Boolean()\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果省略该参数，或者其值为 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"-0\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"、或者空字符串（\"),_c('code',[_vm._v(\"\\\"\\\"\")]),_vm._v(\"），则生成的 Boolean 对象的值为 false。如果传入的参数是 DOM 对象 \"),_c('code',[_vm._v(\"document.all\")]),_vm._v(\"，也会生成值为 \"),_c('code',[_vm._v(\"false\")]),_vm._v(\" 的 Boolean 对象。任何其他的值，包括值为 \\\"false\\\" 的字符串和任何对象，都会创建一个值为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 的 Boolean 对象。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"number-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#number-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Number 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"八进制字面值 的第一位必须是零（0），然后是八进制数字序列（0～7）。如果字面值中的数值超出了范围，那么前导零将被忽略，后面的数值将被当作十进制数值解析。(严格模式下无效)\\n十六进制字面值 的前两位必须是 \"),_c('code',[_vm._v(\"0x\")]),_vm._v(\"，后跟任何十六进制数字（0～9及A～F）。其中，字母A～F可以大写，也可以小写。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"浮点数值\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#浮点数值\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 浮点数值\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"数值范围\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数值范围\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数值范围\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"JS 能够表示的最小数值保存在 \"),_c('code',[_vm._v(\"Number.MIN_VALUE\")]),_vm._v(\" 中, 一般为 \"),_c('code',[_vm._v(\"5e-324\")]),_vm._v(\",\\n最大数值保存在 \"),_c('code',[_vm._v(\"Number.MAX_VALUE\")]),_vm._v(\", 一般为 \"),_c('code',[_vm._v(\"1.7976931348623157e+308\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果超过这个值了, 这个数值将被自动转换成特殊的 \"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\" 值,\\n如果这个数值是负数，则会被转换成 \"),_c('code',[_vm._v(\"-Infinity\")]),_vm._v(\"（负无穷），如果这个数值是正数，则会被转换成 \"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"（正无穷),\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"要想确定一个数值是不是有穷的, 可以使用 \"),_c('code',[_vm._v(\"isFinite()\")]),_vm._v(\" 函数。是的话返回 \"),_c('code',[_vm._v(\"true\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"nan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#nan\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" NaN\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，即非数值（Not a Number）是一个特殊的数值，这个数值用于表示一个本来要返回数值的操作数未返回数值的情况\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"任何数值除以非数值会返回 \"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\", \"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\" 与任何值都不相等，包括 \"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\" 本身\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"isNaN()\")]),_vm._v(\" 函数可以检测是否值可以被转换成数值, 任何不能被转换为数值的值都会导致这个函数返回 \"),_c('code',[_vm._v(\"true\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"数值转换\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数值转换\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数值转换\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"Number()\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"parseInt()\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"parseFloat()\")]),_vm._v(\"可以把非数值转换为数值, 转型函数 \"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\" 可以用于任何数据类型，而另两个函数则专门用于把字符串转换成数值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"Number()\")]),_vm._v(\" 函数的转换规则如下。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"值，\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"将分别被转换为 1 和 0。\")]),_c('li',[_vm._v(\"如果是数字值，只是简单的传入和返回。\")]),_c('li',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"值，返回 0。\")]),_c('li',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，返回\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"。\")]),_c('li',[_vm._v(\"如果是 字符串，遵循下列规则：\\n\"),_c('ul',[_c('li',[_vm._v(\"如果字符串中只包含 \"),_c('strong',[_vm._v(\"数字\")]),_vm._v(\"（包括前面带加号或负号的情况），则将其转换为\"),_c('strong',[_vm._v(\"十进制数值\")]),_vm._v(\"。\")]),_c('li',[_vm._v(\"如果字符串中包含有效的 \"),_c('strong',[_vm._v(\"浮点格式\")]),_vm._v(\"，如 \\\"1.1\\\"，则将其转换为\"),_c('strong',[_vm._v(\"对应的浮点数值\")]),_vm._v(\"。\")]),_c('li',[_vm._v(\"如果字符串中包含有效的 \"),_c('strong',[_vm._v(\"十六进制\")]),_vm._v(\" 格式，例如\\\"0xf\\\"，则将其转换为相同大小的 \"),_c('strong',[_vm._v(\"十进制整数值\")])]),_c('li',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"开头的数字，是按照\"),_c('strong',[_vm._v(\"十进制转换\")])]),_c('li',[_vm._v(\"如果字符串是 \"),_c('strong',[_vm._v(\"空的\")]),_vm._v(\"（不包含任何字符），则将其转换为 \"),_c('strong',[_vm._v(\"0\")])]),_c('li',[_vm._v(\"如果字符串中包含除上述\"),_c('strong',[_vm._v(\"格式之外\")]),_vm._v(\"的字符，则将其转换为 \"),_c('code',[_vm._v(\"\\bNa\\bN\")]),_vm._v(\"。\")])])]),_c('li',[_vm._v(\"如果是对象，则调用对象的\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法，然后依照前面的规则转换返回的值。如果转换的结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则调用对象的\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\"方法，然后再次依照前面的规则转换返回的字符串值。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"在处理 \"),_c('strong',[_vm._v(\"整数\")]),_vm._v(\" 的时候更常用的是\"),_c('code',[_vm._v(\"parseInt()\")]),_vm._v(\"函数。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"parseInt()\")]),_vm._v(\" 函数在转换字符串时，会忽略字符串前面的空格，直至找到第一个非空格字符。如果是数字字符\"),_c('code',[_vm._v(\"parseInt()\")]),_vm._v(\"会继续解析第二个字符，直到解析完所有后续字符或者遇到了一个非数字字符。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果第一个字符不是 数字字符 或者 正负号，\"),_c('code',[_vm._v(\"parseInt()\")]),_vm._v(\"就会返回\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"函数提供 第二个参数：转换时使用的 \"),_c('strong',[_vm._v(\"基数\")]),_vm._v(\"（即多少进制）\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"parseInt\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"0xAF\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"16\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"         \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//175\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"parseInt\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"AF\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"16\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"          \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//175\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"parseInt\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"AF\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"              \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//NaN\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"parseFloat()\")]),_vm._v(\" 也从第一个字符（位置0）开始解析每个字符。而且也是一直解析到字符串末尾，或者解析到遇见一个无效的浮点数字字符为止。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"parseFloat()\")]),_c('strong',[_vm._v(\"只解析十进制值\")]),_vm._v(\"，因此它没有用第二个参数指定基数的用法。十六进制格式的字符串则始终会被转换成0。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"string-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#string-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" String 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"String\")]),_vm._v(\" 类型用于表示由零或多个 16位Unicode字符 组成的字符序列，即字符串, 由双引号（\\\"）或单引号（'）起始或者结束. 以双引号开头的字符串也必须以双引号结尾，而以单引号开头的字符串必须以单引号结尾。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" firstName \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Nicholas\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" lastName \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'Zakas'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"字符字面量\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#字符字面量\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 字符字面量\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 下面的会报错, 因为 双引号用于字符串起始和结束\")]),_vm._v(\"\\nconsole\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"We are the so-called \\\"\")]),_vm._v(\"Vikings\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\" from the north.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 用反斜杠可以把 双引号 转义字面上的字符串\")]),_vm._v(\"\\n\\nconsole\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"We are the so-called \\\\\\\"Vikings\\\\\\\" from the north.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"字符串的特点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#字符串的特点\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 字符串的特点\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" lang \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Java\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nlang \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" lang \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Script\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"转换为字符串\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#转换为字符串\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 转换为字符串\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"第一种是使用几乎每个值都有的 \"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\" 方法. 这个方法返回相应值的字符串表现\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" age \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"11\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" ageAsString \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" age\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"toString\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"         \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 字符串\\\"11\\\"\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"数值、布尔值、对象 和 字符串值都有 \"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\" 方法。但 \"),_c('code',[_vm._v(\"null\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\" 值没有这个方法。\\n(思考: 为什么简单数据类型会有方法?)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"通过传递基数，\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\" 可以输出以二进制、八进制、十六进制，乃至其他任意有效进制格式表示的字符串值\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"第二种是使用转型函数 \"),_c('code',[_vm._v(\"String()\")]),_vm._v(\", 在不知道要转换的值是不是null或undefined的情况下, 这个函数能够将任何类型的值转换为字符串.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"String()\")]),_vm._v(\" 函数遵循下列转换规则：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"如果值有 \"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\" 方法，则调用该方法（没有参数）并返回相应的结果；\")]),_c('li',[_vm._v(\"如果值是 \"),_c('code',[_vm._v(\"null\")]),_vm._v(\"，则返回 \\\"null\\\"；\")]),_c('li',[_vm._v(\"如果值是 \"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，则返回 \\\"undefined\\\"。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"object-类型\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#object-类型\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Object 类型\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"ECMAScript 中的对象其实就是\"),_c('strong',[_vm._v(\"一组数据和功能的无序集合\")]),_vm._v(\"。对象可以通过执行 \"),_c('code',[_vm._v(\"new\")]),_vm._v(\" 操作符后跟要创建的对象类型的名称来创建。而创建Object类型的实例并为其添加属性和（或）方法，就可以创建自定义对象\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" x \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Object\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" y \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Object\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"Object\")]),_vm._v(\" 类型所具有的任何属性和方法也同样存在于继承自它的对象中。\"),_c('code',[_vm._v(\"Object\")]),_vm._v(\" 类型是所有其他对象的基础。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 操作符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"一元操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#一元操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 一元操作符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"递增和递减操作符\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"++\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"--\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"前置型：位于要操作的变量之前，变量的值都是在语句被求值以前改变的。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" age \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"29\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" anotherAge \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"--\")]),_vm._v(\"age \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"age\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"             \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 输出28\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"anotherAge\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"      \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 输出30\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"后置型：放在变量的后面，包含它们的语句，变量的值被求值之后才执行的\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"20\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num3 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" num1\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"--\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" num2\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"       \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 等于22\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num4 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" num1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" num2\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"         \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 等于21\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"递增和递减操作符操作符对\"),_c('strong',[_vm._v(\"任何值都适用\")]),_vm._v(\"：整数，字符串、布尔值、浮点数值和对象。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"在应用于一个包含\"),_c('strong',[_vm._v(\"有效数字字符的字符串\")]),_vm._v(\"时，先将其转换为数字值，再执行加减1的操作。字符串变量变成数值变量。\")])]),_c('li',[_c('p',[_vm._v(\"在应用于一个\"),_c('strong',[_vm._v(\"无效数字字符的字符串\")]),_vm._v(\"时，将变量的值设置为NaN。字符串变量变成数值变量。\")])]),_c('li',[_c('p',[_vm._v(\"在应用于\"),_c('strong',[_vm._v(\"布尔值\"),_c('code',[_vm._v(\"false\")])]),_vm._v(\" 时，先将其转换为0再执行加减1的操作。布尔值变量变成数值变量。\")])]),_c('li',[_c('p',[_vm._v(\"在应用于\"),_c('strong',[_vm._v(\"布尔值\"),_c('code',[_vm._v(\"true\")])]),_vm._v(\" 时，先将其转换为1再执行加减1的操作。布尔值变量变成数值变量。\")])]),_c('li',[_c('p',[_vm._v(\"在应用于\"),_c('strong',[_vm._v(\"浮点数值\")]),_vm._v(\"时，执行加减1的操作。\")])]),_c('li',[_c('p',[_vm._v(\"在应用于\"),_c('strong',[_vm._v(\"对象\")]),_vm._v(\"时，先调用对象的\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法以取得一个可供操作的值。然后对该值应用前述规则。如果结果是NaN，则在调用\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\"方法后再应用前述规则。对象变量变成数值变量。\")])]),_c('li',[_c('p',[_c('code',[_vm._v(\"undefined\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\" 都是 \"),_c('code',[_vm._v(\"NaN\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"一元加和减操作符\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"+\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"-\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"一元加操作符\")]),_vm._v(\" 以一个加号（+）表示，放在数值前面，对数值不会产生任何影响。在对非数值应用一元加操作符时，该操作符会像\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"转型函数一样对这个值执行转换。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"一元减操作符\")]),_vm._v(\" 主要用于表示负数，例如将1转换成-1。当应用于非数值时，一元减操作符遵循与一元加操作符相同的规则，最后再将得到的数值转换为负数。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"位操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#位操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 位操作符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"中的所有数值都以\"),_c('strong',[_vm._v(\"IEEE-754 64位格式\")]),_vm._v(\"存储，\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"但位操作符并不直接操作64位的值。而是\"),_c('strong',[_vm._v(\"先将64位的值转换成32位的整数\")]),_vm._v(\"，然后执行操作，最后再将\"),_c('strong',[_vm._v(\"结果转换回64位\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"对于有符号的整数，32位中的前31位用于表示整数的值。第32位用于表示数值的符号：0表示正数，1表示负数。（从后\\b往前数，第一位叫\"),_c('strong',[_vm._v(\"位0\")]),_vm._v(\"）\\b。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"数值18的二进制表示\"),_c('code',[_vm._v(\"00000000000000000000000000010010\")]),_vm._v(\"，或者更简洁的\"),_c('code',[_vm._v(\"10010\")]),_vm._v(\"。这是5个\"),_c('strong',[_vm._v(\"有效位\")]),_vm._v(\"，这5位本身就决定了实际的值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"负数\")]),_vm._v(\"同样以二进制码存储，但使用的格式是\"),_c('strong',[_vm._v(\"二进制补码\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_c('p',[_vm._v(\"求这个数值\"),_c('strong',[_vm._v(\"绝对值\")]),_vm._v(\"的二进制码（例如，要求-18的二进制补码，先求18的二进制码）；\")])]),_c('li',[_c('p',[_vm._v(\"求二进制反码，即将0替换为1，将1替换为0；\")])]),_c('li',[_c('p',[_vm._v(\"得到的二进制反码加1。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"在对特殊的\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"值应用位操作时，这两个值都会被当成0来处理。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果对\"),_c('strong',[_vm._v(\"非数值\")]),_vm._v(\"应用位操作符，会先使用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"函数将该值转换为一个数值（自动完成），然后再应用位操作。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"按位非（NOT）\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"~\")]),_vm._v(\"\\n执行按位非的结果就是返回数值的反码。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"按位与（AND）\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"&\")]),_vm._v(\"\\n它有两个操作符数。从本质上讲，按位与操作就是将两个数值的每一位对齐，对相同位置上的两个数执行 AND 操作。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"按位或（OR）\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"|\")]),_vm._v(\"\\n同样也有两个操作数。按位与操作就是将两个数值的每一位对齐，对相同位置上的两个数执行 OR 操作。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"按位异或（XOR）\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"^\")]),_vm._v(\"\\n两个操作数执行 XOR 操作。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"左移\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"<<\")]),_vm._v(\"\\n将数值的所有位向左移动指定的位数。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"有符号的右移\")]),_vm._v(\"：\"),_c('code',[_vm._v(\">>\")]),_vm._v(\"\\n个操作符会将数值向右移动，但保留符号位（即正负号标记）。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"无符号右移\")]),_vm._v(\"：\"),_c('code',[_vm._v(\">>>\")]),_vm._v(\" (不懂)\\n这个操作符会将数值的所有32位都向右移动。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"布尔操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#布尔操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 布尔操作符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"逻辑非\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"!\")]),_vm._v(\"\\n无论这个值是什么数据类型，这个操作符都会返回一个布尔值。逻辑非操作符首先会将它的操作数转换为一个布尔值，然后再对其求反。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"逻辑与\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"&&\")]),_vm._v(\"\\n逻辑与操作可以应用于任何类型的操作数，而不仅仅是布尔值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果第一个操作数是对象，则返回第二个操作数；\")])]),_c('li',[_c('p',[_vm._v(\"如果第二个操作数是对象，则只有在第一个操作数的求值结果为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"的情况下才会返回该对象；\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是对象，则返回第二个操作数；\")])]),_c('li',[_c('p',[_vm._v(\"如果第一个操作数是\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果第一个操作数是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果第一个操作数是\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"逻辑与操作属于\"),_c('strong',[_vm._v(\"短路操作\")]),_vm._v(\"，即\"),_c('strong',[_vm._v(\"如果第一个操作数能够决定结果，那么就不会再对第二个操作数求值\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"逻辑或\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"||\")]),_vm._v(\"\\n与逻辑与操作相似，如果有一个操作数不是布尔值，逻辑或也不一定返回布尔值；此时，它遵循下列规则：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果第一个操作数是对象，则返回第一个操作数；\")])]),_c('li',[_c('p',[_vm._v(\"如果第一个操作数的求值结果为\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"，则返回第二个操作数；\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是对象，则返回第一个操作数；\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，则返回\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"乘性操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#乘性操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 乘性操作符:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果参与乘性计算的某个操作数不是数值，后台会先使用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"转型函数将其转换为数值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"乘法\")]),_vm._v(\": \"),_c('code',[_vm._v(\"*\")]),_vm._v(\"\\n用于计算两个数值的乘积。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果操作数都是数值，执行常规的乘法计算。如果乘积超过了ECMAScript数值的表示范围，则返回Infinity或-Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"与\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"相乘，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"与 非\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"数值相乘，则结果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"-Infinity\")]),_vm._v(\"，取决于有符号操作数的符号；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"与\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"相乘，则结果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数不是数值，则在后台调用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"将其转换为数值，然后再应用上面的\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"除法\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"/\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果操作数都是数值，执行常规的除法计算。如果商超过了ECMAScript数值的表示范围，则返回Infinity或-Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数是NaN，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"被\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"除，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"被\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"除，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果是非\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"的有限数被\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"除，则结果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"-Infinity\")]),_vm._v(\"，取决于有符号操作数的符号；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"被任何非零数值除，则结果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"-Infinity\")]),_vm._v(\"，取决于有符号操作数的符号；\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数不是数值，则在后台调用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"将其转换为数值，然后再应用上面的规则。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"求模\")]),_vm._v(\": \"),_c('code',[_vm._v(\"%\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果操作数都是数值，执行常规的除法计算，返回除得的余数；\")])]),_c('li',[_c('p',[_vm._v(\"如果被除数是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"值而除数是有限大的数值，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果被除数是有限大的数值而除数是\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果是\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"被\"),_c('code',[_vm._v(\"Infinity\")]),_vm._v(\"除，则结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果被除数是有限大的数值而除数是Infinity，则结果是被除数；\")])]),_c('li',[_c('p',[_vm._v(\"如果被除数是\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"，则结果是\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"；\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数不是数值，则在后台调用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"将其转换为数值，然后再应用上面的规则。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"加性操作符：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#加性操作符：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 加性操作符：\"),_c('code',[_vm._v(\"+\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"加法\")]),_vm._v(\":\\n如果两个操作符都是数值，执行常规的加法计算，然后根据下列规则返回结果：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果有一个操作数是NaN，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是Infinity加Infinity，则结果是Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果是-Infinity加-Infinity，则结果是-Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果是Infinity加-Infinity，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是+0加+0，则结果是+0；\")])]),_c('li',[_c('p',[_vm._v(\"如果是-0加-0，则结果是-0；\")])]),_c('li',[_c('p',[_vm._v(\"如果是+0加-0，则结果是+0。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果两个操作数都是字符串，则将第二个操作数与第一个操作数拼接起来；\")])]),_c('li',[_c('p',[_vm._v(\"如果只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接 起来。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果有一个操作数是对象、数值或布尔值，则调用它们的\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\"方法取得相应的字符串值，然后再应用前面关于字符串的规则。对于\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"，则分别调用\"),_c('code',[_vm._v(\"String()\")]),_vm._v(\"函数并取得字符串\\\"undefined\\\"和\\\"null\\\"\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"减性操作符：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#减性操作符：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \\b减性操作符：\"),_c('code',[_vm._v(\"-\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果有一个操作数是NaN，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是Infinity减Infinity，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是-Infinity减-Infinity，则结果是NaN；\")])]),_c('li',[_c('p',[_vm._v(\"如果是Infinity减-Infinity，则结果是Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果是-Infinity减Infinity，则结果是-Infinity；\")])]),_c('li',[_c('p',[_vm._v(\"如果是+0减+0，则结果是+0；\")])]),_c('li',[_c('p',[_vm._v(\"如果是+0减-0，则结果是-0；\")])]),_c('li',[_c('p',[_vm._v(\"如果是-0减+0，则结果是+0；\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果有一个操作数是字符串、布尔值、\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，则先在后台调用\"),_c('code',[_vm._v(\"Number()\")]),_vm._v(\"函数将其转换为数值，然后再根据前面的规则执行减法计算。如果转换的结果是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则减法的结果就是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"；\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果有一个操作数是对象，则调用对象的\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法以取得表示该对象的数值。如果得到的值是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"，则减法的结果就是\"),_c('code',[_vm._v(\"NaN\")]),_vm._v(\"。如果对象没有\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法，则调用其\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\"方法并将得到的字符串转换为数值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"关系操作符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#关系操作符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 关系操作符:\"),_c('code',[_vm._v(\"<\")]),_vm._v(\",\"),_c('code',[_vm._v(\">\")]),_vm._v(\",\"),_c('code',[_vm._v(\"<=\")]),_vm._v(\",\"),_c('code',[_vm._v(\">=\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果两个操作数都是数值，则执行数值比较。\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是字符串，则比较两个字符串对应的\"),_c('strong',[_vm._v(\"字符编码值\")]),_vm._v(\"。\")])]),_c('li',[_c('p',[_vm._v(\"如果一个操作数是数值，则将另一个操作数转换为一个数值，然后执行数值比较。\")])]),_c('li',[_c('p',[_vm._v(\"如果一个操作数是对象，则调用这个对象的\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法，用得到的结果按照前面的规则执行比较。如果对象没有\"),_c('code',[_vm._v(\"valueOf()\")]),_vm._v(\"方法，则调用\"),_c('code',[_vm._v(\"toString()\")]),_vm._v(\"方法，并用得到的结果根据前面的规则执行比较。\")])]),_c('li',[_c('p',[_vm._v(\"如果一个操作数是布尔值，则先将其转换为数值，然后再执行比较。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" result \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"23\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"3\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//true\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" result \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"a\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// false，因为\\\"a\\\"被转换成了NaN\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"相等操作符：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#相等操作符：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 相等操作符：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"相等和不相等\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"==\")]),_vm._v(\"\\n如果两个操作数相等，则返回true。而不相等操作符由叹号后跟等于号（\"),_c('code',[_vm._v(\"!=\")]),_vm._v(\"）表示，如果两个操作数不相等，则返回true。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这两个操作符都会先转换操作数（通常称为\"),_c('strong',[_vm._v(\"强制转型\")]),_vm._v(\"），然后再比较它们的相等性。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值；\")])]),_c('li',[_c('p',[_vm._v(\"如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值；\")])]),_c('li',[_c('p',[_vm._v(\"如果一个操作数是对象，另一个操作数不是，则调用对象的valueOf()方法，用得到的基本类型值按照前面的规则进行比较；\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"null和undefined是相等的。\")])]),_c('li',[_c('p',[_vm._v(\"要比较相等性之前，不能将null和undefined转换成其他任何值。\")])]),_c('li',[_c('p',[_vm._v(\"如果有一个操作数是NaN，则相等操作符返回false，而不相等操作符返回true。重要提示：即使两个操作数都是NaN，相等操作符也返回false；因为按照规则，NaN不等于NaN。\")])]),_c('li',[_c('p',[_vm._v(\"如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回true；否则，返回false。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"全等和不全等\")]),_vm._v(\"：\"),_c('code',[_vm._v(\"===\")]),_vm._v(\"\\n它只在两个操作数未经转换就相等的情况下返回true\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"赋值操作符：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#赋值操作符：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 赋值操作符：\"),_c('code',[_vm._v(\"=\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果在等于号（=）前面再添加乘性操作符、加性操作符或位操作符，就可以完成复合赋值操作。（\"),_c('code',[_vm._v(\"*=\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"/=\")]),_vm._v(\"，等）\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"逗号操作符：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#逗号操作符：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 逗号操作符：\"),_c('code',[_vm._v(\",\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num1 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" num2 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" num3 \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"4\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// num的值为0\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 没括号报错\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"流控制语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#流控制语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 流控制语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"if\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#if\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" if\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"condition\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    statement1\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"else\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    statement2\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"无论\"),_c('code',[_vm._v(\"condition\")]),_vm._v(\"写什么，JS会自动调用\"),_c('code',[_vm._v(\"Boolean()\")]),_vm._v(\"转换函数将这个表达式的结果转换为一个布尔值。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果\"),_c('code',[_vm._v(\"condition\")]),_vm._v(\"求值的结果是\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，则执行\"),_c('code',[_vm._v(\"statement1\")]),_vm._v(\"（语句1），否则执行\"),_c('code',[_vm._v(\"statement2\")]),_vm._v(\"（语句2）。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"do-while\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#do-while\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" do-while\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"do\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    statement\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"while-语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#while-语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" while 语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" statement\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"for-语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#for-语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" for 语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"initialization\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" post\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_vm._v(\"loop\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_vm._v(\"expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    statement\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"具有在 \"),_c('strong',[_vm._v(\"执行循环之前初始化变量\")]),_vm._v(\" 和定义 \"),_c('strong',[_vm._v(\"循环后要执行的代码\")]),_vm._v(\" 的能力。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" count \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" count\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"for-in语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#for-in语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" for-in语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"for-in\")]),_vm._v(\" 语句是一种精准的\"),_c('strong',[_vm._v(\"迭代语句\")]),_vm._v(\"，可以用来\"),_c('strong',[_vm._v(\"枚举对象的属性\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"property \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"in\")]),_vm._v(\" expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" statement\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果表示要迭代的对象的值为\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"undefined\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"for-in\")]),_vm._v(\"语句会不执行循环体。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"label语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#label语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" label语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"label\")]),_vm._v(\" 语句可以在代码中添加标签，以便将来使用。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"label\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" statement\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"start\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" count\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"start\")]),_vm._v(\"标签可以在将来由\"),_c('code',[_vm._v(\"break\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"continue\")]),_vm._v(\"语句引用，加标签的语句一般都要与 \"),_c('code',[_vm._v(\"for\")]),_vm._v(\" 语句等循环语句配合使用。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"break-和-continue语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#break-和-continue语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" break 和 continue语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"break\")]),_vm._v(\"语句会立即退出循环，强制继续执行循环后面的语句。\\n\"),_c('code',[_vm._v(\"continue\")]),_vm._v(\"语句虽然也是立即退出循环，但退出循环后会从循环的顶部继续执行。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\noutermost\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n     \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" j\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" j\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"==\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" j \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"==\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_vm._v(\" outermost\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n        num\"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"num\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//55\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"with语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#with语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" with语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"with\")]),_vm._v(\"语句的作用是将代码的\"),_c('strong',[_vm._v(\"作用域\")]),_vm._v(\"设置到一个特定的对象中。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"定义\"),_c('code',[_vm._v(\"with\")]),_vm._v(\"语句的目的主要是为了简化多次编写同一个对象的工作\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" qs \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" location\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"search\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"substring\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" hostName \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" location\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"hostname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" url \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" location\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"href\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果使用\"),_c('code',[_vm._v(\"with\")]),_vm._v(\"语句，可以把上面的代码改写成如下所示：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"with\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"location\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" qs \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" search\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"substring\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" hostName \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" hostname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" url \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" href\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"严格模式\")]),_vm._v(\"下\"),_c('strong',[_vm._v(\"不允许\")]),_vm._v(\"使用\"),_c('code',[_vm._v(\"with\")]),_vm._v(\"语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"大量使用\"),_c('code',[_vm._v(\"with\")]),_vm._v(\"语句会\"),_c('strong',[_vm._v(\"导致性能下降\")]),_vm._v(\"，同时也会给调试代码造成困难，因此在开发大型应用程序时，\"),_c('strong',[_vm._v(\"不建议使用\"),_c('code',[_vm._v(\"with\")]),_vm._v(\"语句\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"switch语句\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#switch语句\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" switch语句\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"switch\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"expression\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"case\")]),_vm._v(\" value\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n    statement\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"case\")]),_vm._v(\" value\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n    statement\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"default\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" statement\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果省略\"),_c('code',[_vm._v(\"break\")]),_vm._v(\"关键字，就会导致执行完当前\"),_c('code',[_vm._v(\"case\")]),_vm._v(\"后，继续执行下一个\"),_c('code',[_vm._v(\"case\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"当所有的\"),_c('code',[_vm._v(\"case\")]),_vm._v(\"都不匹配的时候，\\b执行\"),_c('code',[_vm._v(\"default\")]),_vm._v(\"\\b后代码。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"25\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"switch\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"case\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n        \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Less than 0.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"case\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\">=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n        \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Between 0 and 10.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"case\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" num \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"<=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"20\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n        \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Between 10 and 20.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"break\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"default\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \\n        \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"alert\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"More than 20.\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这个例子首先在\"),_c('code',[_vm._v(\"switch\")]),_vm._v(\"语句外面声明了变量\"),_c('code',[_vm._v(\"num\")]),_vm._v(\"。而之所以给\"),_c('code',[_vm._v(\"switch\")]),_vm._v(\"语句传递表达式\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，是因为每个case值都可以返回一个\"),_c('strong',[_vm._v(\"布尔值\")]),_vm._v(\"。这样，每个case按照顺序被求值，直到找到匹配的值或者遇到default语句为止。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"switch\")]),_vm._v(\"语句在比较值时使用的是\"),_c('strong',[_vm._v(\"全等操作符\")]),_vm._v(\"，因此不会发生类型转换\")])}]\n\nexport { render, staticRenderFns }"]}