{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md?vue&type=template&id=243bcd7c","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md","mtime":1539544947454},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"使用-mongodb-数据库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#使用-mongodb-数据库\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 使用\\b MongoDB 数据库\")]),_c('p',[_vm._v(\"在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.\")]),_c('h2',{attrs:{\"id\":\"什么是-mongodb\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#什么是-mongodb\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 什么是 MongoDB\")]),_c('p',[_vm._v(\"『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.\")]),_c('p',[_vm._v(\"MongoDB 将数据存储为一个文档，数据结构由键值对 \"),_c('code',[_vm._v(\"key:value\")]),_vm._v(\" 组成.  MongoDB 文档类似于 JSON 对象.  字段值可以包含其他文档，数组及文档数组.\")]),_c('p',[_vm._v(\"下面就是一个 MongoDB 集合 (collection) 示例:\")]),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    name\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Garrik\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    age\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    gender\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Male\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    job\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Frontend Developer\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"关系型数据库-非关系型数据库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#关系型数据库-非关系型数据库\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 关系型数据库 & 非关系型数据库\")]),_c('p',[_vm._v(\"前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?\")]),_c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"关系型数据库\")]),_vm._v(\" 』以 \\\"行\\\" 和 \\\"列\\\" 组成的 \\\"二维表格\\\" 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 \\\"元组\\\"（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.\")]),_c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"非关系数据库\")]),_vm._v(\" 』以 \\\"键值对\\\" 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等\")]),_c('h2',{attrs:{\"id\":\"mongodb-基础概念\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mongodb-基础概念\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" MongoDB 基础概念\")]),_c('p',[_vm._v(\"在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.\")]),_c('p',[_vm._v(\"『 数据库 』(database)\")]),_c('h2',{attrs:{\"id\":\"mongodb-基本操作\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mongodb-基本操作\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" MongoDB 基本操作\")]),_c('h2',{attrs:{\"id\":\"在-node-js-中使用-mongodb\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在-node-js-中使用-mongodb\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 在 Node.js 中使用 MongoDB\")])])}]\n\nexport { render, staticRenderFns }"]}