{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/前端开发/javascript/设计模式/结构型/代理模式.md?vue&type=template&id=ea5d1738","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/前端开发/javascript/设计模式/结构型/代理模式.md","mtime":1542130232524},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"代理模式\\\"><a href=\\\"#代理模式\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代理模式</h1><p><strong>由于一个对象不能直接引用另一个对象，所以需要通过代理对象在这两个对象之间起到中介的作用</strong>。</p><p>假如, 有一个用户相册模块上传的照片量越来越大，导致服务器端需要将图片上传模块重新部署到另外一个域（可理解为另一台服务器）中，这样对于前端来说，用户上传图片的请求路径发生变化，指向其他服务器，这就导致跨域问题。</p><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 当前域www.xx.com</span>\\n$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ajax</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n　　url <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://upload.xx.com/upload.php'</span><span class=\\\"token punctuation\\\">,</span>\\n　　success <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n　　　　<span class=\\\"token comment\\\">// 无法获取返回的数据</span>\\n　　<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><div class=\\\"language-js extra-class\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">// 浏览器控制台报错：XMLHttpRequest cannot load http://upload.xx.com/upload.php. No 'Access-Control-Allow-Origin' header is present on the requested resource.</span>\\n</code></pre></div><p>由于JavaScript对安全访问因素的考虑，不允许跨域调用其他页面，这里的域你可以想象成域名，比如百度的域名http://www.baidu.com，淘宝的域名http://www.taobao.com，不同域名下的页面是不能直接调用的。这样百度域名下的页面是不允许直接调用淘宝页面。这也是一种JavaScript中因同源策略所定义的限制，不过仅此一点限制还不够，JavaScript还对同一域名不同的端口号、同一域名不同协议、域名和域名对应的IP、主域与子域、子域与子域等做了限制，都不能直接调用。</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}