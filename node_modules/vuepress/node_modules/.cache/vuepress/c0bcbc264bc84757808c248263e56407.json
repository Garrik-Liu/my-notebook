{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/数据库/mongodb/基础知识/\b基础操作.md?vue&type=template&id=6cc33f19","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/数据库/mongodb/基础知识/\b基础操作.md","mtime":1539573377460},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"基础操作\\\"><a href=\\\"#基础操作\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 基础操作</h1><h2 id=\\\"mongodb-shell\\\"><a href=\\\"#mongodb-shell\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> MongoDB shell</h2><p>MongoDB 自带 JavaScript shell，可在 shell 中使用命令行与 MongoDB 实例交互。</p><p>启动时，shell 将自动连接 MongoDB 服务器, 但是要先确保已经用 <code>mongod</code> 指令开启了 MongDB 服务器.</p><p>shell 是一个功能完备的 JavaScript 解释器，可运行任意 JavaScript 程序.  shell 会检测输入的 JavaScript 语句是否完整，如没写完可在下一行接着写.</p><div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token keyword\\\">function</span> sayHello<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">..</span>. <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">&quot;Hello World&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">..</span>. <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token operator\\\">&gt;</span> sayHello<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nHello World\\n<span class=\\\"token operator\\\">&gt;</span> \\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}