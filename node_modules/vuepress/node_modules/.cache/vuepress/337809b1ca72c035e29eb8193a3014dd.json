{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/others/http/http报文信息.md?vue&type=template&id=c395fa82","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/others/http/http报文信息.md","mtime":1532111593326},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('p',[_c('router-link',{attrs:{\"to\":\"./\"}},[_vm._v(\"返回目录\")])],1),_vm._m(0),_c('p',[_vm._v(\"用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的 HTTP 报文叫做请求报文，响应端（服务器端）的叫做响应报文。\")]),_c('p',[_vm._v(\"HTTP 报文本身是由多行数据构成的字符串文本。\")]),_c('p',[_vm._v(\"HTTP 报文可分为 报文首部 和 报文主体 两块。两者由最初出现的空行来划分。\")]),_vm._m(1),_vm._m(2),_vm._m(3),_vm._m(4),_vm._m(5),_c('p',[_vm._v(\"HTTP 在传输数据时 可以按照 数据原貌 直接传输 原始数据.\\n但 也可以在 传输过程中 通过编码 提升 传输速率。\")]),_vm._m(6),_vm._m(7),_c('p',[_vm._v(\"HTTP 报文的主体 用于传输 请求或响应的 实体主体。\")]),_c('p',[_vm._v(\"通常，报文主体 等于 实体主体。只有当传输中进行编码操作时，实体主体的内容 发生变化，才导致 它和报文主体 产生差异。\")]),_vm._m(8),_c('p',[_vm._v(\"向待发送邮件内增加附件时，为了使邮件容量变小，我们会先用 ZIP 压缩文件之后再添加附件发送。\")]),_vm._m(9),_c('p',[_vm._v(\"内容编码 指明 应用在实体内容上的 编码格式，内容编码后的实体由客户端接收并负责解码。\")]),_c('p',[_vm._v(\"常用的内容编码有以下几种:\")]),_vm._m(10),_vm._m(11),_c('p',[_vm._v(\"在 HTTP 通信过程中，请求的编码实体资源尚未全部传输完成之前，浏览器无法显示请求页面。\")]),_c('p',[_vm._v(\"在传输大容量数据时，通过把数据分割成多块，能够让浏览器逐步显示页面。\")]),_vm._m(12),_c('p',[_vm._v(\"分块传输编码会将实体主体分成多个块, 每一块都会用十六进制来标记块的大小，而实体主体的最后一块会使用“0(CR+LF)”来标记。\")]),_c('p',[_vm._v(\"使用分块传输编码的实体主体会由接收的客户端负责解码，恢复到编码前的实体主体。\")]),_vm._m(13),_c('p',[_vm._v(\"发送邮件时，我们可以在邮件里写入文字并添加多份附件。这是因为采用了 MIME 机制（Multipurpose Internet Mail Extensions，多用途因特网邮件扩展）\")]),_c('p',[_vm._v(\"它允许邮件处理文本、图片、视频等多个不同类型的数据\")]),_c('p',[_vm._v(\"在 MIME 扩展中使用一种称为 多部分对象集合（Multipart）的方法，来容纳多种不同类型的数据。\")]),_c('p',[_vm._v(\"HTTP 协议中也采纳了多部分对象集合，发送的一份报文主体内可含有多类型实体。通常是在图片或文本文件等上传时使用。\")]),_c('p',[_vm._v(\"多部分对象集合包含的对象如下:\")]),_vm._m(14),_vm._m(15),_c('p',[_vm._v(\"多部分对象集合的每个部分类型中，都可以含有首部字段。另外，可以在某个部分中嵌套使用多部分对象集合。\")]),_vm._m(16),_c('p',[_vm._v(\"以前，下载一个尺寸稍大的图片或文件就已经很吃力了。如果下载过程中遇到网络中断的情况，那就必须重头开始。为了解决上述问题，需要一种可恢复的机制。所谓恢复是指能从之前下载中断处恢复下载。\")]),_c('p',[_vm._v(\"要实现该功能需要指定下载的实体范围。\\n指定范围发送的请求叫做范围请求（Range Request）\")]),_c('p',[_vm._v(\"对一份 10 000 字节大小的资源，如果使用范围请求，可以只请求 5001~10 000 字节内的资源。\")]),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_vm._m(21),_vm._m(22),_c('p',[_vm._v(\"同一个 Web 网站有可能存在着多份相同内容的页面。比如英语版和中文版的 Web 页面\")]),_c('p',[_vm._v(\"当浏览器的默认语言为英语或中文，访问相同 URI 的 Web 页面时，则会显示对应的英语版或中文版的 Web 页面。这样的机制称为内容协商（Content Negotiation）。\")]),_c('p',[_vm._v(\"包含在请求报文中的某些首部字段（如下）就是判断的基准:\")]),_vm._m(23),_c('p',[_vm._v(\"内容协商技术有以下 3 种类型:\")]),_vm._m(24)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"http-报文信息\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#http-报文信息\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" HTTP 报文信息\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"报文结构\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#报文结构\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 报文结构\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/NRDIPvv.png\",\"alt\":\"Screen Shot 2018-07-10 at 4.06.15 PM\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/Lm3QkYJ.png\",\"alt\":\"Screen Shot 2018-07-10 at 4.06.45 PM\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"请求行\\n包含 用于请求的 方法，请求 URI 和 HTTP 版本。\")])]),_c('li',[_c('p',[_vm._v(\"状态行\\n包含 表明响应结果的 状态码，原因短语和 HTTP 版本。\")])]),_c('li',[_c('p',[_vm._v(\"首部字段\\n包含表示 请求和响应 的 各种条件 和 属性 的各类首部。\\n一般有 4 种首部，分别是：通用首部、请求首部、响应首部 和 实体首部。\")])]),_c('li',[_c('p',[_vm._v(\"其他\\n可能包含 HTTP 的 RFC 里未定义的首部（例如: Cookie）\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"编码-提升-传输速率\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#编码-提升-传输速率\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 编码 提升 传输速率\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"报文主体-和-实体主体的-差异\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#报文主体-和-实体主体的-差异\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 报文主体 和 实体主体的 差异\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"报文（message）\\n是 HTTP 通信中的基本单位，由 8 位组字节流（octet sequence）组成，通过 HTTP 通信传输。\")])]),_c('li',[_c('p',[_vm._v(\"实体（entity）\\n作为请求或响应的有效载荷数据（补充项）被传输，其内容由实体首部和实体主体组成。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"内容编码\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#内容编码\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 内容编码\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"HTTP 协议中通过指定\"),_c('strong',[_vm._v(\"内容编码\")]),_vm._v(\"也能进行类似的操作。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"gzip（GNU zip）\")]),_c('li',[_vm._v(\"compress（UNIX 系统的标准压缩）\")]),_c('li',[_vm._v(\"deflate（zlib）\")]),_c('li',[_vm._v(\"identity（不进行编码）\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"分块传输编码\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#分块传输编码\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 分块传输编码\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这种把实体主体分块的功能称为\"),_c('strong',[_vm._v(\"分块传输编码\")]),_vm._v(\"（Chunked Transfer Coding）\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"mime-多部分对象集合\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mime-多部分对象集合\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \\bMIME 多部分对象集合\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_c('code',[_vm._v(\"multipart/form-data\")]),_vm._v(\"\\n在 Web 表单文件上传时使用\")])]),_c('li',[_c('p',[_c('code',[_vm._v(\"multipart/byteranges\")]),_vm._v(\"\\n状态码 206（Partial Content，部分内容）响应报文包含了多个范围的内容时使用。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"在 HTTP 报文中使用多部分对象集合时，需要在首部字段里指明 \"),_c('code',[_vm._v(\"Content-type\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"范围请求\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#范围请求\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 范围请求\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"执行范围请求时，会用到首部字段 \"),_c('code',[_vm._v(\"Range\")]),_vm._v(\" 来指定资源的 \"),_c('code',[_vm._v(\"byte\")]),_vm._v(\" 范围。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 5001~10 000 字节 \")]),_vm._v(\"\\nRange: bytes \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" 5001-10000\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 从 5001 字节之后全部的\")]),_vm._v(\"\\nRange: bytes \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" 5001-\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 从一开始到 3000 字节和 5000~7000 字节的多重范围\")]),_vm._v(\"\\nRange: bytes \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" 0-3000, 5000-7000\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"针对范围请求，响应会返回状态码为 \"),_c('code',[_vm._v(\"206\")]),_vm._v(\" Partial Content 的响应报文。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"对于多重范围的范围请求，响应会在首部字段 \"),_c('code',[_vm._v(\"Content-Type\")]),_vm._v(\" 标明 \"),_c('code',[_vm._v(\"multipart/byteranges\")]),_vm._v(\" 后返回响应报文。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果服务器端无法响应范围请求，则会返回状态码 \"),_c('code',[_vm._v(\"200\")]),_vm._v(\" OK 和完整的实体内容。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"内容协商\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#内容协商\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 内容协商\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"Accept\")]),_c('li',[_vm._v(\"Accept-Charset\")]),_c('li',[_vm._v(\"Accept-Encoding\")]),_c('li',[_vm._v(\"Accept-Language\")]),_c('li',[_vm._v(\"Content-Language\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('p',[_vm._v(\"服务器驱动协商（Server-driven Negotiation）\\n由服务器端进行内容协商。以请求的首部字段为参考，在服务器端自动处理。但对用户来说，以浏览器发送的信息作为判定的依据，并不一定能筛选出最优内容。\")])]),_c('li',[_c('p',[_vm._v(\"客户端驱动协商（Agent-driven Negotiation）\\n由客户端进行内容协商的方式。用户从浏览器显示的可选项列表中手动选择。还可以利用 JavaScript 脚本在 Web 页面上自动进行上述选择。比如按 OS 的类型或浏览器类型，自行切换成 PC 版页面或手机版页面。\")])]),_c('li',[_c('p',[_vm._v(\"透明协商（Transparent Negotiation）\\n是服务器驱动和客户端驱动的结合体，是由服务器端和客户端各自进行内容协商的一种方法。\")])])])}]\n\nexport { render, staticRenderFns }"]}