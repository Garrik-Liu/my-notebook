{"remainingRequest":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md?vue&type=template&id=0a8c50ca","dependencies":[{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/docs/个人心得/前端教程/NodeJs/入门篇/使用MongoDB数据库.md","mtime":1545179401314},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1532111597631},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/cache-loader/dist/cjs.js","mtime":1532111594974},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vue-loader/lib/index.js","mtime":1532111597630},{"path":"/Users/xiangliu/Projects/Web/front-end-notebook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1532111597717}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_c('p',[_vm._v(\"在这一节让我们开始学着在 Node.js 中使用 MongoDB 数据库.\")]),_vm._m(1),_c('p',[_vm._v(\"『 MongoDB 』 是由 C++ 语言编写的, 基于分布式文件存储的数据库. 属于 NoSql (非关系型数据库) 的一种, 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案.\")]),_vm._m(2),_c('p',[_vm._v(\"下面就是一个 MongoDB 文档 (document) 示例:\")]),_vm._m(3),_vm._m(4),_c('p',[_vm._v(\"前面说到 MongoDB 是属于非关系型数据库的一种, 那么什么是关系型? 什么是非关系型?\")]),_vm._m(5),_vm._m(6),_vm._m(7),_c('p',[_vm._v(\"在具体讲如何使用 MongoDB 之前, 我要先介绍一些基本概念.\")]),_vm._m(8),_vm._m(9),_vm._m(10),_vm._m(11),_c('p',[_vm._v(\"文档中的值可以是多种不同的数据类型. 在一个集合中各个文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型.\")]),_c('p',[_vm._v(\"MongoDB 区分类型和大小写. 例如，下面的两个文档是不同的：\")]),_vm._m(12),_c('p',[_vm._v(\"在给文档的\\b \\\"键\\\" 命名时还需要注意:\")]),_vm._m(13),_vm._m(14),_vm._m(15),_c('p',[_vm._v(\"\\b下面是一个集合示例:\")]),_vm._m(16),_c('p',[_vm._v(\"虽然 MongoDB 对集合中的文档类型没有要求, 但通常情况下我们插入集合的数据都会有一定的关联性.  这样会降低查询\\b特定文档的复杂度, 并且提升查询速度.\")]),_c('p',[_vm._v(\"集合命名时需要注意:\")]),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_c('p',[_vm._v(\"数据库名可以是满足以下条件的任意 UTF-8 字符串:\")]),_vm._m(21),_c('p',[_vm._v(\"数据库最终会变成文件系统里的文件，而数据库名就是相应的文件名\")]),_c('p',[_vm._v(\"\\b文档, 表单, 数据库之间的关系如下图:\")]),_vm._m(22),_vm._m(23),_c('p',[_vm._v(\"这篇文章我不想过多讲安装步骤, 大家可以自行去查阅方法.\")]),_c('p',[_c('a',{attrs:{\"href\":\"http://www.runoob.com/mongodb/mongodb-window-install.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Windows 平台安装 MongoDB - 菜鸟教程\"),_c('OutboundLink')],1),_c('a',{attrs:{\"href\":\"http://www.runoob.com/mongodb/mongodb-osx-install.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Mac 平台安装 MongoDB - 菜鸟教程\"),_c('OutboundLink')],1)]),_c('p',[_vm._v(\"为了更方便的管理 MongoDB 数据库, 我推荐使用 Studio 3T 可视化工具.\")]),_c('p',[_c('a',{attrs:{\"href\":\"https://studio3t.com/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Studio 3T - 官网\"),_c('OutboundLink')],1)]),_c('p',[_vm._v(\"使用方法可参照下面链接内容:\")]),_c('p',[_c('a',{attrs:{\"href\":\"https://blog.csdn.net/weixin_39999535/article/details/81383196\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Studio 3T 使用方法\"),_c('OutboundLink')],1)]),_vm._m(24),_c('p',[_c('a',{attrs:{\"href\":\"http://mongodb.github.io/node-mongodb-native/3.1/api/index.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"mongodb 模块 - 文档\"),_c('OutboundLink')],1)]),_c('p',[_vm._v(\"想要在 Node.js 中使用\\b MongoDB, 要先安装 \"),_c('a',{attrs:{\"href\":\"https://www.npmjs.com/package/mongodb\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"mongodb 模块\"),_c('OutboundLink')],1),_vm._v(\", 具体步骤不赘述.  在 Node.js 中使用之前, 还需要先在命令行中用 \"),_c('code',[_vm._v(\"mongod\")]),_vm._v(\" 指令运行 MongoDB 服务器.\")]),_vm._m(25),_vm._m(26),_c('p',[_vm._v(\"要想连接 MongoDB 数据库, 我们要先创建一个 MongoDB 客户端并且连接上 MongoDB 服务器.  之后在此连接之上创建数据库实例.\")]),_vm._m(27),_vm._m(28),_vm._m(29),_vm._m(30),_c('p',[_vm._v(\"区别是:\")]),_vm._m(31),_c('p',[_vm._v(\"这两个方法的最后一个参数都为回调函数.  回调函数的第一个参数为错误信息, 第二个为处理结果\")]),_vm._m(32),_vm._m(33),_vm._m(34),_vm._m(35),_vm._m(36),_vm._m(37),_vm._m(38),_vm._m(39),_vm._m(40),_vm._m(41),_c('p',[_vm._v(\"假如集合中的文档有如下:\")]),_vm._m(42),_c('p',[_vm._v(\"那么执行上面代码匹配到的为:\")]),_vm._m(43),_vm._m(44),_vm._m(45),_vm._m(46),_vm._m(47),_vm._m(48),_c('p',[_vm._v(\"MongoDB 中有两种方式进行 OR 查询:\")]),_vm._m(49),_vm._m(50),_vm._m(51),_vm._m(52),_vm._m(53),_vm._m(54),_vm._m(55),_vm._m(56),_vm._m(57),_vm._m(58),_vm._m(59)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"使用-mongodb-数据库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#使用-mongodb-数据库\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 使用\\b MongoDB 数据库\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"什么是-mongodb\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#什么是-mongodb\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 什么是 MongoDB\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"MongoDB 将数据存储为一个文档，\"),_c('strong',[_vm._v(\"数据结构由键值对 \"),_c('code',[_vm._v(\"key:value\")]),_vm._v(\" 组成.  MongoDB 文档类似于 JSON 对象.\")]),_vm._v(\"  字段值可以包含其他文档，数组及文档数组.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Garrik\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"age\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Male\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"job\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Frontend Developer\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"关系型数据库-非关系型数据库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#关系型数据库-非关系型数据库\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 关系型数据库 & 非关系型数据库\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"关系型数据库\")]),_vm._v(\" 』以 \\\"行\\\" 和 \\\"列\\\" 组成的 \\\"二维表格\\\" 形式来存储数据, 二维表格简称为称为表, 表又组成了数据库.  之所以称之为关系型数据库, 因为表与表之间采用了现实世界中实体 (entitiy) 与实体 (entitiy) 之间的关系模型.  表中存储格式化结构的数据，每个 \\\"元组\\\"（可以理解为二维表中的一行）的字段组成都是一样的.  即使不是每个元组都需要所有的字段，但数据库会为每个元组都分配所有的字段，这样的结构可以便于表与表之间进行连接等操作.  比较常见的关系型数据库有 Oracle, MySQL 等.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"非关系数据库\")]),_vm._v(\" 』以 \\\"键值对\\\" 存储，它的结构不固定，每一个元组可以有不一样的字段，可以根据需要增加或减少一些自己的键值对，不会局限于固定的结构.  数据之间的关联性不强制, 使用起来要比关系型数据库更加灵活, 性能也有提升.  比较常见的非关系型数据库有  MongoDB, Redis 等\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"mongodb-基础概念\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mongodb-基础概念\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" MongoDB 基础概念\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"文档-document\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#文档-document\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 文档 (document)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"文档\")]),_vm._v(\" 』是\\b一组 \\\"键值对\\\" 的有序集合.  是 MongoDB 的核心概念.  文档的数据结构被称为 BSON, 是一种类似于 JSON 的二进制形式的存储格式.  下面是一个文档示例\\b:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Garrik\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"age\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\"age\\\"\")]),_vm._v(\" 是这个文档的 \\\"键\\\" (key), \"),_c('code',[_vm._v(\"\\\"Garrik\\\"\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"21\")]),_vm._v(\" 是 \\\"值\\\" (value)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"foo\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"Foo\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"3\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"文档的键必须是字符串\")]),_c('li',[_vm._v(\"键不能含有 \"),_c('code',[_vm._v(\"\\\\0\")]),_vm._v(\" (空字符)。这个字符用来表示键的结尾\")]),_c('li',[_c('code',[_vm._v(\".\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\" 有特别的意义，只有在特定环境下才能使用\")]),_c('li',[_vm._v(\"以下划线 \"),_c('code',[_vm._v(\"_\")]),_vm._v(\"开头的键是保留的 (不是严格要求的)\")]),_c('li',[_vm._v(\"一个文档内不能有重复的键\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"集合-collection\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#集合-collection\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 集合 (collection)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"集合\")]),_vm._v(\" 』就是一组文档，如果将 MongoDB 中的一个文档比喻为关系型数据库中的一行，那么一个集合就相当于一张表.  集合存在于数据库中，当第一个文档插入时，集合就会被创建.  集合没有固定的结构，一个集合里面的文档可以是各式各样的，这被称为 『 动态模式 』\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"site\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"www.baidu.com\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"百度\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"site\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"www.google.com\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Google\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"query\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"search\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"前端开发\\\"\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"site\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"www.zhihu.com\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"知乎\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"username\\\"\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"罐装汽水_Garrik\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"集合名不能是空字符串。\")]),_c('li',[_vm._v(\"集合名不能含有 \"),_c('code',[_vm._v(\"\\\\0\")]),_vm._v(\"（空字符)，这个字符表示集合名的结尾。\")]),_c('li',[_vm._v(\"集合名不能以 \"),_c('code',[_vm._v(\"system.\")]),_vm._v(\" 开头，这是为系统集合保留的前缀。\")]),_c('li',[_vm._v(\"用户创建的集合名字不能含有保留字符 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\"。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"数据库-database\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数据库-database\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数据库 (database)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"『 \"),_c('strong',[_vm._v(\"数据库\")]),_vm._v(\" 』由多个集合组成.  在 MongoDB 中可以建立多个数据库。每个数据库都有独立的权限，即便是在磁盘上，不同的数据库也放置在不同的文件中。按照经验，我们将有关一个应用程序的所有数据都存储在同一个数据库中。要想在同一个 MongoDB 服务器上存放多个应用程序或者用户的数据，就需要使用不同的数据库。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"MongoDB 的默认数据库为 \"),_c('code',[_vm._v(\"\\\"db\\\"\")]),_vm._v(\"，该数据库存储在 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 目录中。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"不是空字符串\")]),_c('li',[_vm._v(\"不得含有 \"),_c('code',[_vm._v(\"空格\")]),_vm._v(\"、\"),_c('code',[_vm._v(\".\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"$\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"/\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\\0\")]),_vm._v(\" (空字符)\")]),_c('li',[_vm._v(\"数据库名区分大小写, 推荐全部小写\")]),_c('li',[_vm._v(\"最多 64 字节\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://i.imgur.com/LhMQBtL.png\",\"alt\":\"Screen Shot 2018-10-14 at 5.48.11 PM\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"安装-mongodb-可视化工具\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#安装-mongodb-可视化工具\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 安装 MongoDB & 可视化工具\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"在-node-js-中使用-mongodb\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在-node-js-中使用-mongodb\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 在 Node.js 中使用 MongoDB\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"以下代码适用于 mongodb 模块 3.x 版本\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"连接数据库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#连接数据库\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 连接数据库\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 引入模块\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" MongoClient \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'mongodb'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"MongoClient\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// MongoDB 服务器的地址\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" url \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'mongodb://localhost:27017'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 目标数据库的名字\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" dbname \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'mydb'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 创建 MongoDB 客户端\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" client \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"MongoClient\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"url\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 让客户端连接上服务器\")]),_vm._v(\"\\nclient\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"成功连接到 MongoDB 服务器!\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 创建数据库实例\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 断开连接 \")]),_vm._v(\"\\n    client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"插入文档\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#插入文档\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 插入文档\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"要想向一个特定的集合插入文档, 首先我们用 \"),_c('code',[_vm._v(\"db.collection\")]),_vm._v(\" 方法去获取目标集合的实例对象.  该方法第一个参数为集合的名字.  如果用这个名字的集合之前不存在, 它会自动帮你创建.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"之后我们用刚刚获得的集合实例的 \"),_c('code',[_vm._v(\"insertMany\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"insertOne\")]),_vm._v(\" 方法来向集合插入文档.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"insertOne\")]),_vm._v(\" 用以插入单个文档, 第一个参数为文档对象\")]),_c('li',[_c('code',[_vm._v(\"insertMany\")]),_vm._v(\" 用以插入多个文档, 第一个参数为由文档对象组成的数组\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"假如说我们现在要向 \"),_c('code',[_vm._v(\"usersInfo\")]),_vm._v(\" 集合插入用户信息, 代码如下:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 获取 'usersInfo' 集合的实例对象.\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" collection \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" db\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"collection\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'usersInfo'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 插入单个用户的信息\")]),_vm._v(\"\\n    collection\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"insertOne\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        name\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"Garrik\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n        date_of_birth\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Date\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"1997-06-04\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        \\n        client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"查询全部文档\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#查询全部文档\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 查询全部文档\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果我们想查询一个集合下的全部文档, 我们可以使用集合实例的 \"),_c('code',[_vm._v(\"find\")]),_vm._v(\" 方法.  该方法的第一个参数为查询条件对象, 如果传入一个空对象 \"),_c('code',[_vm._v(\"{}\")]),_vm._v(\" 则表示查询全部文档.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_vm._v(\"client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 获取 'usersInfo' 集合的实例对象.\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" collection \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" db\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"collection\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'usersInfo'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 查询集合下的所有文档, 然后用 toArray 转换成数组\")]),_vm._v(\"\\n    collection\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"find\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"toArray\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"查询特定文档\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#查询特定文档\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 查询特定文档\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"前面说集合实例的 \"),_c('code',[_vm._v(\"find\")]),_vm._v(\" 方法的第一个参数为查询条件对象.  想要查找特定文档的前提是知道怎么写查询条件对象.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"首先, 平时最常用的查询是找到有特定 \\\"键值对\\\" 的文档.  比如找到 \\\"文档中有 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 键, 且它的值为 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\"\\\".  这个查询写成查询条件对象是: \"),_c('code',[_vm._v(\"{'name':'小明'}\")]),_vm._v(\".  假如要查询的文档在 \"),_c('code',[_vm._v(\"usersInfo\")]),_vm._v(\" 集合下, 在 Node.js 的代码就为:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 客户端连接上服务器\")]),_vm._v(\"\\nclient\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"成功连接到 MongoDB 服务器!\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 创建数据库实例\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//查询 'name' 等于 '小明' 的文档\")]),_vm._v(\"\\n    db\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"collection\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'usersInfo'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"find\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'name'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'小明'\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"toArray\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" array\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 打印出匹配到的文档\")]),_vm._v(\"\\n        console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"array\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 关闭客户端\")]),_vm._v(\"\\n        client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果再想加一条 \"),_c('code',[_vm._v(\"gender\")]),_vm._v(\" 键的值 等于 \"),_c('code',[_vm._v(\"male\")]),_vm._v(\".  那查询条件对象就为 \"),_c('code',[_vm._v(\"{'name':'小明', 'gender':'male'}\")]),_vm._v(\"  查询条件对象中各个条件是 AND 的关系.  也就是只匹配 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 键的值等于 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\", 且 \"),_c('code',[_vm._v(\"gender\")]),_vm._v(\" 键的值为 \"),_c('code',[_vm._v(\"male\")]),_vm._v(\" 的文档.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"_id\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" ObjectId(\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5bd1e7df8a5c0550f4722b01\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"小明\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"male\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"_id\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" ObjectId(\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5bd1e7e28a5c0550f4722b02\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"小明\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"female\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"_id\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" ObjectId(\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5bd1e7e88a5c0550f4722b03\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"小红\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"female\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"_id\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" ObjectId(\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5bd1e7f48a5c0550f4722b04\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"小王\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"male\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-json extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"_id\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" ObjectId(\"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5bd1e7df8a5c0550f4722b01\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"小明\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"gender\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"male\\\"\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"数值比较\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数值比较\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数值比较\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"上面的查询条件都是精确匹配, 也就是匹配文档中某个键的值是否等于多少.  平时常用的另一个查询是范围比较.  也就是 \"),_c('code',[_vm._v(\"<\")]),_vm._v(\", \"),_c('code',[_vm._v(\">\")]),_vm._v(\", \"),_c('code',[_vm._v(\"<=\")]),_vm._v(\", \"),_c('code',[_vm._v(\">=\")]),_vm._v(\", \"),_c('code',[_vm._v(\"!=\")]),_vm._v(\".  它们对应的 MongoDB 关键字为 \"),_c('code',[_vm._v(\"$lt\")]),_vm._v(\", \"),_c('code',[_vm._v(\"$gt\")]),_vm._v(\", \"),_c('code',[_vm._v(\"$lte\")]),_vm._v(\", \"),_c('code',[_vm._v(\"$gte\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"比如要匹配 \"),_c('code',[_vm._v(\"age\")]),_vm._v(\" 键的值小于 60, 那么查询条件对象为 \"),_c('code',[_vm._v(\"{'age': {$lt:60}}\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"如果在小于 60 的同时还要大于 18, 那就是 \"),_c('code',[_vm._v(\"{'age': {$lt:60, $gt:18}}\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"or-查询\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#or-查询\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" OR 查询\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"$in\")]),_vm._v(\" 关键字可以查询一个键的多个值\")]),_c('li',[_c('code',[_vm._v(\"$or\")]),_vm._v(\" 可以用于多个键值对.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"比如我们要查 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 键的值为 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\" 或者 \"),_c('code',[_vm._v(\"小红\")]),_vm._v(\" 的文档. 用 \"),_c('code',[_vm._v(\"$in\")]),_vm._v(\" 的话, 文档查询对象为 \"),_c('code',[_vm._v(\"{'name': {$in: ['小明', '小红']}}\")]),_vm._v(\";  用 \"),_c('code',[_vm._v(\"$or\")]),_vm._v(\" 的话, 文档查询对象为 \"),_c('code',[_vm._v(\"{$or:[{'name':'小明'}, {'name':'小红'}]}\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"但如果我们要查 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 键的值为 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"小红\")]),_vm._v(\", 或者 \"),_c('code',[_vm._v(\"gender\")]),_vm._v(\" 键的值为 \"),_c('code',[_vm._v(\"male\")]),_vm._v(\" 的文档的话, \"),_c('code',[_vm._v(\"$in\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$or\")]),_vm._v(\" 结合使用会很方便.  其文档查询对象为 \"),_c('code',[_vm._v(\"{$or:[{'name':{$in:['小明','小红']}}, {'gender':'male'}]}\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"更新文档\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#更新文档\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 更新文档\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"使用集合实例的 \"),_c('code',[_vm._v(\"updateOne\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"updateMany\")]),_vm._v(\" 方法可以更新文档.  它们的第一个参数为查询对象, 用来匹配到需要更新的文档.  第二个参数为更新对象, 也就是要应用于文档上的更新内容.  最后一个参数为回调函数, 回调函数第一个参数为错误信息, 第二个为操作结果.  这两个方法的区别是 \"),_c('code',[_vm._v(\"updateOne\")]),_vm._v(\" 只更新匹配到的第一个文档, \"),_c('code',[_vm._v(\"updateMany\")]),_vm._v(\" 更新所有匹配到的文档.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"比如我们要更新 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 键的值为 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\" 的文档的 \"),_c('code',[_vm._v(\"age\")]),_vm._v(\" 键为 22.  Node.js 代码如下: (注意更新对象里面的 \"),_c('code',[_vm._v(\"$set\")]),_vm._v(\" 关键字)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 客户端连接上服务器\")]),_vm._v(\"\\nclient\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"成功连接到 MongoDB 服务器!\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 创建数据库实例\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//查询 'name' 等于 '小明' 的文档, 然后更新 `age` 键\")]),_vm._v(\"\\n    db\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"collection\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'usersInfo'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"updateOne\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'name'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'小明'\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" $\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'age'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token number\"}},[_vm._v(\"22\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 关闭客户端\")]),_vm._v(\"\\n        client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"删除文档\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#删除文档\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 删除文档\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"想要删除一个文档可以用 \"),_c('code',[_vm._v(\"deleteOne\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"deleteMany\")]),_vm._v(\" 方法.  第一参数为查询对象, 最后一个参数为回调函数.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"比如我们要删除 \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"小明\")]),_vm._v(\" 的第一个文档. Node.js 代码如下:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 客户端连接上服务器\")]),_vm._v(\"\\nclient\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"connect\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"成功连接到 MongoDB 服务器!\\\"\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 创建数据库实例\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" db \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"db\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"dbname\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n    \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"//删除 'name' 等于 '小明' 的第一条文档\")]),_vm._v(\"\\n    db\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"collection\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'usersInfo'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"deleteOne\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'name'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'小明'\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_vm._v(\" err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n        console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"result\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n        \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 关闭客户端\")]),_vm._v(\"\\n        client\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"close\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])}]\n\nexport { render, staticRenderFns }"]}